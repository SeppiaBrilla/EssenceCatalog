language ESSENCE' 1.0

given nnodes: int(1..)
given nrings: int(1..)
given capacity: int(1..)
given fin1: int
given demand_ExplicitR2_Occurrence:
        matrix indexed by [int(1..fin1), int(1..nnodes)] of bool
find network_ExplicitWithRepetitionR6_Flag: int(0..nrings * nrings)
find network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..nrings * nrings), int(1..capacity)] of int(1..nnodes +
                                                                                1)
minimising
    sum([toInt(q11 <= network_ExplicitWithRepetitionR6_Flag) *
         sum([toInt(network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q11,
                                                                                     q13]
                    != nnodes + 1)
                  | q13 : int(1..capacity)])
             | q11 : int(1..nrings * nrings)])
such that
    and([or([q15 <= network_ExplicitWithRepetitionR6_Flag /\
             and([or([network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q15,
                                                                                       q18]
                      != nnodes + 1
                      /\
                      network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q15, q18] = q16
                          | q18 : int(1..capacity)])
                      | q16 : int(1..nnodes), demand_ExplicitR2_Occurrence[q14, q16]])
                 | q15 : int(1..nrings * nrings)])
             | q14 : int(1..fin1)]),
    and([q1 + 1 <= network_ExplicitWithRepetitionR6_Flag ->
         network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q1, ..] <=lex
         network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q1 + 1, ..]
             | q1 : int(1..nrings * nrings - 1)]),
    and([q2 > network_ExplicitWithRepetitionR6_Flag ->
         and([network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q2, q10] =
              1   | q10 : int(1..capacity)])
             | q2 : int(1..nrings * nrings)]),
    nrings = network_ExplicitWithRepetitionR6_Flag,
    and([q5 <= network_ExplicitWithRepetitionR6_Flag ->
         and([network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q5, q6] <
              network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q5, q6 + 1]
              \/
              network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q5, q6] =
              nnodes + 1
                  | q6 : int(1..capacity - 1)])
             | q5 : int(1..nrings * nrings)]),
    and([q5 <= network_ExplicitWithRepetitionR6_Flag ->
         and([network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q5, q7] =
              nnodes + 1
              ->
              network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q5, q7 + 1] =
              nnodes + 1
                  | q7 : int(1..capacity - 1)])
             | q5 : int(1..nrings * nrings)]),
    and([q5 <= network_ExplicitWithRepetitionR6_Flag ->
         sum([toInt(network_ExplicitWithRepetitionR6_Values_ExplicitVarSizeWithDummy[q5,
                                                                                     q8]
                    != nnodes + 1)
                  | q8 : int(1..capacity)])
         <= capacity
             | q5 : int(1..nrings * nrings)])

