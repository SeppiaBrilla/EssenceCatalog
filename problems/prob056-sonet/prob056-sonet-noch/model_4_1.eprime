language ESSENCE' 1.0

given nnodes: int(1..)
given nrings: int(1..)
given capacity: int(1..)
given fin1: int
given demand_ExplicitR2_Occurrence:
        matrix indexed by [int(1..fin1), int(1..nnodes)] of bool
find network_ExplicitWithFlagsR4_Flags:
        matrix indexed by [int(1..nrings)] of int(0..nrings)
find network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..nrings), int(1..capacity)] of bool
find network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..nrings), int(1..capacity)] of int(1..nnodes)
minimising
    sum([toInt(network_ExplicitWithFlagsR4_Flags[q16] > 0) *
         sum([toInt(network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q16,
                                                                                      q18])
                  | q18 : int(1..capacity)])
             | q16 : int(1..nrings)])
such that
    and([or([network_ExplicitWithFlagsR4_Flags[q20] > 0 /\
             and([or([network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q20,
                                                                                        q23]
                      /\
                      network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q20, q23] =
                      q21 | q23 : int(1..capacity)])
                      | q21 : int(1..nnodes), demand_ExplicitR2_Occurrence[q19, q21]])
                 | q20 : int(1..nrings)])
             | q19 : int(1..fin1)]),
    and([network_ExplicitWithFlagsR4_Flags[q1 + 1] > 0 ->
         network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q1, ..] <lex
         network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q1 + 1, ..]
         \/
         and([network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q1, q12]
              = network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q1 + 1, q12]
                  | q12 : int(1..capacity)])
         /\ and([or([q12 = q13 | q13 : int(1..capacity)]) | q12 : int(1..capacity)])
         /\ and([or([q12 = q13 | q13 : int(1..capacity)]) | q12 : int(1..capacity)])
         /\
         network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q1, ..] <lex
         network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q1 + 1, ..]
             | q1 : int(1..nrings - 1)]),
    and([network_ExplicitWithFlagsR4_Flags[q2] = 0 ->
         and([network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q2, q14]
              = false
                  | q14 : int(1..capacity)])
         /\
         and([network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q2, q15]
              = 1 | q15 : int(1..capacity)])
             | q2 : int(1..nrings)]),
    and([network_ExplicitWithFlagsR4_Flags[q3 + 1] > 0 ->
         network_ExplicitWithFlagsR4_Flags[q3] > 0
             | q3 : int(1..nrings - 1)]),
    nrings = sum([network_ExplicitWithFlagsR4_Flags[q5] | q5 : int(1..nrings)]),
    and([network_ExplicitWithFlagsR4_Flags[q6] > 0 ->
         and([network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q6,
                                                                                q7 + 1]
              ->
              network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q6, q7] <
              network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q6, q7 + 1]
                  | q7 : int(1..capacity - 1)])
             | q6 : int(1..nrings)]),
    and([network_ExplicitWithFlagsR4_Flags[q6] > 0 ->
         and([network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q6, q8] =
              false
              ->
              network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q6, q8] = 1
                  | q8 : int(1..capacity)])
             | q6 : int(1..nrings)]),
    and([network_ExplicitWithFlagsR4_Flags[q6] > 0 ->
         and([network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q6,
                                                                                q9 + 1]
              -> network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q6, q9]
                  | q9 : int(1..capacity - 1)])
             | q6 : int(1..nrings)]),
    and([network_ExplicitWithFlagsR4_Flags[q6] > 0 ->
         sum([toInt(network_ExplicitWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q6,
                                                                                      q10])
                  | q10 : int(1..capacity)])
         <= capacity
             | q6 : int(1..nrings)])

