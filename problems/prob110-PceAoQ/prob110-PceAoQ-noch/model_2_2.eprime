language ESSENCE' 1.0

given n: int(1..)
find black_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of bool
find black_ExplicitVarSizeWithFlags_Values_1:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of int(1..n)
find black_ExplicitVarSizeWithFlags_Values_2:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of int(1..n)
find white_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of bool
find white_ExplicitVarSizeWithFlags_Values_1:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of int(1..n)
find white_ExplicitVarSizeWithFlags_Values_2:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of int(1..n)
maximising
    sum([black_ExplicitVarSizeWithFlags_Flags[q4]
             | q4 : int(1..(1 + (n - 1)) * (1 + (n - 1)))])
    +
    sum([white_ExplicitVarSizeWithFlags_Flags[q5]
             | q5 : int(1..(1 + (n - 1)) * (1 + (n - 1)))])
such that
    sum([black_ExplicitVarSizeWithFlags_Flags[q6]
             | q6 : int(1..(1 + (n - 1)) * (1 + (n - 1)))])
    =
    sum([white_ExplicitVarSizeWithFlags_Flags[q7]
             | q7 : int(1..(1 + (n - 1)) * (1 + (n - 1)))]),
    and([black_ExplicitVarSizeWithFlags_Flags[q8] ->
         and([white_ExplicitVarSizeWithFlags_Flags[q9] ->
              black_ExplicitVarSizeWithFlags_Values_1[q8] !=
              white_ExplicitVarSizeWithFlags_Values_1[q9]
              /\
              black_ExplicitVarSizeWithFlags_Values_2[q8] !=
              white_ExplicitVarSizeWithFlags_Values_2[q9]
              /\
              |white_ExplicitVarSizeWithFlags_Values_1[q9] -
               black_ExplicitVarSizeWithFlags_Values_1[q8]|
              !=
              |white_ExplicitVarSizeWithFlags_Values_2[q9] -
               black_ExplicitVarSizeWithFlags_Values_2[q8]|
                  | q9 : int(1..(1 + (n - 1)) * (1 + (n - 1)))])
             | q8 : int(1..(1 + (n - 1)) * (1 + (n - 1)))]),
    and([black_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         black_ExplicitVarSizeWithFlags_Values_1[q1] <
         black_ExplicitVarSizeWithFlags_Values_1[q1 + 1]
         \/
         black_ExplicitVarSizeWithFlags_Values_1[q1] =
         black_ExplicitVarSizeWithFlags_Values_1[q1 + 1]
         /\
         black_ExplicitVarSizeWithFlags_Values_2[q1] <
         black_ExplicitVarSizeWithFlags_Values_2[q1 + 1]
             | q1 : int(1..(1 + (n - 1)) * (1 + (n - 1)) - 1)]),
    and([black_ExplicitVarSizeWithFlags_Flags[q1] = false ->
         black_ExplicitVarSizeWithFlags_Values_1[q1] = 1 /\
         black_ExplicitVarSizeWithFlags_Values_2[q1] = 1
             | q1 : int(1..(1 + (n - 1)) * (1 + (n - 1)))]),
    and([black_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         black_ExplicitVarSizeWithFlags_Flags[q1]
             | q1 : int(1..(1 + (n - 1)) * (1 + (n - 1)) - 1)]),
    and([white_ExplicitVarSizeWithFlags_Flags[q2 + 1] ->
         white_ExplicitVarSizeWithFlags_Values_1[q2] <
         white_ExplicitVarSizeWithFlags_Values_1[q2 + 1]
         \/
         white_ExplicitVarSizeWithFlags_Values_1[q2] =
         white_ExplicitVarSizeWithFlags_Values_1[q2 + 1]
         /\
         white_ExplicitVarSizeWithFlags_Values_2[q2] <
         white_ExplicitVarSizeWithFlags_Values_2[q2 + 1]
             | q2 : int(1..(1 + (n - 1)) * (1 + (n - 1)) - 1)]),
    and([white_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         white_ExplicitVarSizeWithFlags_Values_1[q2] = 1 /\
         white_ExplicitVarSizeWithFlags_Values_2[q2] = 1
             | q2 : int(1..(1 + (n - 1)) * (1 + (n - 1)))]),
    and([white_ExplicitVarSizeWithFlags_Flags[q2 + 1] ->
         white_ExplicitVarSizeWithFlags_Flags[q2]
             | q2 : int(1..(1 + (n - 1)) * (1 + (n - 1)) - 1)])

