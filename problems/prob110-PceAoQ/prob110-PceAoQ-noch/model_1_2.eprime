language ESSENCE' 1.0

given n: int(1..)
find black_ExplicitVarSizeWithMarker_Marker:
        int(0..(1 + (n - 1)) * (1 + (n - 1)))
find black_ExplicitVarSizeWithMarker_Values_1:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of int(1..n)
find black_ExplicitVarSizeWithMarker_Values_2:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of int(1..n)
find white_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of bool
find white_ExplicitVarSizeWithFlags_Values_1:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of int(1..n)
find white_ExplicitVarSizeWithFlags_Values_2:
        matrix indexed by [int(1..(1 + (n - 1)) * (1 + (n - 1)))] of int(1..n)
maximising
    black_ExplicitVarSizeWithMarker_Marker +
    sum([toInt(white_ExplicitVarSizeWithFlags_Flags[q10])
             | q10 : int(1..(1 + (n - 1)) * (1 + (n - 1)))])
such that
    black_ExplicitVarSizeWithMarker_Marker =
    sum([toInt(white_ExplicitVarSizeWithFlags_Flags[q12])
             | q12 : int(1..(1 + (n - 1)) * (1 + (n - 1)))]),
    and([q14 <= black_ExplicitVarSizeWithMarker_Marker ->
         and([white_ExplicitVarSizeWithFlags_Flags[q16] ->
              black_ExplicitVarSizeWithMarker_Values_1[q14] !=
              white_ExplicitVarSizeWithFlags_Values_1[q16]
              /\
              black_ExplicitVarSizeWithMarker_Values_2[q14] !=
              white_ExplicitVarSizeWithFlags_Values_2[q16]
              /\
              |white_ExplicitVarSizeWithFlags_Values_1[q16] -
               black_ExplicitVarSizeWithMarker_Values_1[q14]|
              !=
              |white_ExplicitVarSizeWithFlags_Values_2[q16] -
               black_ExplicitVarSizeWithMarker_Values_2[q14]|
                  | q16 : int(1..(1 + (n - 1)) * (1 + (n - 1)))])
             | q14 : int(1..(1 + (n - 1)) * (1 + (n - 1)))]),
    and([q1 + 1 <= black_ExplicitVarSizeWithMarker_Marker ->
         black_ExplicitVarSizeWithMarker_Values_1[q1] <
         black_ExplicitVarSizeWithMarker_Values_1[q1 + 1]
         \/
         black_ExplicitVarSizeWithMarker_Values_1[q1] =
         black_ExplicitVarSizeWithMarker_Values_1[q1 + 1]
         /\
         black_ExplicitVarSizeWithMarker_Values_2[q1] <
         black_ExplicitVarSizeWithMarker_Values_2[q1 + 1]
             | q1 : int(1..(1 + (n - 1)) * (1 + (n - 1)) - 1)]),
    and([q2 > black_ExplicitVarSizeWithMarker_Marker ->
         black_ExplicitVarSizeWithMarker_Values_1[q2] = 1 /\
         black_ExplicitVarSizeWithMarker_Values_2[q2] = 1
             | q2 : int(1..(1 + (n - 1)) * (1 + (n - 1)))]),
    and([white_ExplicitVarSizeWithFlags_Flags[q4 + 1] ->
         white_ExplicitVarSizeWithFlags_Values_1[q4] <
         white_ExplicitVarSizeWithFlags_Values_1[q4 + 1]
         \/
         white_ExplicitVarSizeWithFlags_Values_1[q4] =
         white_ExplicitVarSizeWithFlags_Values_1[q4 + 1]
         /\
         white_ExplicitVarSizeWithFlags_Values_2[q4] <
         white_ExplicitVarSizeWithFlags_Values_2[q4 + 1]
             | q4 : int(1..(1 + (n - 1)) * (1 + (n - 1)) - 1)]),
    and([white_ExplicitVarSizeWithFlags_Flags[q5] = false ->
         white_ExplicitVarSizeWithFlags_Values_1[q5] = 1 /\
         white_ExplicitVarSizeWithFlags_Values_2[q5] = 1
             | q5 : int(1..(1 + (n - 1)) * (1 + (n - 1)))]),
    and([white_ExplicitVarSizeWithFlags_Flags[q6 + 1] ->
         white_ExplicitVarSizeWithFlags_Flags[q6]
             | q6 : int(1..(1 + (n - 1)) * (1 + (n - 1)) - 1)])

