language ESSENCE' 1.0

given n_models: int(1..5000)
given n_types: int(1..5000)
given n_cards: int(1..5000)
given n_racks: int(1..5000)
given fin1: int
given max_power_Function1D: matrix indexed by [int(1..n_models)] of int(1..5000)
given fin2: int
given max_connects_Function1D:
        matrix indexed by [int(1..n_models)] of int(1..5000)
given fin3: int
given price_Function1D: matrix indexed by [int(1..n_models)] of int(1..5000)
given fin4: int
given req_power_Function1D: matrix indexed by [int(1..n_types)] of int(1..5000)
given fin5: int
given ctype_Function1D: matrix indexed by [int(1..n_cards)] of int(1..n_types)
find model_Function1DPartial_Flags: matrix indexed by [int(1..n_racks)] of bool
find model_Function1DPartial_Values:
        matrix indexed by [int(1..n_racks)] of int(1..n_models)
find plugged_Function1DPartialR4_Flags:
        matrix indexed by [int(1..n_racks)] of bool
find plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..n_racks), int(1..1 + (n_cards - 1))] of bool
find plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..n_racks),
                           int(1..1 + (n_cards - 1))] of int(1..n_cards)
minimising
    sum([toInt(model_Function1DPartial_Flags[q15]) *
         price_Function1D[model_Function1DPartial_Values[q15]]
             | q15 : int(1..n_racks)])
such that
    and([model_Function1DPartial_Flags[q15] -> model_Function1DPartial_Flags[q15]
             | q15 : int(1..n_racks)]),
    and([or([model_Function1DPartial_Flags[q19] /\
             or([plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags[q19, q17]
                 /\ plugged_Function1DPartialR4_Flags[q19]
                 /\
                 plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Values[q19, q17] = c
                     | q17 : int(1..1 + (n_cards - 1))])
                 | q19 : int(1..n_racks)])
             | c : int(1..n_cards)]),
    and([model_Function1DPartial_Flags[q25] /\ model_Function1DPartial_Flags[q27] ->
         sum([toInt(and([plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags[q25,
                                                                                           q21],
                         or([plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags[q27, q23]
                             /\
                             plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Values[q27, q23] =
                             plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Values[q25, q21]
                                 | q23 : int(1..1 + (n_cards - 1))]),
                         plugged_Function1DPartialR4_Flags[q25],
                         plugged_Function1DPartialR4_Flags[q27]; int(1..4)]))
                  | q21 : int(1..1 + (n_cards - 1))])
         = 0 | q25 : int(1..n_racks), q27 : int(1..n_racks), q25 != q27]),
    and([model_Function1DPartial_Flags[q30] ->
         sum([toInt(plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags[q30,
                                                                                      q28]
                    /\ plugged_Function1DPartialR4_Flags[q30])
              *
              req_power_Function1D[ctype_Function1D[plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Values[q30,
                                                                                                                       q28]]]
                  | q28 : int(1..1 + (n_cards - 1))])
         <= max_power_Function1D[model_Function1DPartial_Values[q30]]
         /\ model_Function1DPartial_Flags[q30]
             | q30 : int(1..n_racks)]),
    and([model_Function1DPartial_Flags[q34] ->
         sum([toInt(plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags[q34,
                                                                                      q32]
                    /\ plugged_Function1DPartialR4_Flags[q34])
                  | q32 : int(1..1 + (n_cards - 1))])
         <= max_connects_Function1D[model_Function1DPartial_Values[q34]]
         /\ model_Function1DPartial_Flags[q34]
             | q34 : int(1..n_racks)]),
    and([model_Function1DPartial_Flags[q1] = false ->
         model_Function1DPartial_Values[q1] = 1
             | q1 : int(1..n_racks)]),
    and([plugged_Function1DPartialR4_Flags[q4] = false ->
         and([plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags[q4, q12]
              = false
                  | q12 : int(1..1 + (n_cards - 1))])
         /\
         and([plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Values[q4, q13]
              = 1 | q13 : int(1..1 + (n_cards - 1))])
             | q4 : int(1..n_racks)]),
    and([plugged_Function1DPartialR4_Flags[q6] ->
         and([plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags[q6,
                                                                                q7 + 1]
              ->
              plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Values[q6, q7] <
              plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Values[q6, q7 + 1]
                  | q7 : int(1..1 + (n_cards - 1) - 1)])
             | q6 : int(1..n_racks)]),
    and([plugged_Function1DPartialR4_Flags[q6] ->
         and([plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags[q6, q8] =
              false
              ->
              plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Values[q6, q8] = 1
                  | q8 : int(1..1 + (n_cards - 1))])
             | q6 : int(1..n_racks)]),
    and([plugged_Function1DPartialR4_Flags[q6] ->
         and([plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags[q6,
                                                                                q9 + 1]
              -> plugged_Function1DPartialR4_Values_ExplicitVarSizeWithFlags_Flags[q6, q9]
                  | q9 : int(1..1 + (n_cards - 1) - 1)])
             | q6 : int(1..n_racks)])

