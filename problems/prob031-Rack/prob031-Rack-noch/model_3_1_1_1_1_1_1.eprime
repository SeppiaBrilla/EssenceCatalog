language ESSENCE' 1.0

given n_models: int(1..5000)
given n_types: int(1..5000)
given n_cards: int(1..5000)
given n_racks: int(1..5000)
given fin1: int
given max_power_Function1D: matrix indexed by [int(1..n_models)] of int(1..5000)
given fin2: int
given max_connects_Function1D:
        matrix indexed by [int(1..n_models)] of int(1..5000)
given fin3: int
given price_Function1D: matrix indexed by [int(1..n_models)] of int(1..5000)
given fin4: int
given req_power_Function1D: matrix indexed by [int(1..n_types)] of int(1..5000)
given fin5: int
given ctype_Function1D: matrix indexed by [int(1..n_cards)] of int(1..n_types)
find model_Function1DPartial_Flags: matrix indexed by [int(1..n_racks)] of bool
find model_Function1DPartial_Values:
        matrix indexed by [int(1..n_racks)] of int(1..n_models)
find plugged_Function1DPartial_Flags:
        matrix indexed by [int(1..n_racks)] of bool
find plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..n_racks), int(1..1 + (n_cards - 1))] of bool
find plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..n_racks),
                           int(1..1 + (n_cards - 1))] of int(1..n_cards)
find aux1_Occurrence: matrix indexed by [int(1..n_racks)] of bool
minimising
    sum([aux1_Occurrence[q12] *
         price_Function1D[model_Function1DPartial_Values[q12]]
             | q12 : int(1..n_racks)])
find aux2_Occurrence:
        matrix indexed by [int(1..n_cards), int(1..n_racks)] of bool
find aux3_Occurrence: matrix indexed by [int(1..n_racks)] of bool
find aux4_Occurrence: matrix indexed by [int(1..n_racks)] of bool
find aux5_Occurrence: matrix indexed by [int(1..n_racks)] of bool
find aux6_Occurrence: matrix indexed by [int(1..n_racks)] of bool
such that
    and([model_Function1DPartial_Flags[q16] -> aux1_Occurrence[q16]
             | q16 : int(1..n_racks)]),
    and([aux1_Occurrence[q13] ->
         or([model_Function1DPartial_Flags[q17] /\ q17 = q13 | q17 : int(1..n_racks)])
             | q13 : int(1..n_racks)]),
    and([aux1_Occurrence[q12] -> model_Function1DPartial_Flags[q12]
             | q12 : int(1..n_racks)]),
    and([and([model_Function1DPartial_Flags[q22] -> aux2_Occurrence[c, q22]
                  | q22 : int(1..n_racks)])
             | c : int(1..n_cards)]),
    and([and([aux2_Occurrence[c, q19] ->
              or([model_Function1DPartial_Flags[q23] /\ q23 = q19 | q23 : int(1..n_racks)])
                  | q19 : int(1..n_racks)])
             | c : int(1..n_cards)]),
    and([or([aux2_Occurrence[c, q18] /\
             (or([plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags[q18, q54]
                  /\
                  plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Values[q18, q54] = c
                      | q54 : int(1..1 + (n_cards - 1))])
              /\ plugged_Function1DPartial_Flags[q18])
                 | q18 : int(1..n_racks)])
             | c : int(1..n_cards)]),
    and([model_Function1DPartial_Flags[q29] -> aux3_Occurrence[q29]
             | q29 : int(1..n_racks)]),
    and([aux3_Occurrence[q26] ->
         or([model_Function1DPartial_Flags[q30] /\ q30 = q26 | q30 : int(1..n_racks)])
             | q26 : int(1..n_racks)]),
    and([model_Function1DPartial_Flags[q35] -> aux4_Occurrence[q35]
             | q35 : int(1..n_racks)]),
    and([aux4_Occurrence[q32] ->
         or([model_Function1DPartial_Flags[q36] /\ q36 = q32 | q36 : int(1..n_racks)])
             | q32 : int(1..n_racks)]),
    and([aux3_Occurrence[q25] /\ aux4_Occurrence[q31] ->
         sum([plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags[q25, q55]
              /\
              (or([plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags[q31, q56]
                   /\
                   plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Values[q31, q56] =
                   plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Values[q25, q55]
                       | q56 : int(1..1 + (n_cards - 1))])
               /\ plugged_Function1DPartial_Flags[q31])
                  | q55 : int(1..1 + (n_cards - 1))])
         = 0
         /\ plugged_Function1DPartial_Flags[q25]
             | q25 : int(1..n_racks), q31 : int(1..n_racks), q25 != q31]),
    and([model_Function1DPartial_Flags[q43] -> aux5_Occurrence[q43]
             | q43 : int(1..n_racks)]),
    and([aux5_Occurrence[q40] ->
         or([model_Function1DPartial_Flags[q44] /\ q44 = q40 | q44 : int(1..n_racks)])
             | q40 : int(1..n_racks)]),
    and([aux5_Occurrence[q39] ->
         sum([plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags[q39, q57] *
              req_power_Function1D[ctype_Function1D[plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Values[q39,
                                                                                                                     q57]]]
                  | q57 : int(1..1 + (n_cards - 1))])
         <= max_power_Function1D[model_Function1DPartial_Values[q39]]
         /\ model_Function1DPartial_Flags[q39]
         /\ plugged_Function1DPartial_Flags[q39]
             | q39 : int(1..n_racks)]),
    and([model_Function1DPartial_Flags[q49] -> aux6_Occurrence[q49]
             | q49 : int(1..n_racks)]),
    and([aux6_Occurrence[q46] ->
         or([model_Function1DPartial_Flags[q50] /\ q50 = q46 | q50 : int(1..n_racks)])
             | q46 : int(1..n_racks)]),
    and([aux6_Occurrence[q45] ->
         sum([plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags[q45, q58]
                  | q58 : int(1..1 + (n_cards - 1))])
         <= max_connects_Function1D[model_Function1DPartial_Values[q45]]
         /\ model_Function1DPartial_Flags[q45]
         /\ plugged_Function1DPartial_Flags[q45]
             | q45 : int(1..n_racks)]),
    and([model_Function1DPartial_Flags[q1] = false ->
         model_Function1DPartial_Values[q1] = 1
             | q1 : int(1..n_racks)]),
    and([plugged_Function1DPartial_Flags[q4] = false ->
         and([plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags[q4, q59] =
              false
                  | q59 : int(1..1 + (n_cards - 1))])
         /\
         and([plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Values[q4, q60] =
              1   | q60 : int(1..1 + (n_cards - 1))])
             | q4 : int(1..n_racks)]),
    and([plugged_Function1DPartial_Flags[q6] ->
         and([plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags[q6, q7 + 1]
              ->
              plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Values[q6, q7] <
              plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Values[q6, q7 + 1]
                  | q7 : int(1..1 + (n_cards - 1) - 1)])
             | q6 : int(1..n_racks)]),
    and([plugged_Function1DPartial_Flags[q6] ->
         and([plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags[q6, q8] =
              false
              -> plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Values[q6, q8] = 1
                  | q8 : int(1..1 + (n_cards - 1))])
             | q6 : int(1..n_racks)]),
    and([plugged_Function1DPartial_Flags[q6] ->
         and([plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags[q6, q9 + 1]
              -> plugged_Function1DPartial_Values_ExplicitVarSizeWithFlags_Flags[q6, q9]
                  | q9 : int(1..1 + (n_cards - 1) - 1)])
             | q6 : int(1..n_racks)])

