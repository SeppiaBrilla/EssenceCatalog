language ESSENCE' 1.0

given n_models: int(1..5000)
given n_types: int(1..5000)
given n_cards: int(1..5000)
given n_racks: int(1..5000)
given fin1: int
given max_power_Function1D: matrix indexed by [int(1..n_models)] of int(1..5000)
given fin2: int
given max_connects_Function1D:
        matrix indexed by [int(1..n_models)] of int(1..5000)
given fin3: int
given price_Function1D: matrix indexed by [int(1..n_models)] of int(1..5000)
given fin4: int
given req_power_Function1D: matrix indexed by [int(1..n_types)] of int(1..5000)
given fin5: int
given ctype_Function1D: matrix indexed by [int(1..n_cards)] of int(1..n_types)
find model_Function1DPartial_Flags: matrix indexed by [int(1..n_racks)] of bool
find model_Function1DPartial_Values:
        matrix indexed by [int(1..n_racks)] of int(1..n_models)
find plugged_Function1DPartialR5_Flags:
        matrix indexed by [int(1..n_racks)] of bool
find plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Marker:
        matrix indexed by [int(1..n_racks)] of int(0..1 + (n_cards - 1))
find plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..n_racks),
                           int(1..1 + (n_cards - 1))] of int(1..n_cards)
minimising
    sum([toInt(model_Function1DPartial_Flags[q12]) *
         price_Function1D[model_Function1DPartial_Values[q12]]
             | q12 : int(1..n_racks)])
such that
    and([model_Function1DPartial_Flags[q12] -> model_Function1DPartial_Flags[q12]
             | q12 : int(1..n_racks)]),
    and([or([model_Function1DPartial_Flags[q16] /\
             or([q14 <=
                 plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Marker[q16]
                 /\ plugged_Function1DPartialR5_Flags[q16]
                 /\
                 plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Values[q16, q14] =
                 c   | q14 : int(1..1 + (n_cards - 1))])
                 | q16 : int(1..n_racks)])
             | c : int(1..n_cards)]),
    and([model_Function1DPartial_Flags[q22] /\ model_Function1DPartial_Flags[q24] ->
         sum([toInt(and([q18 <=
                         plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Marker[q22],
                         or([q20 <=
                             plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Marker[q24]
                             /\
                             plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Values[q24, q20] =
                             plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Values[q22, q18]
                                 | q20 : int(1..1 + (n_cards - 1))]),
                         plugged_Function1DPartialR5_Flags[q22],
                         plugged_Function1DPartialR5_Flags[q24]; int(1..4)]))
                  | q18 : int(1..1 + (n_cards - 1))])
         = 0 | q22 : int(1..n_racks), q24 : int(1..n_racks), q22 != q24]),
    and([model_Function1DPartial_Flags[q27] ->
         sum([toInt(q25 <=
                    plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Marker[q27]
                    /\ plugged_Function1DPartialR5_Flags[q27])
              *
              req_power_Function1D[ctype_Function1D[plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Values[q27,
                                                                                                                        q25]]]
                  | q25 : int(1..1 + (n_cards - 1))])
         <= max_power_Function1D[model_Function1DPartial_Values[q27]]
         /\ model_Function1DPartial_Flags[q27]
             | q27 : int(1..n_racks)]),
    and([model_Function1DPartial_Flags[q31] ->
         sum([toInt(q29 <=
                    plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Marker[q31]
                    /\ plugged_Function1DPartialR5_Flags[q31])
                  | q29 : int(1..1 + (n_cards - 1))])
         <= max_connects_Function1D[model_Function1DPartial_Values[q31]]
         /\ model_Function1DPartial_Flags[q31]
             | q31 : int(1..n_racks)]),
    and([model_Function1DPartial_Flags[q1] = false ->
         model_Function1DPartial_Values[q1] = 1
             | q1 : int(1..n_racks)]),
    and([plugged_Function1DPartialR5_Flags[q4] = false ->
         plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Marker[q4] = 0 /\
         and([plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Values[q4,
                                                                                  q10]
              = 1 | q10 : int(1..1 + (n_cards - 1))])
             | q4 : int(1..n_racks)]),
    and([plugged_Function1DPartialR5_Flags[q6] ->
         and([q7 + 1 <=
              plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Marker[q6]
              ->
              plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Values[q6, q7] <
              plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Values[q6, q7 + 1]
                  | q7 : int(1..1 + (n_cards - 1) - 1)])
             | q6 : int(1..n_racks)]),
    and([plugged_Function1DPartialR5_Flags[q6] ->
         and([q8 >
              plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Marker[q6]
              ->
              plugged_Function1DPartialR5_Values_ExplicitVarSizeWithMarker_Values[q6, q8] = 1
                  | q8 : int(1..1 + (n_cards - 1))])
             | q6 : int(1..n_racks)])

