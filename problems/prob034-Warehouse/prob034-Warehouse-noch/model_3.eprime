language ESSENCE' 1.0

given n_upper: int(1..)
given n_stores: int(1..)
given n_warehouses: int(1..)
given p1: int
given capacity_Function1D:
        matrix indexed by [int(1..n_warehouses)] of int(1..n_upper)
given p2: int
given opencost_Function1D:
        matrix indexed by [int(1..n_warehouses)] of int(1..n_upper)
given p3: int
given cost_FunctionND:
        matrix indexed by [int(1..n_stores), int(1..n_warehouses)] of int(1..n_upper)
find open_Function1D:
        matrix indexed by [int(1..n_stores)] of int(1..n_warehouses)
find q1_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..1 + (n_warehouses - 1))] of bool
find q1_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..1 + (n_warehouses - 1))] of int(1..n_warehouses)
minimising
    sum([q1_ExplicitVarSizeWithFlags_Flags[q6] *
         opencost_Function1D[q1_ExplicitVarSizeWithFlags_Values[q6]]
             | q6 : int(1..1 + (n_warehouses - 1))])
    + sum([cost_FunctionND[s, open_Function1D[s]] | s : int(1..n_stores)])
such that
    and([q1_ExplicitVarSizeWithFlags_Flags[q5 + 1] ->
         q1_ExplicitVarSizeWithFlags_Values[q5] <
         q1_ExplicitVarSizeWithFlags_Values[q5 + 1]
             | q5 : int(1..1 + (n_warehouses - 1) - 1)]),
    and([q1_ExplicitVarSizeWithFlags_Flags[q5] = false ->
         q1_ExplicitVarSizeWithFlags_Values[q5] = 1
             | q5 : int(1..1 + (n_warehouses - 1))]),
    and([q1_ExplicitVarSizeWithFlags_Flags[q5 + 1] ->
         q1_ExplicitVarSizeWithFlags_Flags[q5]
             | q5 : int(1..1 + (n_warehouses - 1) - 1)]),
    and([or([q1_ExplicitVarSizeWithFlags_Flags[q8] /\
             q1_ExplicitVarSizeWithFlags_Values[q8] = open_Function1D[q2]
                 | q8 : int(1..1 + (n_warehouses - 1))])
             | q2 : int(1..n_stores)]),
    and([q1_ExplicitVarSizeWithFlags_Flags[q7] ->
         or([open_Function1D[q3] = q1_ExplicitVarSizeWithFlags_Values[q7]
                 | q3 : int(1..n_stores)])
             | q7 : int(1..1 + (n_warehouses - 1))]),
    and([sum([open_Function1D[q4] = w | q4 : int(1..n_stores)]) <=
         capacity_Function1D[w]
             | w : int(1..n_warehouses)])

