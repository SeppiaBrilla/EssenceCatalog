language ESSENCE' 1.0

given n: int(1..)
given k: int(1..)
find boxes_PartitionOccurrence_NumParts: int(1..1 + (n - 1))
find boxes_PartitionOccurrence_WhichPart:
        matrix indexed by [int(1..n)] of int(1..1 + (n - 1))
find boxes_PartitionOccurrence_PartSizes:
        matrix indexed by [int(1..1 + (n - 1))] of int(0..1 + (n - 1))
find boxes_PartitionOccurrence_FirstIndex:
        matrix indexed by [int(1..1 + (n - 1))] of int(1..n)
such that
    and([or([x != y /\ x + y = z
                 | x : int(1..n), y : int(1..n), z : int(1..n), nums_Occurrence[x],
                   nums_Occurrence[y], nums_Occurrence[z]])
         ->
         !or([q13 <= boxes_PartitionOccurrence_NumParts /\
              and([or([boxes_PartitionOccurrence_WhichPart[q17] = q13 /\ q17 = q15
                           | q17 : int(1..n)])
                       | q15 : int(1..n), nums_Occurrence[q15]])
                  | q13 : int(1..1 + (n - 1))])
             | nums_Occurrence : matrix indexed by [int(1..n)] of bool,
               3 = sum([toInt(nums_Occurrence[q1]) | q1 : int(1..n)])]),
    and([true | q2 : int(1..1 + (n - 1))]),
    and([q2 > boxes_PartitionOccurrence_NumParts ->
         boxes_PartitionOccurrence_PartSizes[q2] = 0
             | q2 : int(1..1 + (n - 1))]),
    k = boxes_PartitionOccurrence_NumParts,
    and([q3 <= boxes_PartitionOccurrence_NumParts ->
         or([boxes_PartitionOccurrence_WhichPart[q4] = q3 | q4 : int(1..n)])
             | q3 : int(3..1 + (n - 1))]),
    boxes_PartitionOccurrence_NumParts =
    max([boxes_PartitionOccurrence_WhichPart[q5] | q5 : int(1..n)]),
    and([boxes_PartitionOccurrence_PartSizes[q6] =
         sum([toInt(boxes_PartitionOccurrence_WhichPart[q7] = q6) | q7 : int(1..n)])
             | q6 : int(1..1 + (n - 1))]),
    and([q8 <= boxes_PartitionOccurrence_NumParts ->
         and([boxes_PartitionOccurrence_WhichPart[q9] = q8 ->
              boxes_PartitionOccurrence_FirstIndex[q8] <= q9
                  | q9 : int(1..n)])
             | q8 : int(1..1 + (n - 1))]),
    and([q8 <= boxes_PartitionOccurrence_NumParts ->
         or([boxes_PartitionOccurrence_WhichPart[q9] = q8 /\
             boxes_PartitionOccurrence_FirstIndex[q8] = q9
                 | q9 : int(1..n)])
             | q8 : int(1..1 + (n - 1))]),
    and([boxes_PartitionOccurrence_PartSizes[q8] = 0 ->
         boxes_PartitionOccurrence_FirstIndex[q8] = 1
             | q8 : int(1..1 + (n - 1))]),
    and([q10 <= boxes_PartitionOccurrence_NumParts /\
         q11 <= boxes_PartitionOccurrence_NumParts
         ->
         (q10 < q11 <->
          boxes_PartitionOccurrence_FirstIndex[q10] <
          boxes_PartitionOccurrence_FirstIndex[q11])
             | q10 : int(1..1 + (n - 1)), q11 : int(1..1 + (n - 1))])

