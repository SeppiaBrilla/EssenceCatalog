language ESSENCE' 1.0

given v: int(1..)
given d: int(1..)
given q: int(1..)
given lam: int(1..)
letting let1 be q * lam
find E_Explicit: matrix indexed by [int(1..v), int(1..let1)] of int(1..q)
such that
    and([and([sum([toInt(E_Explicit[q4, index] = element)
                       | index : int(1..q * lam)])
              = lam
                  | element : int(1..q)])
             | q4 : int(1..v)]),
    and([and([E_Explicit[q5, q7] = E_Explicit[q6, q7] | q7 : int(1..let1)]) /\
         and([or([q7 = q8 | q8 : int(1..let1)]) | q7 : int(1..let1)])
         /\ and([or([q7 = q8 | q8 : int(1..let1)]) | q7 : int(1..let1)])
         \/
         sum([toInt(E_Explicit[q5, index] != E_Explicit[q6, index])
                  | index : int(1..q * lam)])
         = d | q5 : int(1..v), q6 : int(1..v)]),
    and([E_Explicit[q1, ..] <lex E_Explicit[q1 + 1, ..] | q1 : int(1..v - 1)])

