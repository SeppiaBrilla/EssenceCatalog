language ESSENCE' 1.0

given items_EnumSize: int
given fin1: int
given fin2: int
given fin3: int
given weight_Function1D:
        matrix indexed by [int(1..items_EnumSize)] of int(fin2..fin3)
given fin4: int
given fin5: int
given fin6: int
given gain_Function1D:
        matrix indexed by [int(1..items_EnumSize)] of int(fin5..fin6)
given capacity: int
find picked_Occurrence: matrix indexed by [int(1..items_EnumSize)] of bool
maximising
    sum([toInt(picked_Occurrence[i]) * gain_Function1D[i]
             | i : int(1..items_EnumSize)])
such that
    sum([toInt(picked_Occurrence[i]) * weight_Function1D[i]
             | i : int(1..items_EnumSize)])
    <= capacity

