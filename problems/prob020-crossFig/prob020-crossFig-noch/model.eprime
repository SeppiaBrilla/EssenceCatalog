language ESSENCE' 1.0

given nbDom: int(1..)
given bound: int(1..100)
letting q1 be bound ** 2
given numClues: int(1..q1)
given p1: int
given l_Function1D_1: matrix indexed by [int(1..numClues)] of int(1..2)
given l_Function1D_2: matrix indexed by [int(1..numClues)] of int(1..numClues)
given l_Function1D_3: matrix indexed by [int(1..numClues)] of int(1..numClues)
given l_Function1D_4_1: matrix indexed by [int(1..numClues)] of int(1..bound)
given l_Function1D_4_2: matrix indexed by [int(1..numClues)] of int(1..bound)
find grid: matrix indexed by [int(1..bound), int(1..bound)] of int(1..nbDom)
such that
    and([(l_Function1D_1[i] = 1 ->
          grid[l_Function1D_4_1[i], l_Function1D_4_2[i]] =
          grid[l_Function1D_4_1[l_Function1D_2[i]], l_Function1D_4_2[l_Function1D_2[i]]] +
          grid[l_Function1D_4_1[l_Function1D_3[i]], l_Function1D_4_2[l_Function1D_3[i]]])
         /\
         (l_Function1D_1[i] = 2 ->
          grid[l_Function1D_4_1[i], l_Function1D_4_2[i]] =
          grid[l_Function1D_4_1[l_Function1D_2[i]], l_Function1D_4_2[l_Function1D_2[i]]] %
          grid[l_Function1D_4_1[l_Function1D_3[i]], l_Function1D_4_2[l_Function1D_3[i]]])
             | i : int(1..numClues)])

