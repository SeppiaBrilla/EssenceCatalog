language ESSENCE' 1.0

given numGates: int(1..)
given fin1: int
given fin2: int
given gateFuncs_Function1DR13_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker:
        matrix indexed by [int(1..numGates)] of int(0..fin2)
given gateFuncs_Function1DR13_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1:
        matrix indexed by [int(1..numGates), int(1..fin2), int(1..2)] of bool
given gateFuncs_Function1DR13_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2:
        matrix indexed by [int(1..numGates), int(1..fin2)] of bool
given fin3: int
given gateInpts_Function1D:
        matrix indexed by [int(1..numGates), int(1..2)] of int(-1..numGates)
given fin4: int
given finalOutputs_Function1DPartial_Flags:
        matrix indexed by [int(1..numGates)] of bool
given finalOutputs_Function1DPartial_Values:
        matrix indexed by [int(1..numGates)] of bool
find faultyGates_Function1DPartial_Flags:
        matrix indexed by [int(1..numGates)] of bool
find faultyGates_Function1DPartial_Values:
        matrix indexed by [int(1..numGates)] of bool
minimising
    sum([toInt(faultyGates_Function1DPartial_Flags[q18]) | q18 : int(1..numGates)])
such that
    or([or([gateOutput_Function1D[q7] | q7 : int(-1..numGates), q7 = -1]) = false /\
        or([gateOutput_Function1D[q8] | q8 : int(-1..numGates), q8 = 0])
        /\
        and([gateOutput_Function1D[gate] =
             or([gateFuncs_Function1DR13_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[gate,
                                                                                                             q10]
                     | q10 : int(1..fin2),
                       q10 <=
                       gateFuncs_Function1DR13_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker[gate],
                       and([gateFuncs_Function1DR13_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[gate,
                                                                                                                        q10,
                                                                                                                        q11]
                            =
                            [gateOutput_Function1D[gateInpts_Function1D[gate, 1]],
                             gateOutput_Function1D[gateInpts_Function1D[gate, 2]]; int(1..2)][q11]
                                | q11 : int(1..2)])])
             \/
             gateOutput_Function1D[gate] =
             or([faultyGates_Function1DPartial_Flags[q14] /\
                 faultyGates_Function1DPartial_Values[q14]
                     | q14 : int(1..numGates), q14 = gate])
                 | gate : int(1..numGates)])
        /\
        and([gateOutput_Function1D[q16] = finalOutputs_Function1DPartial_Values[q16]
                 | q16 : int(1..numGates), finalOutputs_Function1DPartial_Flags[q16]])
            | gateOutput_Function1D : matrix indexed by [int(-1..numGates)] of bool]),
    and([faultyGates_Function1DPartial_Flags[q3] = false ->
         faultyGates_Function1DPartial_Values[q3] = false
             | q3 : int(1..numGates)])

