language ESSENCE' 1.0

given n: int(1..)
letting let1 be 3 * n
find assign_Function1D: matrix indexed by [int(1..let1)] of int(1..9)
such that
    sum([assign_Function1D[3 * i + 1] /
         (assign_Function1D[3 * i + 2] * 10 + assign_Function1D[3 * i + 3])
             | i : int(0..n - 1)])
    = 1,
    and([sum([toInt(assign_Function1D[i] = d) | i : int(1..3 * n)]) <= (n + 1) / 3
             | d : int(1..9)]),
    and([or([assign_Function1D[q2] = q1 | q2 : int(1..let1)]) | q1 : int(1..9)])

