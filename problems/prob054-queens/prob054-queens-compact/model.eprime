language ESSENCE' 1.0

given n: int(1..)
find arrangement_Function1DPartial_Flags: matrix indexed by [int(1..n)] of bool
find arrangement_Function1DPartial_Values:
        matrix indexed by [int(1..n)] of int(1..n)
such that
    and([and([|arrangement_Function1DPartial_Values[q1] -
               arrangement_Function1DPartial_Values[q2]|
              != |q1 - q2|,
              arrangement_Function1DPartial_Flags[q1],
              arrangement_Function1DPartial_Flags[q2]; int(1..3)])
             | q1 : int(1..n), q2 : int(1..n), q1 < q2]),
    and([arrangement_Function1DPartial_Flags[q1] /\
         arrangement_Function1DPartial_Flags[q2]
         ->
         arrangement_Function1DPartial_Values[q1] !=
         arrangement_Function1DPartial_Values[q2]
             | q1 : int(1..n), q2 : int(1..n), q1 != q2]),
    and([or([arrangement_Function1DPartial_Flags[q4] /\
             arrangement_Function1DPartial_Values[q4] = q3
                 | q4 : int(1..n)])
             | q3 : int(1..n)]),
    and([arrangement_Function1DPartial_Flags[q5] = false ->
         arrangement_Function1DPartial_Values[q5] = 1
             | q5 : int(1..n)])

