language ESSENCE 1.2.0
$ prob002.essence: Template Design
$ Problem details available at http://www.csplib.org/prob/prob002/
$ 05 September 2007
$

given n_designs, n_slots, n_quantity, n_Design_Quant : int(1..)

letting Design be domain int(1..n_designs)

given quantity : function (total) Design --> int(1..n_quantity)

letting Design_Quant be domain int(1..n_Design_Quant)

find layout : function mset (size n_slots) of Design --> Design_Quant

minimising
    sum d : Design .
        (sum t in defined(layout) . freq(t,d) * layout(t)) - quantity(d)

such that
    forAll d : Design .
        (sum t in defined(layout) . freq(t,d) * layout(t)) >= quantity(d)
