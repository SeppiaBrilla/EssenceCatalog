[useChannelling] False
[representation] find hosts: set of int(1..n_boats) (#4) Set~ExplicitVarSize, Set~ExplicitVarSizeWithDefault, Set~ExplicitVarSizeWithMarker, Set~Occurrence
[representation] find sched: set (size n_periods) of function (total) int(1..n_boats) --> int(1..n_boats) (#1) Set~Explicit
[representation] given capacity: function (total) int(1..n_boats) --> int(1..n_upper) (#2) Function~1D, Function~AsReln
[representation] given crew: function (total) int(1..n_boats) --> int(1..n_upper) (#2) Function~1D, Function~AsReln
[configuration] sched§regionS#Set~Explicit crew§regionS#Function~AsReln capacity§regionS#Function~AsReln hosts§regionS#Set~Occurrence
[addedDecl] find sched_Set~Explicit: matrix indexed by [int(1..n_periods)] of function (total) int(1..n_boats) --> int(1..n_boats)
[addedDecl] find hosts_Set~Occurrence: matrix indexed by [int(1..n_boats)] of bool
[addedDecl] given crew_Function~AsReln: relation of (int(1..n_boats) * int(1..n_upper))
[addedDecl] given capacity_Function~AsReln: relation of (int(1..n_boats) * int(1..n_upper))
[addedStructuralCons] {Set~Explicit}
                      (forAll v__4 : int(1..n_periods - 1) . sched_Set~Explicit§regionS[v__4] .< sched_Set~Explicit§regionS[v__4 + 1])
[refn] 0
[applied] p(h) = h
          {rules/refns/horizontal/function-apply-eq-1.rule}
              (forAll v__9 in toSet(p) , v__9[1] = h . v__9[2] = h)
[applied] p(b1) = p(b2)
          {rules/refns/horizontal/function-apply-eq-1.rule}
              (forAll v__10 in toSet(p) , v__10[1] = b1 . v__10[2] = p(b2))
[applied] v__10[2] = p(b2)
          {rules/refns/horizontal/function-apply-eq-2.rule}
              (forAll v__11 in toSet(p) , v__11[1] = b2 . v__11[2] = v__10[2])
[applied] |hosts§regionS#Set~Occurrence|
          {rules/refns/horizontal/set/card.rule}
              (sum v__12 in hosts§regionS#Set~Occurrence . 1)
[applied] (sum v__12 in hosts§regionS#Set~Occurrence . 1)
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (sum v__13 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__13] . 1)
[applied] range(p) subsetEq hosts§regionS#Set~Occurrence
          {rules/refns/horizontal/set/subseteq-to-quantified.rule}
              (forAll v__14 in range(p) . v__14 in hosts§regionS#Set~Occurrence)
[applied] v__14 in hosts§regionS#Set~Occurrence
          {rules/refns/horizontal/set/in-to-quantified.rule}
              (exists v__15 in hosts§regionS#Set~Occurrence . v__15 = v__14)
[applied] (exists v__15 in hosts§regionS#Set~Occurrence . v__15 = v__14)
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (exists v__16 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__16] . v__16 = v__14)
[applied] (forAll v__14 in range(p) . (exists v__16 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__16] . v__16 = v__14))
          {rules/refns/horizontal/function-range-quantified.rule}
              (forAll v__17 in toSet(p) . (exists v__16 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__16] . v__16 = v__17[2]))
[applied] (forAll p in sched§regionS#Set~Explicit
               . (forAll v__17 in toSet(p) . (exists v__16 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__16] . v__16 = v__17[2])))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__18 : int(1..n_periods)
                   . (forAll v__17 in toSet(sched_Set~Explicit§regionS[v__18]) . (exists v__16 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__16] . v__16 = v__17[2])))
[applied] (forAll h in hosts§regionS#Set~Occurrence . (forAll v__9 in toSet(p) , v__9[1] = h . v__9[2] = h))
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (forAll v__19 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__19] . (forAll v__9 in toSet(p) , v__9[1] = v__19 . v__9[2] = v__19))
[applied] (forAll p in sched§regionS#Set~Explicit
               . (forAll v__19 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__19] . (forAll v__9 in toSet(p) , v__9[1] = v__19 . v__9[2] = v__19)))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__20 : int(1..n_periods)
                   . (forAll v__19 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__19]
                          . (forAll v__9 in toSet(sched_Set~Explicit§regionS[v__20]) , v__9[1] = v__19 . v__9[2] = v__19)))
[applied] crew§regionS#Function~AsReln(b)
          {rules/refns/vertical/Function~AsReln/image-int.rule}
              (sum v__21 in toSet(crew_Function~AsReln§regionS) , v__21[1] = b . v__21[2])
[applied] capacity§regionS#Function~AsReln(h)
          {rules/refns/vertical/Function~AsReln/image-int.rule}
              (sum v__22 in toSet(capacity_Function~AsReln§regionS) , v__22[1] = h . v__22[2])
[applied] (forAll h in hosts§regionS#Set~Occurrence
               . (sum b in preImage(p, h) . (sum v__21 in toSet(crew_Function~AsReln§regionS) , v__21[1] = b . v__21[2]))
                 <=
                 (sum v__22 in toSet(capacity_Function~AsReln§regionS) , v__22[1] = h . v__22[2]))
          {rules/refns/vertical/Set~Occurrence/quantified.rule}
              (forAll v__23 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__23]
                   . (sum b in preImage(p, v__23) . (sum v__21 in toSet(crew_Function~AsReln§regionS) , v__21[1] = b . v__21[2]))
                     <=
                     (sum v__22 in toSet(capacity_Function~AsReln§regionS) , v__22[1] = v__23 . v__22[2]))
[applied] (forAll p in sched§regionS#Set~Explicit
               . (forAll v__23 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__23]
                      . (sum b in preImage(p, v__23) . (sum v__21 in toSet(crew_Function~AsReln§regionS) , v__21[1] = b . v__21[2]))
                        <=
                        (sum v__22 in toSet(capacity_Function~AsReln§regionS) , v__22[1] = v__23 . v__22[2])))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__24 : int(1..n_periods)
                   . (forAll v__23 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__23]
                          . (sum b in preImage(sched_Set~Explicit§regionS[v__24], v__23) . (sum v__21 in toSet(crew_Function~AsReln§regionS) , v__21[1] = b . v__21[2]))
                            <=
                            (sum v__22 in toSet(capacity_Function~AsReln§regionS) , v__22[1] = v__23 . v__22[2])))
[applied] (sum b in preImage(sched_Set~Explicit§regionS[v__24], v__23) . (sum v__21 in toSet(crew_Function~AsReln§regionS) , v__21[1] = b . v__21[2]))
          {rules/refns/horizontal/function-preImage-quantified.rule}
              (sum v__25 : int(1..n_boats) , sched_Set~Explicit§regionS[v__24](v__25) = v__23
                   . (sum v__21 in toSet(crew_Function~AsReln§regionS) , v__21[1] = v__25 . v__21[2]))
[applied] (sum p in sched§regionS#Set~Explicit . (forAll v__10 in toSet(p) , v__10[1] = b1 . (forAll v__11 in toSet(p) , v__11[1] = b2 . v__11[2] = v__10[2])))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (sum v__26 : int(1..n_periods)
                   . (forAll v__10 in toSet(sched_Set~Explicit§regionS[v__26]) , v__10[1] = b1
                          . (forAll v__11 in toSet(sched_Set~Explicit§regionS[v__26]) , v__11[1] = b2 . v__11[2] = v__10[2])))
[applied] sched_Set~Explicit§regionS[v__24](v__25) = v__23
          {rules/refns/horizontal/function-apply-eq-1.rule}
              (forAll v__27 in toSet(sched_Set~Explicit§regionS[v__24]) , v__27[1] = v__25 . v__27[2] = v__23)
[removeRefinedDecl] find hosts: set of int(1..n_boats)
[removeRefinedDecl] find sched: set (size n_periods) of function (total) int(1..n_boats) --> int(1..n_boats)
[removeRefinedDecl] given capacity: function (total) int(1..n_boats) --> int(1..n_upper)
[removeRefinedDecl] given crew: function (total) int(1..n_boats) --> int(1..n_upper)
[repr] 1
[representation] find sched_Set~Explicit: matrix indexed by [int(1..n_periods)] of function (total) int(1..n_boats) --> int(1..n_boats)
                 (#2)
                 Function~1D, Function~AsReln
[representation] given capacity_Function~AsReln: relation of (int(1..n_boats) * int(1..n_upper)) (#2) Relation~AsSet, Relation~IntMatrix2
[representation] given crew_Function~AsReln: relation of (int(1..n_boats) * int(1..n_upper)) (#2) Relation~AsSet, Relation~IntMatrix2
[configuration] crew_Function~AsReln§regionS#Relation~AsSet sched_Set~Explicit§regionS#Function~1D capacity_Function~AsReln§regionS#Relation~AsSet
[addedDecl] find sched_Set~Explicit_Function~1D: matrix indexed by [int(1..n_periods), int(1..n_boats)] of int(1..n_boats)
[addedDecl] given crew_Function~AsReln_Relation~AsSet: set of (int(1..n_boats), int(1..n_upper))
[addedDecl] given capacity_Function~AsReln_Relation~AsSet: set of (int(1..n_boats), int(1..n_upper))
[refn] 1
[applied] sched_Set~Explicit§regionS#Function~1D[v__0] .< sched_Set~Explicit§regionS#Function~1D[v__0 + 1]
          {rules/refns/vertical/Function~1D/DotLt.rule}
              sched_Set~Explicit_Function~1D§regionS[v__0] .< sched_Set~Explicit_Function~1D§regionS[v__0 + 1]
[applied] (forAll v__1 in toSet(sched_Set~Explicit§regionS#Function~1D[v__0])
               . (exists v__2 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__2] . v__2 = v__1[2]))
          {rules/refns/vertical/Function~1D/toSet-quantified.rule}
              (forAll v__32 : int(1..n_boats)
                   . (exists v__2 : int(1..n_boats) , hosts_Set~Occurrence§regionS[v__2] . v__2 = sched_Set~Explicit_Function~1D§regionS[v__0, v__32]))
[applied] (forAll v__2 in toSet(sched_Set~Explicit§regionS#Function~1D[v__0]) , v__2[1] = v__1 . v__2[2] = v__1)
          {rules/refns/vertical/Function~1D/toSet-quantified.rule}
              (forAll v__33 : int(1..n_boats) , v__33 = v__1 . sched_Set~Explicit_Function~1D§regionS[v__0, v__33] = v__1)
[applied] (forAll v__3 in toSet(sched_Set~Explicit§regionS#Function~1D[v__0]) , v__3[1] = v__2 . v__3[2] = v__1)
          {rules/refns/vertical/Function~1D/toSet-quantified.rule}
              (forAll v__34 : int(1..n_boats) , v__34 = v__2 . sched_Set~Explicit_Function~1D§regionS[v__0, v__34] = v__1)
[applied] (sum v__3 in toSet(crew_Function~AsReln§regionS#Relation~AsSet) , v__3[1] = v__2 . v__3[2])
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (sum v__3 in crew_Function~AsReln_Relation~AsSet§regionS , v__3[1] = v__2 . v__3[2])
[applied] (sum v__2 in toSet(capacity_Function~AsReln§regionS#Relation~AsSet) , v__2[1] = v__1 . v__2[2])
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (sum v__2 in capacity_Function~AsReln_Relation~AsSet§regionS , v__2[1] = v__1 . v__2[2])
[applied] (forAll v__4 in toSet(sched_Set~Explicit§regionS#Function~1D[v__2]) , v__4[1] = v__1 . v__4[2] = v__3[2])
          {rules/refns/vertical/Function~1D/toSet-quantified.rule}
              (forAll v__35 : int(1..n_boats) , v__35 = v__1 . sched_Set~Explicit_Function~1D§regionS[v__2, v__35] = v__3[2])
[applied] (forAll v__3 in toSet(sched_Set~Explicit§regionS#Function~1D[v__2]) , v__3[1] = v__0
               . (forAll v__35 : int(1..n_boats) , v__35 = v__1 . sched_Set~Explicit_Function~1D§regionS[v__2, v__35] = v__3[2]))
          {rules/refns/vertical/Function~1D/toSet-quantified.rule}
              (forAll v__36 : int(1..n_boats) , v__36 = v__0
                   . (forAll v__35 : int(1..n_boats) , v__35 = v__1 . sched_Set~Explicit_Function~1D§regionS[v__2, v__35] = sched_Set~Explicit_Function~1D§regionS[v__2, v__36]))
[removeRefinedDecl] find sched_Set~Explicit: matrix indexed by [int(1..n_periods)] of function (total) int(1..n_boats) --> int(1..n_boats)
[removeRefinedDecl] given capacity_Function~AsReln: relation of (int(1..n_boats) * int(1..n_upper))
[removeRefinedDecl] given crew_Function~AsReln: relation of (int(1..n_boats) * int(1..n_upper))
[repr] 2
[representation] given capacity_Function~AsReln_Relation~AsSet: set of (int(1..n_boats), int(1..n_upper))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[representation] given crew_Function~AsReln_Relation~AsSet: set of (int(1..n_boats), int(1..n_upper)) (#2) Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] capacity_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker crew_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker
[addedDecl] given crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker:
                    (int(0..n_boats * n_upper), matrix indexed by [int(1..n_boats * n_upper)] of (int(1..n_boats), int(1..n_upper)))
[addedDecl] given capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker:
                    (int(0..n_boats * n_upper), matrix indexed by [int(1..n_boats * n_upper)] of (int(1..n_boats), int(1..n_upper)))
[refn] 2
[applied] (sum v__3 in crew_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker , v__3[1] = v__2 . v__3[2])
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (sum v__41 : int(1..n_boats * n_upper)
                   , crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__41, 1] = v__2
                     /\
                     v__41 <= crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[1]
                   . crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__41, 2])
[applied] (sum v__2 in capacity_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker , v__2[1] = v__1 . v__2[2])
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (sum v__42 : int(1..n_boats * n_upper)
                   , capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__42, 1] = v__1
                     /\
                     v__42 <= capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[1]
                   . capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[2, v__42, 2])
[removeRefinedDecl] given capacity_Function~AsReln_Relation~AsSet: set of (int(1..n_boats), int(1..n_upper))
[removeRefinedDecl] given crew_Function~AsReln_Relation~AsSet: set of (int(1..n_boats), int(1..n_upper))
[removedDecl] given capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker:
                      (int(0..n_boats * n_upper), matrix indexed by [int(1..n_boats * n_upper)] of (int(1..n_boats), int(1..n_upper)))
              Added the following:
              given capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple1: int(0..n_boats * n_upper)
              given capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..n_boats * n_upper)] of (int(1..n_boats), int(1..n_upper))
[removedDecl] given crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker:
                      (int(0..n_boats * n_upper), matrix indexed by [int(1..n_boats * n_upper)] of (int(1..n_boats), int(1..n_upper)))
              Added the following:
              given crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple1: int(0..n_boats * n_upper)
              given crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..n_boats * n_upper)] of (int(1..n_boats), int(1..n_upper))
[matrixToTuple] given capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                        matrix indexed by [int(1..n_boats * n_upper)] of (int(1..n_boats), int(1..n_upper))∑1
[removedDecl] given capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..n_boats * n_upper)] of (int(1..n_boats), int(1..n_upper))
              Added the following:
              given capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple1: matrix indexed by [int(1..n_boats * n_upper)] of int(1..n_boats)
              given capacity_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple2: matrix indexed by [int(1..n_boats * n_upper)] of int(1..n_upper)
[matrixToTuple] given crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                        matrix indexed by [int(1..n_boats * n_upper)] of (int(1..n_boats), int(1..n_upper))∑1
[removedDecl] given crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..n_boats * n_upper)] of (int(1..n_boats), int(1..n_upper))
              Added the following:
              given crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple1: matrix indexed by [int(1..n_boats * n_upper)] of int(1..n_boats)
              given crew_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple2: matrix indexed by [int(1..n_boats * n_upper)] of int(1..n_upper)
[repr] 3