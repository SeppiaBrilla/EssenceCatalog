[useChannelling] False
[representation] find hosts: set of int(1..n_boats) (#4) Set~ExplicitVarSize, Set~ExplicitVarSizeWithDefault, Set~ExplicitVarSizeWithMarker, Set~Occurrence
[representation] find sched: set (size n_periods) of function (total) int(1..n_boats) --> int(1..n_boats) (#1) Set~Explicit
[representation] given capacity: function (total) int(1..n_boats) --> int(1..n_upper) (#2) Function~1D, Function~AsReln
[representation] given crew: function (total) int(1..n_boats) --> int(1..n_upper) (#2) Function~1D, Function~AsReln
[configuration] sched§regionS#Set~Explicit crew§regionS#Function~1D capacity§regionS#Function~1D hosts§regionS#Set~ExplicitVarSizeWithDefault
[addedDecl] find sched_Set~Explicit: matrix indexed by [int(1..n_periods)] of function (total) int(1..n_boats) --> int(1..n_boats)
[addedDecl] find hosts_Set~ExplicitVarSizeWithDefault: matrix indexed by [int(1..n_boats)] of int(1..n_boats + 1)
[addedDecl] given crew_Function~1D: matrix indexed by [int(1..n_boats)] of int(1..n_upper)
[addedDecl] given capacity_Function~1D: matrix indexed by [int(1..n_boats)] of int(1..n_upper)
[addedStructuralCons] {Set~Explicit}
                      (forAll v__4 : int(1..n_periods - 1) . sched_Set~Explicit§regionS[v__4] .< sched_Set~Explicit§regionS[v__4 + 1])
[addedStructuralCons] {Set~ExplicitVarSizeWithDefault}
                      (forAll v__2 : int(1..n_boats - 1)
                           , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] != n_boats + 1 /\ hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2 + 1] != n_boats + 1
                           . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] < hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2 + 1])
                      /\
                      (forAll v__2 : int(1..n_boats - 1) . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] <= hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2 + 1])
[refn] 0
[applied] p(h) = h
          {rules/refns/horizontal/function-apply-eq-1.rule}
              (forAll v__9 in toSet(p) , v__9[1] = h . v__9[2] = h)
[applied] p(b1) = p(b2)
          {rules/refns/horizontal/function-apply-eq-1.rule}
              (forAll v__10 in toSet(p) , v__10[1] = b1 . v__10[2] = p(b2))
[applied] v__10[2] = p(b2)
          {rules/refns/horizontal/function-apply-eq-2.rule}
              (forAll v__11 in toSet(p) , v__11[1] = b2 . v__11[2] = v__10[2])
[applied] |hosts§regionS#Set~ExplicitVarSizeWithDefault|
          {rules/refns/horizontal/set/card.rule}
              (sum v__12 in hosts§regionS#Set~ExplicitVarSizeWithDefault . 1)
[applied] (sum v__12 in hosts§regionS#Set~ExplicitVarSizeWithDefault . 1)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (sum v__13 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__13] != n_boats + 1 . 1)
[applied] range(p) subsetEq hosts§regionS#Set~ExplicitVarSizeWithDefault
          {rules/refns/horizontal/set/subseteq-to-quantified.rule}
              (forAll v__14 in range(p) . v__14 in hosts§regionS#Set~ExplicitVarSizeWithDefault)
[applied] v__14 in hosts§regionS#Set~ExplicitVarSizeWithDefault
          {rules/refns/horizontal/set/in-to-quantified.rule}
              (exists v__15 in hosts§regionS#Set~ExplicitVarSizeWithDefault . v__15 = v__14)
[applied] (exists v__15 in hosts§regionS#Set~ExplicitVarSizeWithDefault . v__15 = v__14)
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (exists v__16 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__16] != n_boats + 1
                   . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__16] = v__14)
[applied] (forAll v__14 in range(p)
               . (exists v__16 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__16] != n_boats + 1
                      . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__16] = v__14))
          {rules/refns/horizontal/function-range-quantified.rule}
              (forAll v__17 in toSet(p)
                   . (exists v__16 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__16] != n_boats + 1
                          . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__16] = v__17[2]))
[applied] (forAll p in sched§regionS#Set~Explicit
               . (forAll v__17 in toSet(p)
                      . (exists v__16 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__16] != n_boats + 1
                             . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__16] = v__17[2])))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__18 : int(1..n_periods)
                   . (forAll v__17 in toSet(sched_Set~Explicit§regionS[v__18])
                          . (exists v__16 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__16] != n_boats + 1
                                 . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__16] = v__17[2])))
[applied] (forAll h in hosts§regionS#Set~ExplicitVarSizeWithDefault . (forAll v__9 in toSet(p) , v__9[1] = h . v__9[2] = h))
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (forAll v__19 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__19] != n_boats + 1
                   . (forAll v__9 in toSet(p) , v__9[1] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__19] . v__9[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__19]))
[applied] (forAll p in sched§regionS#Set~Explicit
               . (forAll v__19 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__19] != n_boats + 1
                      . (forAll v__9 in toSet(p) , v__9[1] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__19] . v__9[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__19])))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__20 : int(1..n_periods)
                   . (forAll v__19 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__19] != n_boats + 1
                          . (forAll v__9 in toSet(sched_Set~Explicit§regionS[v__20]) , v__9[1] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__19]
                                 . v__9[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__19])))
[applied] crew§regionS#Function~1D(b)
          {rules/refns/vertical/Function~1D/image.rule}
              crew_Function~1D§regionS[b]
[applied] capacity§regionS#Function~1D(h)
          {rules/refns/vertical/Function~1D/image.rule}
              capacity_Function~1D§regionS[h]
[applied] (forAll h in hosts§regionS#Set~ExplicitVarSizeWithDefault
               . (sum b in preImage(p, h) . crew_Function~1D§regionS[b]) <= capacity_Function~1D§regionS[h])
          {rules/refns/vertical/Set~ExplicitVarSizeWithDefault/quantified.rule}
              (forAll v__21 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21] != n_boats + 1
                   . (sum b in preImage(p, hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21]) . crew_Function~1D§regionS[b])
                     <=
                     capacity_Function~1D§regionS[hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21]])
[applied] (forAll p in sched§regionS#Set~Explicit
               . (forAll v__21 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21] != n_boats + 1
                      . (sum b in preImage(p, hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21]) . crew_Function~1D§regionS[b])
                        <=
                        capacity_Function~1D§regionS[hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21]]))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (forAll v__22 : int(1..n_periods)
                   . (forAll v__21 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21] != n_boats + 1
                          . (sum b in preImage(sched_Set~Explicit§regionS[v__22], hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21]) . crew_Function~1D§regionS[b])
                            <=
                            capacity_Function~1D§regionS[hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21]]))
[applied] (sum b in preImage(sched_Set~Explicit§regionS[v__22], hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21]) . crew_Function~1D§regionS[b])
          {rules/refns/horizontal/function-preImage-quantified.rule}
              (sum v__23 : int(1..n_boats) , sched_Set~Explicit§regionS[v__22](v__23) = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21] . crew_Function~1D§regionS[v__23])
[applied] (sum p in sched§regionS#Set~Explicit . (forAll v__10 in toSet(p) , v__10[1] = b1 . (forAll v__11 in toSet(p) , v__11[1] = b2 . v__11[2] = v__10[2])))
          {rules/refns/vertical/Set~Explicit/quantified.rule}
              (sum v__24 : int(1..n_periods)
                   . (forAll v__10 in toSet(sched_Set~Explicit§regionS[v__24]) , v__10[1] = b1
                          . (forAll v__11 in toSet(sched_Set~Explicit§regionS[v__24]) , v__11[1] = b2 . v__11[2] = v__10[2])))
[applied] sched_Set~Explicit§regionS[v__22](v__23) = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21]
          {rules/refns/horizontal/function-apply-eq-1.rule}
              (forAll v__25 in toSet(sched_Set~Explicit§regionS[v__22]) , v__25[1] = v__23 . v__25[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__21])
[removeRefinedDecl] find hosts: set of int(1..n_boats)
[removeRefinedDecl] find sched: set (size n_periods) of function (total) int(1..n_boats) --> int(1..n_boats)
[removeRefinedDecl] given capacity: function (total) int(1..n_boats) --> int(1..n_upper)
[removeRefinedDecl] given crew: function (total) int(1..n_boats) --> int(1..n_upper)
[repr] 1
[representation] find sched_Set~Explicit: matrix indexed by [int(1..n_periods)] of function (total) int(1..n_boats) --> int(1..n_boats)
                 (#2)
                 Function~1D, Function~AsReln
[configuration] sched_Set~Explicit§regionS#Function~AsReln
[addedDecl] find sched_Set~Explicit_Function~AsReln: matrix indexed by [int(1..n_periods)] of relation of (int(1..n_boats) * int(1..n_boats))
[addedStructuralCons] {Function~AsReln}
                      (forAll v__27 : int(1..n_periods)
                           . (forAll v__29 : int(1..n_boats) . (sum v__28 in toSet(sched_Set~Explicit_Function~AsReln§regionS[v__27]) . toInt(v__29 = v__28[1])) = 1))
[refn] 1
[applied] sched_Set~Explicit§regionS#Function~AsReln[v__0] .< sched_Set~Explicit§regionS#Function~AsReln[v__0 + 1]
          {rules/refns/vertical/Function~AsReln/DotLt.rule}
              sched_Set~Explicit_Function~AsReln§regionS[v__0] .< sched_Set~Explicit_Function~AsReln§regionS[v__0 + 1]
[applied] (forAll v__1 in toSet(sched_Set~Explicit§regionS#Function~AsReln[v__0])
               . (exists v__2 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] != n_boats + 1
                      . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] = v__1[2]))
          {rules/refns/vertical/Function~AsReln/quantified.rule}
              (forAll v__1 in toSet(sched_Set~Explicit_Function~AsReln§regionS[v__0])
                   . (exists v__2 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] != n_boats + 1
                          . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] = v__1[2]))
[applied] (forAll v__2 in toSet(sched_Set~Explicit§regionS#Function~AsReln[v__0]) , v__2[1] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1]
               . v__2[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
          {rules/refns/vertical/Function~AsReln/quantified.rule}
              (forAll v__2 in toSet(sched_Set~Explicit_Function~AsReln§regionS[v__0]) , v__2[1] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1]
                   . v__2[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
[applied] (forAll v__3 in toSet(sched_Set~Explicit§regionS#Function~AsReln[v__0]) , v__3[1] = v__2
               . v__3[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
          {rules/refns/vertical/Function~AsReln/quantified.rule}
              (forAll v__3 in toSet(sched_Set~Explicit_Function~AsReln§regionS[v__0]) , v__3[1] = v__2 . v__3[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
[applied] (forAll v__4 in toSet(sched_Set~Explicit§regionS#Function~AsReln[v__2]) , v__4[1] = v__1 . v__4[2] = v__3[2])
          {rules/refns/vertical/Function~AsReln/quantified.rule}
              (forAll v__4 in toSet(sched_Set~Explicit_Function~AsReln§regionS[v__2]) , v__4[1] = v__1 . v__4[2] = v__3[2])
[applied] (forAll v__3 in toSet(sched_Set~Explicit§regionS#Function~AsReln[v__2]) , v__3[1] = v__0
               . (forAll v__4 in toSet(sched_Set~Explicit_Function~AsReln§regionS[v__2]) , v__4[1] = v__1 . v__4[2] = v__3[2]))
          {rules/refns/vertical/Function~AsReln/quantified.rule}
              (forAll v__3 in toSet(sched_Set~Explicit_Function~AsReln§regionS[v__2]) , v__3[1] = v__0
                   . (forAll v__4 in toSet(sched_Set~Explicit_Function~AsReln§regionS[v__2]) , v__4[1] = v__1 . v__4[2] = v__3[2]))
[removeRefinedDecl] find sched_Set~Explicit: matrix indexed by [int(1..n_periods)] of function (total) int(1..n_boats) --> int(1..n_boats)
[repr] 2
[representation] find sched_Set~Explicit_Function~AsReln: matrix indexed by [int(1..n_periods)] of relation of (int(1..n_boats) * int(1..n_boats))
                 (#2)
                 Relation~AsSet, Relation~IntMatrix2
[configuration] sched_Set~Explicit_Function~AsReln§regionS#Relation~AsSet
[addedDecl] find sched_Set~Explicit_Function~AsReln_Relation~AsSet: matrix indexed by [int(1..n_periods)] of set of (int(1..n_boats), int(1..n_boats))
[refn] 2
[applied] sched_Set~Explicit_Function~AsReln§regionS#Relation~AsSet[v__0] .< sched_Set~Explicit_Function~AsReln§regionS#Relation~AsSet[v__0 + 1]
          {rules/refns/vertical/Relation~AsSet/DotLt.rule}
              sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS[v__0] .< sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS[v__0 + 1]
[applied] (forAll v__1 in toSet(sched_Set~Explicit_Function~AsReln§regionS#Relation~AsSet[v__0])
               . (exists v__2 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] != n_boats + 1
                      . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] = v__1[2]))
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (forAll v__1 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS[v__0]
                   . (exists v__2 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] != n_boats + 1
                          . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] = v__1[2]))
[applied] (forAll v__2 in toSet(sched_Set~Explicit_Function~AsReln§regionS#Relation~AsSet[v__0]) , v__2[1] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1]
               . v__2[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (forAll v__2 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS[v__0] , v__2[1] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1]
                   . v__2[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
[applied] (forAll v__3 in toSet(sched_Set~Explicit_Function~AsReln§regionS#Relation~AsSet[v__0]) , v__3[1] = v__2
               . v__3[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (forAll v__3 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS[v__0] , v__3[1] = v__2 . v__3[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
[applied] (forAll v__4 in toSet(sched_Set~Explicit_Function~AsReln§regionS#Relation~AsSet[v__2]) , v__4[1] = v__1 . v__4[2] = v__3[2])
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (forAll v__4 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS[v__2] , v__4[1] = v__1 . v__4[2] = v__3[2])
[applied] (forAll v__3 in toSet(sched_Set~Explicit_Function~AsReln§regionS#Relation~AsSet[v__2]) , v__3[1] = v__0
               . (forAll v__4 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS[v__2] , v__4[1] = v__1 . v__4[2] = v__3[2]))
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (forAll v__3 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS[v__2] , v__3[1] = v__0
                   . (forAll v__4 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS[v__2] , v__4[1] = v__1 . v__4[2] = v__3[2]))
[applied] (sum v__2 in toSet(sched_Set~Explicit_Function~AsReln§regionS#Relation~AsSet[v__0]) . toInt(v__1 = v__2[1]))
          {rules/refns/vertical/Relation~AsSet/relation-RelationAsSet-toSet.rule}
              (sum v__2 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS[v__0] . toInt(v__1 = v__2[1]))
[removeRefinedDecl] find sched_Set~Explicit_Function~AsReln: matrix indexed by [int(1..n_periods)] of relation of (int(1..n_boats) * int(1..n_boats))
[repr] 3
[representation] find sched_Set~Explicit_Function~AsReln_Relation~AsSet: matrix indexed by [int(1..n_periods)] of set of (int(1..n_boats), int(1..n_boats))
                 (#2)
                 Set~ExplicitVarSize, Set~ExplicitVarSizeWithMarker
[configuration] sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker
[addedDecl] find sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker:
                    matrix indexed by [int(1..n_periods)] of (int(0..n_boats * n_boats), matrix indexed by [int(1..n_boats * n_boats)] of (int(1..n_boats), int(1..n_boats)))
[addedStructuralCons] {Set~ExplicitVarSizeWithMarker}
                      (forAll v__34 : int(1..n_periods)
                           . (forAll v__35 : int(1..n_boats * n_boats) , v__35 + 1 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 1]
                                  . sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35, 1]
                                    .<
                                    sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35 + 1, 1]
                                    \/
                                    sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35, 1]
                                    =
                                    sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35 + 1, 1]
                                    /\
                                    sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35, 2]
                                    .<
                                    sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35 + 1, 2])
                             /\
                             (forAll v__35 : int(1..n_boats * n_boats) , v__35 > sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 1]
                                  . sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35, 1] = 1
                                    /\
                                    sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35, 2] = 1))
[refn] 3
[applied] sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__0]
          .<
          sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__0 + 1]
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/DotLt.rule}
              |sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__0]| = 0
              /\
              |sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__0 + 1]| > 0
              \/
              (exists v__37 : int(1..n_boats * n_boats)
                   , v__37 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 1]
                     /\
                     v__37 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 1]
                   . (forAll v__36 : int(1..n_boats * n_boats) , v__36 < v__37
                          . sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__36, 1]
                            =
                            sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__36, 1]
                            /\
                            sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__36, 2]
                            =
                            sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__36, 2])
                     /\
                     (sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__37, 1]
                      .<
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__37, 1]
                      \/
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__37, 1]
                      =
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__37, 1]
                      /\
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__37, 2]
                      .<
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__37, 2]
                      \/
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__37, 1]
                      =
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__37, 1]
                      /\
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__37, 2]
                      =
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__37, 2]
                      /\
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 1]
                      >
                      sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 1]))
[applied] sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__37, 1]
          .<
          sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__37, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__37, 1]
              <
              sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__37, 1]
[applied] sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__37, 2]
          .<
          sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__37, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__37, 2]
              <
              sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 2, v__37, 2]
[applied] sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35, 1]
          .<
          sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35 + 1, 1]
          {rules/refns/horizontal/DotLt-ints.rule}
              sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35, 1]
              <
              sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35 + 1, 1]
[applied] sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35, 2]
          .<
          sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35 + 1, 2]
          {rules/refns/horizontal/DotLt-ints.rule}
              sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35, 2]
              <
              sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__34, 2, v__35 + 1, 2]
[applied] |sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__0]|
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/card.rule}
              sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 1]
[applied] |sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__0 + 1]|
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/card.rule}
              sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0 + 1, 1]
[applied] (forAll v__1 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__0]
               . (exists v__2 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] != n_boats + 1
                      . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] = v__1[2]))
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (forAll v__38 : int(1..n_boats * n_boats) , v__38 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 1]
                   . (exists v__2 : int(1..n_boats) , hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2] != n_boats + 1
                          . hosts_Set~ExplicitVarSizeWithDefault§regionS[v__2]
                            =
                            sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__38, 2]))
[applied] (forAll v__2 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__0]
               , v__2[1] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1]
               . v__2[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (forAll v__39 : int(1..n_boats * n_boats)
                   , sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__39, 1]
                     =
                     hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1]
                     /\
                     v__39 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 1]
                   . sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__39, 2]
                     =
                     hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
[applied] (forAll v__3 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__0] , v__3[1] = v__2
               . v__3[2] = hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (forAll v__40 : int(1..n_boats * n_boats)
                   , sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__40, 1] = v__2
                     /\
                     v__40 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 1]
                   . sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__40, 2]
                     =
                     hosts_Set~ExplicitVarSizeWithDefault§regionS[v__1])
[applied] (forAll v__4 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__2] , v__4[1] = v__1 . v__4[2] = v__3[2])
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (forAll v__41 : int(1..n_boats * n_boats)
                   , sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 2, v__41, 1] = v__1
                     /\
                     v__41 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 1]
                   . sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 2, v__41, 2] = v__3[2])
[applied] (forAll v__3 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__2] , v__3[1] = v__0
               . (forAll v__41 : int(1..n_boats * n_boats)
                      , sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 2, v__41, 1] = v__1
                        /\
                        v__41 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 1]
                      . sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 2, v__41, 2] = v__3[2]))
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (forAll v__42 : int(1..n_boats * n_boats)
                   , sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 2, v__42, 1] = v__0
                     /\
                     v__42 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 1]
                   . (forAll v__41 : int(1..n_boats * n_boats)
                          , sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 2, v__41, 1] = v__1
                            /\
                            v__41 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 1]
                          . sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 2, v__41, 2]
                            =
                            sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__2, 2, v__42, 2]))
[applied] (sum v__2 in sched_Set~Explicit_Function~AsReln_Relation~AsSet§regionS#Set~ExplicitVarSizeWithMarker[v__0] . toInt(v__1 = v__2[1]))
          {rules/refns/vertical/Set~ExplicitVarSizeWithMarker/quantified.rule}
              (sum v__43 : int(1..n_boats * n_boats) , v__43 <= sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 1]
                   . toInt(v__1 = sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker§regionS[v__0, 2, v__43, 1]))
[removeRefinedDecl] find sched_Set~Explicit_Function~AsReln_Relation~AsSet: matrix indexed by [int(1..n_periods)] of set of (int(1..n_boats), int(1..n_boats))
[matrixToTuple] sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker∑1
[removedDecl] find sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker:
                      matrix indexed by [int(1..n_periods)] of (int(0..n_boats * n_boats), matrix indexed by [int(1..n_boats * n_boats)] of (int(1..n_boats), int(1..n_boats)))
              Added the following:
              find sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple1: matrix indexed by [int(1..n_periods)] of int(0..n_boats * n_boats)
              find sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..n_periods), int(1..n_boats * n_boats)] of (int(1..n_boats), int(1..n_boats))
[matrixToTuple] sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2∑2
[removedDecl] find sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2:
                      matrix indexed by [int(1..n_periods), int(1..n_boats * n_boats)] of (int(1..n_boats), int(1..n_boats))
              Added the following:
              find sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple1:
                      matrix indexed by [int(1..n_periods), int(1..n_boats * n_boats)] of int(1..n_boats)
              find sched_Set~Explicit_Function~AsReln_Relation~AsSet_Set~ExplicitVarSizeWithMarker_tuple2_tuple2:
                      matrix indexed by [int(1..n_periods), int(1..n_boats * n_boats)] of int(1..n_boats)
[repr] 4