language ESSENCE' 1.0

given n_boats: int(1..)
given n_periods: int(1..)
given fin1: int
given fin2: int
given capacity_Function1D: matrix indexed by [int(1..n_boats)] of int(1..fin2)
given fin3: int
given fin4: int
given crew_Function1D: matrix indexed by [int(1..n_boats)] of int(1..fin4)
find hosts_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..1 + (n_boats - 1))] of bool
find hosts_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..1 + (n_boats - 1))] of int(1..n_boats)
find sched_ExplicitR9_Function1D:
        matrix indexed by [int(1..n_periods), int(1..n_boats)] of int(1..n_boats)
find aux1_Occurrence:
        matrix indexed by [int(1..n_periods), int(1..n_boats)] of bool
minimising
    sum([toInt(hosts_ExplicitVarSizeWithFlags_Flags[q29])
             | q29 : int(1..1 + (n_boats - 1))])
such that
    and([and([aux1_Occurrence[q10, sched_ExplicitR9_Function1D[q10, q16]]
                  | q16 : int(1..n_boats)])
             | q10 : int(1..n_periods)]),
    and([and([aux1_Occurrence[q10, q13] ->
              or([sched_ExplicitR9_Function1D[q10, q17] = q13 | q17 : int(1..n_boats)])
                  | q13 : int(1..n_boats)])
             | q10 : int(1..n_periods)]),
    and([and([aux1_Occurrence[q10, q12] ->
              or([hosts_ExplicitVarSizeWithFlags_Flags[q19] /\
                  hosts_ExplicitVarSizeWithFlags_Values[q19] = q12
                      | q19 : int(1..1 + (n_boats - 1))])
                  | q12 : int(1..n_boats)])
             | q10 : int(1..n_periods)]),
    and([and([hosts_ExplicitVarSizeWithFlags_Flags[q23] ->
              sched_ExplicitR9_Function1D[q22, hosts_ExplicitVarSizeWithFlags_Values[q23]] =
              hosts_ExplicitVarSizeWithFlags_Values[q23]
                  | q23 : int(1..1 + (n_boats - 1))])
             | q22 : int(1..n_periods)]),
    and([and([hosts_ExplicitVarSizeWithFlags_Flags[q25] ->
              sum([toInt(sched_ExplicitR9_Function1D[q24, q27] =
                         hosts_ExplicitVarSizeWithFlags_Values[q25])
                   * crew_Function1D[q27]
                       | q27 : int(1..n_boats)])
              <= capacity_Function1D[hosts_ExplicitVarSizeWithFlags_Values[q25]]
                  | q25 : int(1..1 + (n_boats - 1))])
             | q24 : int(1..n_periods)]),
    and([sum([toInt(sched_ExplicitR9_Function1D[q9, b1] =
                    sched_ExplicitR9_Function1D[q9, b2])
                  | q9 : int(1..n_periods)])
         <= 1
             | b1 : int(1..n_boats), b2 : int(1..n_boats), b1 < b2]),
    and([hosts_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         hosts_ExplicitVarSizeWithFlags_Values[q1] <
         hosts_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..1 + (n_boats - 1) - 1)]),
    and([hosts_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         hosts_ExplicitVarSizeWithFlags_Values[q2] = 1
             | q2 : int(1..1 + (n_boats - 1))]),
    and([hosts_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         hosts_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..1 + (n_boats - 1) - 1)]),
    and([sched_ExplicitR9_Function1D[q6, ..] <lex
         sched_ExplicitR9_Function1D[q6 + 1, ..]
             | q6 : int(1..n_periods - 1)])

