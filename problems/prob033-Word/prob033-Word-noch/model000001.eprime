language ESSENCE' 1.0

find words_ExplicitVarSizeWithMarker_Marker: int(0..2 ** ((1 + (8 - 1)) * (1 + (4 - 1))))
find words_ExplicitVarSizeWithMarker_Values_Function1D: matrix indexed by [int(1..2 ** ((1 + (8 - 1)) * (1 + (4 - 1)))), int(1..8)] of int(1..4)
maximising words_ExplicitVarSizeWithMarker_Marker
such that
    and([q2 <= words_ExplicitVarSizeWithMarker_Marker ->
         sum([(words_ExplicitVarSizeWithMarker_Values_Function1D[q2, q7] = 2) * 1 | q7 : int(1..8)]) +
         sum([(words_ExplicitVarSizeWithMarker_Values_Function1D[q2, q8] = 3) * 1 | q8 : int(1..8)])
         = 4 | q2 : int(1..2 ** ((1 + (8 - 1)) * (1 + (4 - 1))))]),
    and([and([q3 <= words_ExplicitVarSizeWithMarker_Marker, q4 <= words_ExplicitVarSizeWithMarker_Marker,
              !(and([words_ExplicitVarSizeWithMarker_Values_Function1D[q4, q10] = words_ExplicitVarSizeWithMarker_Values_Function1D[q3, q10] | q10 : int(1..8)]) /\
                and([words_ExplicitVarSizeWithMarker_Values_Function1D[q3, q11] = words_ExplicitVarSizeWithMarker_Values_Function1D[q4, q11] | q11 : int(1..8)])
                /\ (and([or([q12 = q9 | q12 : int(1..8)]) | q9 : int(1..8)]) /\ and([or([q14 = q13 | q14 : int(1..8)]) | q13 : int(1..8)])))])
         -> sum([words_ExplicitVarSizeWithMarker_Values_Function1D[q3, i] = words_ExplicitVarSizeWithMarker_Values_Function1D[q4, i] | i : int(1..8)]) <= 4
             | q3 : int(1..2 ** ((1 + (8 - 1)) * (1 + (4 - 1)))), q4 : int(1..2 ** ((1 + (8 - 1)) * (1 + (4 - 1))))]),
    and([and([q5 <= words_ExplicitVarSizeWithMarker_Marker, q6 <= words_ExplicitVarSizeWithMarker_Marker,
              and([words_ExplicitVarSizeWithMarker_Values_Function1D[q6, q16] = words_ExplicitVarSizeWithMarker_Values_Function1D[q5, q16] | q16 : int(1..8)]) /\
              and([words_ExplicitVarSizeWithMarker_Values_Function1D[q5, q17] = words_ExplicitVarSizeWithMarker_Values_Function1D[q6, q17] | q17 : int(1..8)])
              /\ (and([or([q18 = q15 | q18 : int(1..8)]) | q15 : int(1..8)]) /\ and([or([q20 = q19 | q20 : int(1..8)]) | q19 : int(1..8)]))])
         ->
         sum([words_ExplicitVarSizeWithMarker_Values_Function1D[q5, i] = 1 /\ words_ExplicitVarSizeWithMarker_Values_Function1D[q6, 9 - i] = 4 \/
              words_ExplicitVarSizeWithMarker_Values_Function1D[q5, i] = 2 /\ words_ExplicitVarSizeWithMarker_Values_Function1D[q6, 9 - i] = 3
              \/ words_ExplicitVarSizeWithMarker_Values_Function1D[q5, i] = 3 /\ words_ExplicitVarSizeWithMarker_Values_Function1D[q6, 9 - i] = 2
              \/ words_ExplicitVarSizeWithMarker_Values_Function1D[q5, i] = 4 /\ words_ExplicitVarSizeWithMarker_Values_Function1D[q6, 9 - i] = 1
                  | i : int(1..8)])
         <= 4
             | q5 : int(1..2 ** ((1 + (8 - 1)) * (1 + (4 - 1)))), q6 : int(1..2 ** ((1 + (8 - 1)) * (1 + (4 - 1))))]),
    and([q1 + 1 <= words_ExplicitVarSizeWithMarker_Marker ->
         words_ExplicitVarSizeWithMarker_Values_Function1D[q1, ..] <lex words_ExplicitVarSizeWithMarker_Values_Function1D[q1 + 1, ..]
             | q1 : int(1..2 ** ((1 + (8 - 1)) * (1 + (4 - 1))) - 1)]),
    and([q1 > words_ExplicitVarSizeWithMarker_Marker -> and([words_ExplicitVarSizeWithMarker_Values_Function1D[q1, q21] = 1 | q21 : int(1..8)])
             | q1 : int(1..2 ** ((1 + (8 - 1)) * (1 + (4 - 1))))])

$ Conjure's
$ {"finds": ["words"],
$  "givens": [],
$  "enumGivens": [],
$  "enumLettings": [{"LettingDomainDefnEnum": ["Base", ["A", "C", "G", "T"]]}],
$  "unnameds": [],
$  "trailCompact": [[1, [1, 2, 3, 4, 5, 6, 7, 8, 9]], [1, [1, 2]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7, 8]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7]], [1, [1]], [1, [1, 2, 3, 4, 5, 6]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3]],
$                   [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3, 4, 5]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3, 4]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3, 4, 5]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1, 2]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3, 4]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1, 2, 3]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1, 2, 3, 4]],
$                   [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]]],
$  "trailVerbose": [],
$  "representations": [["words",
$                       {"DomainSet": [{"HasRepresentation": "ExplicitVarSizeWithMarker"},
$                                      {"SizeAttr_None": []},
$                                      {"DomainFunction": [{"HasRepresentation": "Function1D"},
$                                                          [{"SizeAttr_None": []}, "PartialityAttr_Total",
$                                                           "JectivityAttr_None"],
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 8}}]}]},
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 4}}]}]}]}]}]],
$  "originalDomains": [["words",
$                       {"DomainSet": [[], {"SizeAttr_None": []},
$                                      {"DomainFunction": [[],
$                                                          [{"SizeAttr_None": []}, "PartialityAttr_Total",
$                                                           "JectivityAttr_None"],
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 8}}]}]},
$                                                          {"DomainEnum": ["Base", null, null]}]}]}]]}