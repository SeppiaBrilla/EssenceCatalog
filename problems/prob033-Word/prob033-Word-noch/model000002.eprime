language ESSENCE' 1.0

find words_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1)))))] of bool
find words_ExplicitVarSizeWithFlags_Values_Function1D:
        matrix indexed by [int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1))))), int(1..8)] of int(1..4)
maximising
    sum([words_ExplicitVarSizeWithFlags_Flags[q8] * 1 | q8 : int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1)))))])
such that
    and([words_ExplicitVarSizeWithFlags_Flags[q2] ->
         sum([(words_ExplicitVarSizeWithFlags_Values_Function1D[q2, q7] = 2) * 1 | q7 : int(1..8)]) +
         sum([(words_ExplicitVarSizeWithFlags_Values_Function1D[q2, q9] = 3) * 1 | q9 : int(1..8)])
         = 4 | q2 : int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1)))))]),
    and([and([words_ExplicitVarSizeWithFlags_Flags[q3], words_ExplicitVarSizeWithFlags_Flags[q4],
              !(and([words_ExplicitVarSizeWithFlags_Values_Function1D[q4, q11] = words_ExplicitVarSizeWithFlags_Values_Function1D[q3, q11] | q11 : int(1..8)]) /\
                and([words_ExplicitVarSizeWithFlags_Values_Function1D[q3, q12] = words_ExplicitVarSizeWithFlags_Values_Function1D[q4, q12] | q12 : int(1..8)])
                /\ (and([or([q13 = q10 | q13 : int(1..8)]) | q10 : int(1..8)]) /\ and([or([q15 = q14 | q15 : int(1..8)]) | q14 : int(1..8)])))])
         -> sum([words_ExplicitVarSizeWithFlags_Values_Function1D[q3, i] = words_ExplicitVarSizeWithFlags_Values_Function1D[q4, i] | i : int(1..8)]) <= 4
             | q3 : int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1))))),
               q4 : int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1)))))]),
    and([and([words_ExplicitVarSizeWithFlags_Flags[q5], words_ExplicitVarSizeWithFlags_Flags[q6],
              and([words_ExplicitVarSizeWithFlags_Values_Function1D[q6, q17] = words_ExplicitVarSizeWithFlags_Values_Function1D[q5, q17] | q17 : int(1..8)]) /\
              and([words_ExplicitVarSizeWithFlags_Values_Function1D[q5, q18] = words_ExplicitVarSizeWithFlags_Values_Function1D[q6, q18] | q18 : int(1..8)])
              /\ (and([or([q19 = q16 | q19 : int(1..8)]) | q16 : int(1..8)]) /\ and([or([q21 = q20 | q21 : int(1..8)]) | q20 : int(1..8)]))])
         ->
         sum([words_ExplicitVarSizeWithFlags_Values_Function1D[q5, i] = 1 /\ words_ExplicitVarSizeWithFlags_Values_Function1D[q6, 9 - i] = 4 \/
              words_ExplicitVarSizeWithFlags_Values_Function1D[q5, i] = 2 /\ words_ExplicitVarSizeWithFlags_Values_Function1D[q6, 9 - i] = 3
              \/ words_ExplicitVarSizeWithFlags_Values_Function1D[q5, i] = 3 /\ words_ExplicitVarSizeWithFlags_Values_Function1D[q6, 9 - i] = 2
              \/ words_ExplicitVarSizeWithFlags_Values_Function1D[q5, i] = 4 /\ words_ExplicitVarSizeWithFlags_Values_Function1D[q6, 9 - i] = 1
                  | i : int(1..8)])
         <= 4
             | q5 : int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1))))),
               q6 : int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1)))))]),
    and([words_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         words_ExplicitVarSizeWithFlags_Values_Function1D[q1, ..] <lex words_ExplicitVarSizeWithFlags_Values_Function1D[q1 + 1, ..]
             | q1 : int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1)))) - 1)]),
    and([words_ExplicitVarSizeWithFlags_Flags[q1] = false -> and([words_ExplicitVarSizeWithFlags_Values_Function1D[q1, q22] = 1 | q22 : int(1..8)])
             | q1 : int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1)))))]),
    and([words_ExplicitVarSizeWithFlags_Flags[q1 + 1] -> words_ExplicitVarSizeWithFlags_Flags[q1]
             | q1 : int(1..factorial(1 + (4 - 1)) / (factorial(1 + (8 - 1)) * factorial(1 + (4 - 1) - (1 + (8 - 1)))) - 1)])

$ Conjure's
$ {"finds": ["words"],
$  "givens": [],
$  "enumGivens": [],
$  "enumLettings": [{"LettingDomainDefnEnum": ["Base", ["A", "C", "G", "T"]]}],
$  "unnameds": [],
$  "trailCompact": [[1,
$                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]],
$                   [2, [1, 2]],
$                   [1,
$                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
$                     22]],
$                   [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3]],
$                   [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1, 2, 3, 4]],
$                   [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3]],
$                   [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8]], [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2, 3, 4, 5, 6]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1, 2, 3, 4, 5]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3, 4, 5]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3, 4, 5]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2]],
$                   [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3]],
$                   [1, [1]], [1, [1, 2]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1, 2, 3]],
$                   [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2]], [1, [1]],
$                   [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7, 8]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7]], [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2]],
$                   [1, [1]], [1, [1]], [1, [1]]],
$  "trailVerbose": [],
$  "representations": [["words",
$                       {"DomainSet": [{"HasRepresentation": "ExplicitVarSizeWithFlags"},
$                                      {"SizeAttr_None": []},
$                                      {"DomainFunction": [{"HasRepresentation": "Function1D"},
$                                                          [{"SizeAttr_None": []}, "PartialityAttr_Total",
$                                                           "JectivityAttr_None"],
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 8}}]}]},
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 4}}]}]}]}]}]],
$  "originalDomains": [["words",
$                       {"DomainSet": [[], {"SizeAttr_None": []},
$                                      {"DomainFunction": [[],
$                                                          [{"SizeAttr_None": []}, "PartialityAttr_Total",
$                                                           "JectivityAttr_None"],
$                                                          {"DomainReference": ["Index", null]},
$                                                          {"DomainReference": ["Base", null]}]}]}]]}