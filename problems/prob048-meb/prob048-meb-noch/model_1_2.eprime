language ESSENCE' 1.0

given numNodes: int(1..)
given maxPower: int(1..)
given initialNode: int(1..)
given linkCosts:
        matrix indexed by [int(1..numNodes), int(1..numNodes)] of int(0..maxPower)
find nodeBroadcastPower:
        matrix indexed by [int(1..numNodes)] of int(0..maxPower)
find directChildrenMatrix_Occurrence:
        matrix indexed by [int(1..numNodes), int(1..numNodes)] of bool
find totalChildrenMatrix_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..numNodes),
                           int(1..1 + (numNodes - 1))] of int(1..numNodes + 1)
minimising sum([nodeBroadcastPower[i] | i : int(1..numNodes)])
such that
    and([i = j \/
         sum([toInt(directChildrenMatrix_Occurrence[i, q21] /\
                    directChildrenMatrix_Occurrence[j, q21])
                  | q21 : int(1..numNodes)])
         = 0 | i : int(1..numNodes), j : int(1..numNodes)]),
    sum([toInt(totalChildrenMatrix_ExplicitVarSizeWithDummy[initialNode, q20] !=
               numNodes + 1)
             | q20 : int(1..1 + (numNodes - 1))])
    = numNodes,
    and([or([totalChildrenMatrix_ExplicitVarSizeWithDummy[node, q14] != numNodes + 1
             /\ totalChildrenMatrix_ExplicitVarSizeWithDummy[node, q14] = node
                 | q14 : int(1..1 + (numNodes - 1))])
         /\
         sum([toInt(directChildrenMatrix_Occurrence[node, i]) *
              sum([toInt(totalChildrenMatrix_ExplicitVarSizeWithDummy[i, q10] != numNodes + 1)
                       | q10 : int(1..1 + (numNodes - 1))])
                  | i : int(1..numNodes)])
         =
         sum([toInt(totalChildrenMatrix_ExplicitVarSizeWithDummy[node, q12] !=
                    numNodes + 1)
                  | q12 : int(1..1 + (numNodes - 1))])
         - 1
         /\
         and([directChildrenMatrix_Occurrence[node, childNode] ->
              and([totalChildrenMatrix_ExplicitVarSizeWithDummy[childNode, q16] !=
                   numNodes + 1
                   ->
                   or([totalChildrenMatrix_ExplicitVarSizeWithDummy[node, q18] != numNodes + 1 /\
                       totalChildrenMatrix_ExplicitVarSizeWithDummy[node, q18] =
                       totalChildrenMatrix_ExplicitVarSizeWithDummy[childNode, q16]
                           | q18 : int(1..1 + (numNodes - 1))])
                       | q16 : int(1..1 + (numNodes - 1))])
              /\ linkCosts[node, childNode] != 0
              /\ nodeBroadcastPower[node] >= linkCosts[node, childNode]
                  | childNode : int(1..numNodes)])
             | node : int(1..numNodes)]),
    and([and([totalChildrenMatrix_ExplicitVarSizeWithDummy[q4, q5] <
              totalChildrenMatrix_ExplicitVarSizeWithDummy[q4, q5 + 1]
              \/ totalChildrenMatrix_ExplicitVarSizeWithDummy[q4, q5] = numNodes + 1
                  | q5 : int(1..1 + (numNodes - 1) - 1)])
             | q4 : int(1..numNodes)]),
    and([and([totalChildrenMatrix_ExplicitVarSizeWithDummy[q4, q6] = numNodes + 1 ->
              totalChildrenMatrix_ExplicitVarSizeWithDummy[q4, q6 + 1] = numNodes + 1
                  | q6 : int(1..1 + (numNodes - 1) - 1)])
             | q4 : int(1..numNodes)])

