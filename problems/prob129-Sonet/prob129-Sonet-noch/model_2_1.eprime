language ESSENCE' 1.0

given nnodes: int(1..)
given nrings: int(1..)
given capacity: int(1..)
given fin1: int
given demand_Explicit_Occurrence:
        matrix indexed by [int(1..fin1), int(1..nnodes)] of bool
find network_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..nrings)] of int(0..nrings)
find network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker:
        matrix indexed by [int(1..nrings)] of int(0..capacity)
find network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..nrings), int(1..capacity)] of int(1..nnodes)
minimising
    sum([(network_ExplicitVarSizeWithFlags_Flags[q10] > 0) *
         network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q10]
             | q10 : int(1..nrings)])
such that
    and([or([network_ExplicitVarSizeWithFlags_Flags[q12] > 0 /\
             and([or([q15 <=
                      network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q12]
                      /\
                      network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q12,
                                                                                               q15]
                      = q13
                          | q15 : int(1..capacity)])
                      | q13 : int(1..nnodes), demand_Explicit_Occurrence[q11, q13]])
                 | q12 : int(1..nrings)])
             | q11 : int(1..fin1)]),
    and([network_ExplicitVarSizeWithFlags_Flags[q1 + 1] > 0 ->
         network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1] <
         network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1 + 1]
         \/
         network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1] =
         network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q1 + 1]
         /\
         network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q1, ..]
         <lex
         network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q1 + 1,
                                                                                  ..]
             | q1 : int(1..nrings - 1)]),
    and([network_ExplicitVarSizeWithFlags_Flags[q2] = 0 ->
         network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q2] = 0
         /\
         and([network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q2,
                                                                                       q16]
              = 1 | q16 : int(1..capacity)])
             | q2 : int(1..nrings)]),
    and([network_ExplicitVarSizeWithFlags_Flags[q3 + 1] > 0 ->
         network_ExplicitVarSizeWithFlags_Flags[q3] > 0
             | q3 : int(1..nrings - 1)]),
    nrings =
    sum([network_ExplicitVarSizeWithFlags_Flags[q5] | q5 : int(1..nrings)]),
    and([network_ExplicitVarSizeWithFlags_Flags[q6] > 0 ->
         and([q7 + 1 <=
              network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q6]
              ->
              network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q6, q7]
              <
              network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q6,
                                                                                       q7 + 1]
                  | q7 : int(1..capacity - 1)])
             | q6 : int(1..nrings)]),
    and([network_ExplicitVarSizeWithFlags_Flags[q6] > 0 ->
         and([q8 >
              network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q6]
              ->
              network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Values[q6, q8]
              = 1 | q8 : int(1..capacity)])
             | q6 : int(1..nrings)]),
    and([network_ExplicitVarSizeWithFlags_Flags[q6] > 0 ->
         network_ExplicitVarSizeWithFlags_Values_ExplicitVarSizeWithMarker_Marker[q6] <=
         capacity
             | q6 : int(1..nrings)])

