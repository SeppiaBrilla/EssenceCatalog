language ESSENCE' 1.0

given k: int(1..)
given l: int(1..)
given n: int(1..)
find p_PartitionOccurrence_NumParts: int(1..1 + (n - 1))
find p_PartitionOccurrence_WhichPart:
        matrix indexed by [int(1..n)] of int(1..1 + (n - 1))
find p_PartitionOccurrence_PartSizes:
        matrix indexed by [int(1..1 + (n - 1))] of int(0..1 + (n - 1))
find p_PartitionOccurrence_FirstIndex:
        matrix indexed by [int(1..1 + (n - 1))] of int(1..n)
such that
    and([q11 <= p_PartitionOccurrence_NumParts ->
         and([and([!and([or([p_PartitionOccurrence_WhichPart[q14] = q11 /\
                             q14 = start + i * width
                                 | q14 : int(1..n)])
                             | i : int(0..l - 1)])
                       | width : int(1..(n - start + 1) / (l - 1))])
                  | start : int(1..n - l + 1)])
             | q11 : int(1..1 + (n - 1))]),
    and([true | q1 : int(1..1 + (n - 1))]),
    and([q1 > p_PartitionOccurrence_NumParts ->
         p_PartitionOccurrence_PartSizes[q1] = 0
             | q1 : int(1..1 + (n - 1))]),
    k = p_PartitionOccurrence_NumParts,
    and([q2 <= p_PartitionOccurrence_NumParts ->
         or([p_PartitionOccurrence_WhichPart[q3] = q2 | q3 : int(1..n)])
             | q2 : int(3..1 + (n - 1))]),
    p_PartitionOccurrence_NumParts =
    max([p_PartitionOccurrence_WhichPart[q4] | q4 : int(1..n)]),
    and([p_PartitionOccurrence_PartSizes[q5] =
         sum([toInt(p_PartitionOccurrence_WhichPart[q6] = q5) | q6 : int(1..n)])
             | q5 : int(1..1 + (n - 1))]),
    and([q7 <= p_PartitionOccurrence_NumParts ->
         and([p_PartitionOccurrence_WhichPart[q8] = q7 ->
              p_PartitionOccurrence_FirstIndex[q7] <= q8
                  | q8 : int(1..n)])
             | q7 : int(1..1 + (n - 1))]),
    and([q7 <= p_PartitionOccurrence_NumParts ->
         or([p_PartitionOccurrence_WhichPart[q8] = q7 /\
             p_PartitionOccurrence_FirstIndex[q7] = q8
                 | q8 : int(1..n)])
             | q7 : int(1..1 + (n - 1))]),
    and([p_PartitionOccurrence_PartSizes[q7] = 0 ->
         p_PartitionOccurrence_FirstIndex[q7] = 1
             | q7 : int(1..1 + (n - 1))]),
    and([q9 <= p_PartitionOccurrence_NumParts /\
         q10 <= p_PartitionOccurrence_NumParts
         ->
         (q9 < q10 <->
          p_PartitionOccurrence_FirstIndex[q9] < p_PartitionOccurrence_FirstIndex[q10])
             | q9 : int(1..1 + (n - 1)), q10 : int(1..1 + (n - 1))])

