language ESSENCE' 1.0

find words_ExplicitVarSizeWithMarkerR9_Marker: int(0..4294967296)
find words_ExplicitVarSizeWithMarkerR9_Values_Function1D: matrix indexed by [int(1..4294967296), int(1..8)] of int(1..4)
maximising words_ExplicitVarSizeWithMarkerR9_Marker
such that
    and([q86 <= words_ExplicitVarSizeWithMarkerR9_Marker ->
         sum([toInt(words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q86, q89] = 2) | q89 : int(1..8)]) +
         sum([toInt(words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q86, q92] = 3) | q92 : int(1..8)])
         = 4 | q86 : int(1..4294967296)]),
    and([and([q19 <= words_ExplicitVarSizeWithMarkerR9_Marker, q23 <= words_ExplicitVarSizeWithMarkerR9_Marker,
              or([!(sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q23, q24] | q24 : int(1..8), q24 = q20]) =
                    words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q19, q20]
                    /\ or([q25 = q20 | q25 : int(1..8)]))
                      | q20 : int(1..8)])
              \/
              or([!(sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q19, q21] | q21 : int(1..8), q21 = q26]) =
                    words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q23, q26]
                    /\ or([q22 = q26 | q22 : int(1..8)]))
                      | q26 : int(1..8)]); int(1..3)])
         ->
         sum([toInt(and([sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q19, q27] | q27 : int(1..8), q27 = i])
                         =
                         sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q23, q28]
                                  | q28 : int(1..8), q28 = i]),
                         or([q29 = i | q29 : int(1..8)]), or([q30 = i | q30 : int(1..8)]); int(1..3)]))
                  | i : int(1..8)])
         <= 4
             | q19 : int(1..4294967296), q23 : int(1..4294967296)]),
    and([and([q62 <= words_ExplicitVarSizeWithMarkerR9_Marker, q66 <= words_ExplicitVarSizeWithMarkerR9_Marker,
              and([sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q66, q67] | q67 : int(1..8), q67 = q63]) =
                   words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q62, q63]
                   /\ or([q68 = q63 | q68 : int(1..8)])
                       | q63 : int(1..8)])
              /\
              and([sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q62, q64] | q64 : int(1..8), q64 = q69]) =
                   words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q66, q69]
                   /\ or([q65 = q69 | q65 : int(1..8)])
                       | q69 : int(1..8)]); int(1..3)])
         ->
         sum([toInt(sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q62, q70] | q70 : int(1..8), q70 = i]) = 1
                    /\ or([q71 = i | q71 : int(1..8)])
                    /\
                    (sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q66, q72] | q72 : int(1..8), q72 = 9 - i])
                     = 4
                     /\ or([q73 = 9 - i | q73 : int(1..8)]))
                    \/
                    sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q62, q74] | q74 : int(1..8), q74 = i]) = 2
                    /\ or([q75 = i | q75 : int(1..8)])
                    /\
                    (sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q66, q76] | q76 : int(1..8), q76 = 9 - i])
                     = 3
                     /\ or([q77 = 9 - i | q77 : int(1..8)]))
                    \/
                    sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q62, q78] | q78 : int(1..8), q78 = i]) = 3
                    /\ or([q79 = i | q79 : int(1..8)])
                    /\
                    (sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q66, q80] | q80 : int(1..8), q80 = 9 - i])
                     = 2
                     /\ or([q81 = 9 - i | q81 : int(1..8)]))
                    \/
                    sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q62, q82] | q82 : int(1..8), q82 = i]) = 4
                    /\ or([q83 = i | q83 : int(1..8)])
                    /\
                    (sum([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q66, q84] | q84 : int(1..8), q84 = 9 - i])
                     = 1
                     /\ or([q85 = 9 - i | q85 : int(1..8)])))
                  | i : int(1..8)])
         <= 4
             | q62 : int(1..4294967296), q66 : int(1..4294967296)]),
    and([q1 + 1 <= words_ExplicitVarSizeWithMarkerR9_Marker ->
         words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q1, ..] <lex
         words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q1 + 1, ..]
             | q1 : int(1..4294967295)]),
    and([q2 > words_ExplicitVarSizeWithMarkerR9_Marker ->
         and([words_ExplicitVarSizeWithMarkerR9_Values_Function1D[q2, q5] = 1 | q5 : int(1..8)])
             | q2 : int(1..4294967296)])

$ Conjure's
$ {"finds": [{"Name": "words"}],
$  "givens": [],
$  "enumGivens": [],
$  "enumLettings": [{"LettingDomainDefnEnum": [{"Name": "Base"},
$                                              [{"Name": "A"}, {"Name": "C"}, {"Name": "G"}, {"Name": "T"}]]}],
$  "unnameds": [],
$  "strategyQ": {"PickFirst": []},
$  "strategyA": {"Compact": []},
$  "trailCompact": [[1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [],
$  "trailRewrites": [],
$  "nameGenState": [["q", 93]],
$  "nbExtraGivens": 0,
$  "representations": [[{"Name": "words"},
$                       {"DomainSet": [{"Set_ExplicitVarSizeWithMarker": []}, {"SizeAttr_None": []},
$                                      {"DomainFunction": [{"Function_1D": []},
$                                                          [{"SizeAttr_None": []}, "PartialityAttr_Total",
$                                                           "JectivityAttr_None"],
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 8}}]}]},
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 4}}]}]}]}]}]],
$  "representationsTree": [[{"Name": "words"},
$                           [{"rootLabel": {"Set_ExplicitVarSizeWithMarker": []},
$                             "subForest": [{"rootLabel": {"Function_1D": []},
$                                            "subForest": [{"rootLabel": null,
$                                                           "subForest": []},
$                                                          {"rootLabel": null,
$                                                           "subForest": []}]}]}]]],
$  "originalDomains": [[{"Name": "words"},
$                       {"DomainSet": [[], {"SizeAttr_None": []},
$                                      {"DomainFunction": [[],
$                                                          [{"SizeAttr_None": []}, "PartialityAttr_Total",
$                                                           "JectivityAttr_None"],
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 8}}]}]},
$                                                          {"DomainEnum": [{"Name": "Base"}, null, null]}]}]}]],
$  "questionAnswered": []}