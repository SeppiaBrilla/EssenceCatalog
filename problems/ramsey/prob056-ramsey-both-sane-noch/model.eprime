language ESSENCE' 1.0

given n: int(1..20)
given colours: int(1..10)
letting num_edges be n * (n - 1)
find graph_RelationAsMatrix:
        matrix indexed by [int(1..colours), int(1..n), int(1..n)] of bool
such that
    and([sum([graph_RelationAsMatrix[q4_1, q4_2, q4_3]
                  | q4_1 : int(1..colours), q4_2 : int(1..n), q4_3 : int(1..n), q4_2 = i])
         = n - 1
         /\
         sum([graph_RelationAsMatrix[q5_1, q5_2, q5_3]
                  | q5_1 : int(1..colours), q5_2 : int(1..n), q5_3 : int(1..n), q5_3 = i])
         = n - 1
         /\
         sum([graph_RelationAsMatrix[q6_1, q6_2, q6_3]
                  | q6_1 : int(1..colours), q6_2 : int(1..n), q6_3 : int(1..n), q6_2 = i,
                    q6_3 = i])
         = 0 | i : int(1..n)]),
    and([sum([graph_RelationAsMatrix[q7_1, q7_2, q7_3]
                  | q7_1 : int(1..colours), q7_2 : int(1..n), q7_3 : int(1..n), q7_2 = i,
                    q7_3 = j])
         = 1
         /\
         sum([graph_RelationAsMatrix[q8_1, q8_2, q8_3]
                  | q8_1 : int(1..colours), q8_2 : int(1..n), q8_3 : int(1..n), q8_2 = j,
                    q8_3 = i])
         = 1
         /\
         (and([graph_RelationAsMatrix[q11_1, q11_2, q11_3] ->
               or([graph_RelationAsMatrix[q10_1, q10_2, q10_3] /\ q10_1 = q11_1
                       | q10_1 : int(1..colours), q10_2 : int(1..n), q10_3 : int(1..n), q10_2 = j,
                         q10_3 = i])
                   | q11_1 : int(1..colours), q11_2 : int(1..n), q11_3 : int(1..n), q11_2 = i,
                     q11_3 = j])
          /\
          and([graph_RelationAsMatrix[q9_1, q9_2, q9_3] ->
               or([graph_RelationAsMatrix[q12_1, q12_2, q12_3] /\ q12_1 = q9_1
                       | q12_1 : int(1..colours), q12_2 : int(1..n), q12_3 : int(1..n), q12_2 = i,
                         q12_3 = j])
                   | q9_1 : int(1..colours), q9_2 : int(1..n), q9_3 : int(1..n), q9_2 = j,
                     q9_3 = i]))
             | i : int(1..n), j : int(1..n), i != j]),
    and([and([graph_RelationAsMatrix[q13_1, q13_2, q13_3] ->
              and([graph_RelationAsMatrix[q14_1, q14_2, q14_3] ->
                   !graph_RelationAsMatrix[q13_1, q14_3, q13_3]
                       | q14_1 : int(1..colours), q14_2 : int(1..n), q14_3 : int(1..n), q14_1 = q13_1,
                         q14_2 = i, q14_3 != q13_3])
                  | q13_1 : int(1..colours), q13_2 : int(1..n), q13_3 : int(1..n), q13_2 = i])
             | i : int(1..n)]),
    num_edges =
    sum([sum([sum([graph_RelationAsMatrix[q1, q2, q3] | q3 : int(1..n)])
                  | q2 : int(1..n)])
             | q1 : int(1..colours)])

