language ESSENCE' 1.0

given k: int(1..)
given b: int(1..)
given t: int(1..)
given g: int(2..)
where k >= t
where b >= g ** t
find CoverTest_ExplicitWithFlagsR9_Flags:
        matrix indexed by [int(1..b)] of int(0..b)
find CoverTest_ExplicitWithFlagsR9_Values_Function1D:
        matrix indexed by [int(1..b), int(1..k)] of int(1..g)
such that
    and([or([CoverTest_ExplicitWithFlagsR9_Flags[q13] > 0 /\
             and([CoverTest_ExplicitWithFlagsR9_Values_Function1D[q13, q15] =
                  testcase_Function1DPartial_Values[q15]
                      | q15 : int(1..k), testcase_Function1DPartial_Flags[q15]])
                 | q13 : int(1..b)])
             | testcase_Function1DPartial_Flags : matrix indexed by [int(1..k)] of bool,
               testcase_Function1DPartial_Values : matrix indexed by [int(1..k)] of int(1..g),
               and([testcase_Function1DPartial_Flags[q1] = false ->
                    testcase_Function1DPartial_Values[q1] = 1
                        | q1 : int(1..k)]),
               sum([1 | q12 : int(1..k), testcase_Function1DPartial_Flags[q12]]) = t]),
    and([CoverTest_ExplicitWithFlagsR9_Flags[q4 + 1] > 0 ->
         CoverTest_ExplicitWithFlagsR9_Values_Function1D[q4, ..] <lex
         CoverTest_ExplicitWithFlagsR9_Values_Function1D[q4 + 1, ..]
             | q4 : int(1..b - 1)]),
    and([CoverTest_ExplicitWithFlagsR9_Flags[q5] = 0 ->
         and([CoverTest_ExplicitWithFlagsR9_Values_Function1D[q5, q16] = 1
                  | q16 : int(1..k)])
             | q5 : int(1..b)]),
    and([CoverTest_ExplicitWithFlagsR9_Flags[q6 + 1] > 0 ->
         CoverTest_ExplicitWithFlagsR9_Flags[q6] > 0
             | q6 : int(1..b - 1)]),
    b = sum([CoverTest_ExplicitWithFlagsR9_Flags[q8] | q8 : int(1..b)])

