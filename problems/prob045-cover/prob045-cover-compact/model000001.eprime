language ESSENCE' 1.0

given k: int(1..)
given b: int(1..)
given t: int(1..)
given g: int(2..)
where
    k >= t,
    b >= g ** t
letting alphabet be domain int(1..g)
letting switches be domain int(1..k)
find CoverTest_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..b)] of int(0..min(b, factorial(1 + (g - 1)) / (factorial(1 + (k - 1)) * factorial(1 + (g - 1) - (1 + (k - 1))))))
find CoverTest_ExplicitVarSizeWithFlags_Values_Function1D: matrix indexed by [int(1..b), int(1..k)] of int(1..g)
such that
    and([or([CoverTest_ExplicitVarSizeWithFlags_Flags[q3] > 0 /\
             (and([CoverTest_ExplicitVarSizeWithFlags_Values_Function1D[q3, q5] = testcase_Function1DPartial_Values[q5]
                       | q5 : int(1..k), testcase_Function1DPartial_Flags[q5]])
              /\ and([or([q6 = q4 | q6 : int(1..k)]) | q4 : int(1..k), testcase_Function1DPartial_Flags[q4]]))
                 | q3 : int(1..b)])
             | testcase_Function1DPartial_Flags : matrix indexed by [int(1..k)] of bool, testcase_Function1DPartial_Values : matrix indexed by [int(1..k)] of int(1..g),
               and([testcase_Function1DPartial_Flags[q1] = false -> testcase_Function1DPartial_Values[q1] = 1 | q1 : int(1..k)]),
               sum([1 | q8 : int(1..k), testcase_Function1DPartial_Flags[q8]]) = t]),
    and([CoverTest_ExplicitVarSizeWithFlags_Flags[q2 + 1] > 0 ->
         CoverTest_ExplicitVarSizeWithFlags_Values_Function1D[q2, ..] <lex CoverTest_ExplicitVarSizeWithFlags_Values_Function1D[q2 + 1, ..]
             | q2 : int(1..b - 1)]),
    and([CoverTest_ExplicitVarSizeWithFlags_Flags[q2] = 0 -> and([CoverTest_ExplicitVarSizeWithFlags_Values_Function1D[q2, q7] = 1 | q7 : int(1..k)])
             | q2 : int(1..b)]),
    and([CoverTest_ExplicitVarSizeWithFlags_Flags[q2 + 1] > 0 -> CoverTest_ExplicitVarSizeWithFlags_Flags[q2] > 0 | q2 : int(1..b - 1)]),
    b = sum([CoverTest_ExplicitVarSizeWithFlags_Flags[q2] | q2 : int(1..b)])

$ Conjure's
$ {"finds": ["CoverTest"],
$  "givens": ["k", "b", "t", "g"],
$  "enumGivens": [],
$  "enumLettings": [],
$  "unnameds": [["alphabet", {"Reference": ["g", null]}],
$               ["switches", {"Reference": ["k", null]}]],
$  "trailCompact": [[1,
$                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9]], [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7, 8]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [1, [1]],
$                   [1,
$                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
$                     23, 24, 25, 26, 27, 28, 29]],
$                   [1, [1]],
$                   [1,
$                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
$                     23, 24, 25, 26, 27, 28]],
$                   [1, [1]],
$                   [1,
$                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
$                     23, 24, 25, 26, 27]],
$                   [1, [1]],
$                   [1,
$                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
$                     23, 24, 25, 26]],
$                   [1, [1]],
$                   [1,
$                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
$                     23]],
$                   [1, [1]],
$                   [1,
$                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
$                     22]],
$                   [1, [1]],
$                   [1,
$                    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]],
$                   [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6, 7, 8]], [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5, 6]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1, 2, 3]],
$                   [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]],
$                   [1, [1, 2]], [1, [1]], [1, [1, 2, 3, 4, 5, 6, 7]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2, 3, 4]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3, 4, 5, 6]],
$                   [1, [1]], [1, [1, 2, 3, 4, 5]], [1, [1]], [1, [1, 2, 3, 4]], [1, [1]],
$                   [1, [1, 2, 3]], [1, [1]], [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]],
$                   [1, [1, 2]], [1, [1]], [1, [1]], [1, [1]], [1, [1, 2, 3]], [1, [1]], [1, [1]],
$                   [1, [1]], [1, [1]], [1, [1]]],
$  "trailVerbose": [],
$  "representations": [["k",
$                       {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}],
$                      ["t", {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}],
$                      ["b", {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}],
$                      ["g", {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 2}}}]}],
$                      ["CoverTest",
$                       {"DomainMSet": [{"HasRepresentation": "ExplicitVarSizeWithFlags"},
$                                       [{"SizeAttr_Size": {"Reference": ["b",
$                                                                         {"DeclHasRepr": ["Given", "b",
$                                                                                          {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}]}]}},
$                                        {"OccurAttr_None": []}],
$                                       {"DomainFunction": [{"HasRepresentation": "Function1D"},
$                                                           [{"SizeAttr_None": []}, "PartialityAttr_Total",
$                                                            "JectivityAttr_None"],
$                                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                            {"Reference": ["k",
$                                                                                                           {"DeclHasRepr": ["Given",
$                                                                                                                            "k",
$                                                                                                                            {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}]}]}]}]},
$                                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                            {"Reference": ["g",
$                                                                                                           {"DeclHasRepr": ["Given",
$                                                                                                                            "g",
$                                                                                                                            {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 2}}}]}]}]}]}]}]}]}]],
$  "originalDomains": [["k",
$                       {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}],
$                      ["b", {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}],
$                      ["t", {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}],
$                      ["g", {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 2}}}]}],
$                      ["CoverTest",
$                       {"DomainMSet": [[],
$                                       [{"SizeAttr_Size": {"Reference": ["b", null]}}, {"OccurAttr_None": []}],
$                                       {"DomainFunction": [[],
$                                                           [{"SizeAttr_None": []}, "PartialityAttr_Total",
$                                                            "JectivityAttr_None"],
$                                                           {"DomainReference": ["switches", null]},
$                                                           {"DomainReference": ["alphabet", null]}]}]}]]}