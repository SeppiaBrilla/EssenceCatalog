language ESSENCE' 1.0

given k: int(1..5)
given n: int(1..30)
letting let1 be n * k
find seq_Function1D: matrix indexed by [int(1..let1)] of int(1..n)
such that
    and([or([and([or([f_Function1D[q7] = i | q7 : int(1..k)]) <->
                  or([seq_Function1D[q10] = m /\ q10 = i | q10 : int(1..let1)])
                      | i : int(1..n * k)])
             /\ and([f_Function1D[j + 1] - f_Function1D[j] = m + 1 | j : int(1..k - 1)])
                 | f_Function1D : matrix indexed by [int(1..k)] of int(1..n * k),
                   allDiff(f_Function1D)])
             | m : int(1..n)]),
    and([or([seq_Function1D[q3] = q2 | q3 : int(1..let1)]) | q2 : int(1..n)])

