language ESSENCE' 1.0

given numberLocations: int
given fin1: int
given fin2: int
given orderWeights_Function1D: matrix indexed by [int(1..numberLocations)] of int(1..fin2)
given fin3: int
given fin4: int
given costs_FunctionND: matrix indexed by [int(0..numberLocations), int(0..numberLocations)] of int(0..fin4)
given vehicleCapacity: int
letting maxTotalCost be sum([costs_FunctionND[0, i] | i : int(1..numberLocations)]) * 2
letting totalOrderWeight be sum([orderWeights_Function1D[q406] | q406 : int(1..numberLocations)])
letting minVehicles be totalOrderWeight / vehicleCapacity + toInt(totalOrderWeight % vehicleCapacity != 0)
find plan_ExplicitVarSizeWithMarkerR14_Marker: int(0..numberLocations)
find incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker: int(0..numberLocations)
find plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length:
        matrix indexed by [int(1..numberLocations)] of int(0..numberLocations)
find incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length:
        matrix indexed by [int(1..numberLocations)] of int(0..numberLocations)
find plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values:
        matrix indexed by [int(1..numberLocations), int(1..numberLocations)] of int(1..numberLocations)
find incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values:
        matrix indexed by [int(1..numberLocations), int(1..numberLocations)] of int(1..numberLocations)
find optVar: int(0..maxTotalCost)
SNSGroup plan_neighbourhoodGroup :
    [plan_ExplicitVarSizeWithMarkerR14_Marker, plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length,
     plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values]
find plan_setAddSingle_conjure_aux38: int(1..numberLocations)
find plan_setAddSingle_conjure_aux39: int(1..numberLocations)
find plan_setAddSingle_conjure_aux40: int(1..numberLocations)
find plan_setAddSingle_activation: bool
find plan_setAddSingle_size: int(1..numberLocations)
SNSNeighbourhood plan_setAddSingle :
    (plan_setAddSingle_size, plan_setAddSingle_activation, plan_neighbourhoodGroup,
     [plan_setAddSingle_conjure_aux38, plan_setAddSingle_conjure_aux39, plan_setAddSingle_conjure_aux40])
find plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverAny_activation: bool
find plan_setLiftMultiple_sequenceCrossOverAny_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceCrossOverAny :
    (plan_setLiftMultiple_sequenceCrossOverAny_size, plan_setLiftMultiple_sequenceCrossOverAny_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41, plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42,
      plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43, plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44])
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48: int(1..numberLocations)
find plan_setLiftMultiple_sequenceCrossOverSub_activation: bool
find plan_setLiftMultiple_sequenceCrossOverSub_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceCrossOverSub :
    (plan_setLiftMultiple_sequenceCrossOverSub_size, plan_setLiftMultiple_sequenceCrossOverSub_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8, plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9,
      plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45, plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46,
      plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47, plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48])
find plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49: int(1..numberLocations)
find plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50: int(1..numberLocations)
find plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51: int(1..numberLocations)
find plan_setLiftMultiple_sequenceMergeLeftOrRight_activation: bool
find plan_setLiftMultiple_sequenceMergeLeftOrRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceMergeLeftOrRight :
    (plan_setLiftMultiple_sequenceMergeLeftOrRight_size, plan_setLiftMultiple_sequenceMergeLeftOrRight_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49,
      plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50,
      plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51])
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation: bool
find plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight :
    (plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size,
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation, plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52,
      plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53,
      plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54,
      plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55])
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59: int(1..numberLocations)
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation: bool
find plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight :
    (plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size,
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation, plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56,
      plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57,
      plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58,
      plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59])
find plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60: int(1..numberLocations)
find plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61: int(1..numberLocations)
find plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62: int(1..numberLocations)
find plan_setLiftMultiple_sequenceSplitLeftOrRight_activation: bool
find plan_setLiftMultiple_sequenceSplitLeftOrRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftMultiple_sequenceSplitLeftOrRight :
    (plan_setLiftMultiple_sequenceSplitLeftOrRight_size, plan_setLiftMultiple_sequenceSplitLeftOrRight_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60,
      plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61,
      plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62])
find plan_setLiftSingle_sequenceAddLeft_conjure_aux63: int(1..numberLocations)
find plan_setLiftSingle_sequenceAddLeft_conjure_aux64: int(1..numberLocations)
find plan_setLiftSingle_sequenceAddLeft_activation: bool
find plan_setLiftSingle_sequenceAddLeft_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceAddLeft :
    (plan_setLiftSingle_sequenceAddLeft_size, plan_setLiftSingle_sequenceAddLeft_activation, plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceAddLeft_conjure_aux63, plan_setLiftSingle_sequenceAddLeft_conjure_aux64])
find plan_setLiftSingle_sequenceAddRight_conjure_aux65: int(1..numberLocations)
find plan_setLiftSingle_sequenceAddRight_conjure_aux66: int(1..numberLocations)
find plan_setLiftSingle_sequenceAddRight_activation: bool
find plan_setLiftSingle_sequenceAddRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceAddRight :
    (plan_setLiftSingle_sequenceAddRight_size, plan_setLiftSingle_sequenceAddRight_activation, plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceAddRight_conjure_aux65, plan_setLiftSingle_sequenceAddRight_conjure_aux66])
find plan_setLiftSingle_sequenceAnySwap_conjure_aux67: int(1..numberLocations)
find plan_setLiftSingle_sequenceAnySwap_conjure_aux68: int(1..numberLocations)
find plan_setLiftSingle_sequenceAnySwap_activation: bool
find plan_setLiftSingle_sequenceAnySwap_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceAnySwap :
    (plan_setLiftSingle_sequenceAnySwap_size, plan_setLiftSingle_sequenceAnySwap_activation, plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceAnySwap_conjure_aux67, plan_setLiftSingle_sequenceAnySwap_conjure_aux68])
find plan_setLiftSingle_sequenceRelaxSub_conjure_aux5: int(1..numberLocations)
find plan_setLiftSingle_sequenceRelaxSub_conjure_aux6: int(1..numberLocations)
find plan_setLiftSingle_sequenceRelaxSub_conjure_aux7: int(1..numberLocations)
find plan_setLiftSingle_sequenceRelaxSub_conjure_aux69: int(1..numberLocations)
find plan_setLiftSingle_sequenceRelaxSub_conjure_aux70: int(1..numberLocations)
find plan_setLiftSingle_sequenceRelaxSub_activation: bool
find plan_setLiftSingle_sequenceRelaxSub_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceRelaxSub :
    (plan_setLiftSingle_sequenceRelaxSub_size, plan_setLiftSingle_sequenceRelaxSub_activation, plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceRelaxSub_conjure_aux5, plan_setLiftSingle_sequenceRelaxSub_conjure_aux6,
      plan_setLiftSingle_sequenceRelaxSub_conjure_aux7, plan_setLiftSingle_sequenceRelaxSub_conjure_aux69,
      plan_setLiftSingle_sequenceRelaxSub_conjure_aux70])
find plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71: int(1..numberLocations)
find plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72: int(1..numberLocations)
find plan_setLiftSingle_sequenceRemoveLeft_activation: bool
find plan_setLiftSingle_sequenceRemoveLeft_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceRemoveLeft :
    (plan_setLiftSingle_sequenceRemoveLeft_size, plan_setLiftSingle_sequenceRemoveLeft_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71, plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72])
find plan_setLiftSingle_sequenceRemoveRight_conjure_aux73: int(1..numberLocations)
find plan_setLiftSingle_sequenceRemoveRight_conjure_aux74: int(1..numberLocations)
find plan_setLiftSingle_sequenceRemoveRight_activation: bool
find plan_setLiftSingle_sequenceRemoveRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceRemoveRight :
    (plan_setLiftSingle_sequenceRemoveRight_size, plan_setLiftSingle_sequenceRemoveRight_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceRemoveRight_conjure_aux73, plan_setLiftSingle_sequenceRemoveRight_conjure_aux74])
find plan_setLiftSingle_sequenceReverseSub_conjure_aux3: int(1..numberLocations)
find plan_setLiftSingle_sequenceReverseSub_conjure_aux4: int(1..numberLocations)
find plan_setLiftSingle_sequenceReverseSub_conjure_aux75: int(1..numberLocations)
find plan_setLiftSingle_sequenceReverseSub_conjure_aux76: int(1..numberLocations)
find plan_setLiftSingle_sequenceReverseSub_activation: bool
find plan_setLiftSingle_sequenceReverseSub_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceReverseSub :
    (plan_setLiftSingle_sequenceReverseSub_size, plan_setLiftSingle_sequenceReverseSub_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceReverseSub_conjure_aux3, plan_setLiftSingle_sequenceReverseSub_conjure_aux4,
      plan_setLiftSingle_sequenceReverseSub_conjure_aux75, plan_setLiftSingle_sequenceReverseSub_conjure_aux76])
find plan_setLiftSingle_sequenceRotateLeft_conjure_aux77: int(1..numberLocations)
find plan_setLiftSingle_sequenceRotateLeft_conjure_aux78: int(1..numberLocations)
find plan_setLiftSingle_sequenceRotateLeft_activation: bool
find plan_setLiftSingle_sequenceRotateLeft_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceRotateLeft :
    (plan_setLiftSingle_sequenceRotateLeft_size, plan_setLiftSingle_sequenceRotateLeft_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77, plan_setLiftSingle_sequenceRotateLeft_conjure_aux78])
find plan_setLiftSingle_sequenceRotateRight_conjure_aux79: int(1..numberLocations)
find plan_setLiftSingle_sequenceRotateRight_conjure_aux80: int(1..numberLocations)
find plan_setLiftSingle_sequenceRotateRight_activation: bool
find plan_setLiftSingle_sequenceRotateRight_size: int(1..numberLocations)
SNSNeighbourhood plan_setLiftSingle_sequenceRotateRight :
    (plan_setLiftSingle_sequenceRotateRight_size, plan_setLiftSingle_sequenceRotateRight_activation,
     plan_neighbourhoodGroup,
     [plan_setLiftSingle_sequenceRotateRight_conjure_aux79, plan_setLiftSingle_sequenceRotateRight_conjure_aux80])
find plan_setRemoveSingle_conjure_aux81: int(1..numberLocations)
find plan_setRemoveSingle_conjure_aux82: int(1..numberLocations)
find plan_setRemoveSingle_conjure_aux83: int(1..numberLocations)
find plan_setRemoveSingle_activation: bool
find plan_setRemoveSingle_size: int(1..numberLocations)
SNSNeighbourhood plan_setRemoveSingle :
    (plan_setRemoveSingle_size, plan_setRemoveSingle_activation, plan_neighbourhoodGroup,
     [plan_setRemoveSingle_conjure_aux81, plan_setRemoveSingle_conjure_aux82, plan_setRemoveSingle_conjure_aux83])
SNSIncumbentMapping([plan_ExplicitVarSizeWithMarkerR14_Marker,
                     plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values,
                     plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length],
                    [incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
                     incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values,
                     incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length])
minimising optVar
such that
    optVar =
    sum([toInt(q32 <= plan_ExplicitVarSizeWithMarkerR14_Marker) *
         catchUndef(sum([toInt(q1 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q32]) *
                         catchUndef(costs_FunctionND
                                        [plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q32, q1 - 1],
                                         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q32, q1]],
                                    0)
                             | q1 : int(2..numberLocations)])
                    + costs_FunctionND[0, plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q32, 1]]
                    +
                    costs_FunctionND
                        [plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                             [q32, plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q32]],
                         0],
                    0)
             | q32 : int(1..numberLocations)]),
    and([q32 <= plan_ExplicitVarSizeWithMarkerR14_Marker ->
         and([q1 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q32] ->
              q1 - 1 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q32]
                  | q1 : int(2..numberLocations)])
             | q32 : int(1..numberLocations)]),
    and([q32 <= plan_ExplicitVarSizeWithMarkerR14_Marker ->
         and([q1 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q32] ->
              q1 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q32]
                  | q1 : int(2..numberLocations)])
             | q32 : int(1..numberLocations)]),
    and([q32 <= plan_ExplicitVarSizeWithMarkerR14_Marker ->
         1 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q32]
             | q32 : int(1..numberLocations)]),
    and([q32 <= plan_ExplicitVarSizeWithMarkerR14_Marker ->
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q32] <=
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q32]
             | q32 : int(1..numberLocations)]),
    and([q33 <= plan_ExplicitVarSizeWithMarkerR14_Marker ->
         sum([toInt(q35 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q33]) *
              catchUndef(orderWeights_Function1D
                             [plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q33, q35]],
                         0)
                  | q35 : int(1..numberLocations)])
         <= vehicleCapacity
             | q33 : int(1..numberLocations)]),
    and([1 =
         sum([toInt(q38 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q36] /\
                    q36 <= plan_ExplicitVarSizeWithMarkerR14_Marker)
              * catchUndef(toInt(order = plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q36, q38]), 0)
                  | q36 : int(1..numberLocations), q38 : int(1..numberLocations)])
             | order : int(1..numberLocations)]),
    alldifferent_except([toInt(q41 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q39] /\
                               q39 <= plan_ExplicitVarSizeWithMarkerR14_Marker)
                         * catchUndef(plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q39, q41], 0)
                             | q39 : int(1..numberLocations), q41 : int(1..numberLocations)],
                        0),
    sum([toInt(q42 <= plan_ExplicitVarSizeWithMarkerR14_Marker) *
         catchUndef(plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q42], 0)
             | q42 : int(1..numberLocations)])
    = numberLocations,
    plan_setAddSingle_activation -> allDiff([plan_setAddSingle_conjure_aux38; int(1)]),
    plan_setAddSingle_activation ->
    plan_setAddSingle_conjure_aux38 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setAddSingle_activation ->
    allDiff([plan_setAddSingle_conjure_aux39, plan_setAddSingle_conjure_aux40; int(1..2)]),
    plan_setAddSingle_activation ->
    plan_setAddSingle_conjure_aux39 <= plan_ExplicitVarSizeWithMarkerR14_Marker /\
    plan_setAddSingle_conjure_aux40 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setAddSingle_activation ->
    and([q43 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\ !(q43 = plan_setAddSingle_conjure_aux38) ->
         and([q49 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q43] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q43, q49] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q43, q49]
              /\ q49 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q43]
                  | q49 : int(1..numberLocations)])
         /\
         and([q50 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q43] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q43, q50] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q43, q50]
              /\ q50 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q43]
                  | q50 : int(1..numberLocations)])
         /\
         (and([q52 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q43] ->
               or([q54 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q43] /\ q54 = q52
                       | q54 : int(1..numberLocations)])
                   | q52 : int(1..numberLocations)])
          /\
          and([q56 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q43] ->
               or([q58 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q43] /\ q58 = q56
                       | q58 : int(1..numberLocations)])
                   | q56 : int(1..numberLocations)]))
             | q43 : int(1..numberLocations)]),
    plan_setAddSingle_activation ->
    and([q60 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux39] ->
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[plan_setAddSingle_conjure_aux38, q60]
         = plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[plan_setAddSingle_conjure_aux39, q60]
         /\
         q60 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux38]
             | q60 : int(1..numberLocations)])
    /\
    and([q61 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux38]
         ->
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[plan_setAddSingle_conjure_aux39, q61] =
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[plan_setAddSingle_conjure_aux38, q61]
         /\ q61 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux39]
             | q61 : int(1..numberLocations)])
    /\
    (and([q63 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux39] ->
          or([q65 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux38]
              /\ q65 = q63
                  | q65 : int(1..numberLocations)])
              | q63 : int(1..numberLocations)])
     /\
     and([q67 <=
          incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux38]
          ->
          or([q69 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux39] /\
              q69 = q67
                  | q69 : int(1..numberLocations)])
              | q67 : int(1..numberLocations)]))
    /\
    plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setAddSingle_conjure_aux40] =
    plan_setAddSingle_size,
    plan_setAddSingle_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker + 1,
    plan_setAddSingle_activation ->
    plan_setAddSingle_conjure_aux39 = plan_setAddSingle_conjure_aux38 \/
    plan_setAddSingle_conjure_aux40 = plan_setAddSingle_conjure_aux38,
    plan_setAddSingle_activation -> true,
    !plan_setAddSingle_activation ->
    and([plan_setAddSingle_size = 1, plan_setAddSingle_conjure_aux38 = 1, plan_setAddSingle_conjure_aux39 = 1,
         plan_setAddSingle_conjure_aux40 = 1;
             int(1..4)]),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    allDiff([plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41,
             plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
    plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    allDiff([plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43,
             plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43 <= plan_ExplicitVarSizeWithMarkerR14_Marker /\
    plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    and([q70 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q70 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41 \/
           q70 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42)
         ->
         and([q84 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q70] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q70, q84] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q70, q84]
              /\ q84 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q70]
                  | q84 : int(1..numberLocations)])
         /\
         and([q85 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q70] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q70, q85] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q70, q85]
              /\ q85 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q70]
                  | q85 : int(1..numberLocations)])
         /\
         (and([q87 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q70] ->
               or([q89 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q70] /\ q89 = q87
                       | q89 : int(1..numberLocations)])
                   | q87 : int(1..numberLocations)])
          /\
          and([q91 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q70] ->
               or([q93 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q70] /\ q93 = q91
                       | q93 : int(1..numberLocations)])
                   | q91 : int(1..numberLocations)]))
             | q70 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    plan_setLiftMultiple_sequenceCrossOverAny_size =
    sum([toInt(q19 <=
               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41]
               /\
               q19 <=
               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42])
         *
         catchUndef(toInt(and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43, q19]
                               =
                               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42, q19],
                               q19 <=
                               plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43],
                               q19 <=
                               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42];
                                   int(1..3)])
                          /\
                          and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44, q19]
                               =
                               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41, q19],
                               q19 <=
                               plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44],
                               q19 <=
                               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41];
                                   int(1..3)])
                          /\
                          and([incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41, q19]
                               !=
                               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42, q19],
                               q19 <=
                               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41],
                               q19 <=
                               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                                   [plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42];
                                   int(1..3)])),
                    0)
             | q19 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    (plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41
     \/
     plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41)
    /\
    (plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42
     \/
     plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42),
    plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    (plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43
     \/
     plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43)
    /\
    (plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44
     \/
     plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42 = plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44),
    plan_setLiftMultiple_sequenceCrossOverAny_activation -> true,
    !plan_setLiftMultiple_sequenceCrossOverAny_activation ->
    and([plan_setLiftMultiple_sequenceCrossOverAny_size = 1,
         plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux41 = 1,
         plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux42 = 1,
         plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux43 = 1,
         plan_setLiftMultiple_sequenceCrossOverAny_conjure_aux44 = 1;
             int(1..5)]),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    allDiff([plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45,
             plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
    plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    allDiff([plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47,
             plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47 <= plan_ExplicitVarSizeWithMarkerR14_Marker /\
    plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    and([q94 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q94 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45 \/
           q94 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46)
         ->
         and([q108 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q94] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q94, q108] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q94, q108]
              /\ q108 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q94]
                  | q108 : int(1..numberLocations)])
         /\
         and([q109 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q94] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q94, q109] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q94, q109]
              /\ q109 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q94]
                  | q109 : int(1..numberLocations)])
         /\
         (and([q111 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q94] ->
               or([q113 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q94] /\ q113 = q111
                       | q113 : int(1..numberLocations)])
                   | q111 : int(1..numberLocations)])
          /\
          and([q115 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q94] ->
               or([q117 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q94] /\ q117 = q115
                       | q117 : int(1..numberLocations)])
                   | q115 : int(1..numberLocations)]))
             | q94 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    and([plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9 - plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8
         = plan_setLiftMultiple_sequenceCrossOverSub_size,
         and([and([q18 < plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8,
                   q18 > plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9,
                   q18 <
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45],
                   q18 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46];
                       int(1..4)])
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47, q18]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45, q18],
                   q18 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47],
                   q18 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45];
                       int(1..3)])
              /\
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48, q18]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46, q18],
                   q18 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48],
                   q18 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46];
                       int(1..3)])
                  | q18 : int(1..numberLocations)]),
         and([q18 >= plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8 /\
              q18 <= plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47, q18]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46, q18],
                   q18 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47],
                   q18 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46];
                       int(1..3)])
              /\
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48, q18]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45, q18],
                   q18 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48],
                   q18 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45];
                       int(1..3)])
                  | q18 : int(1..numberLocations)]);
             int(1..3)]),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    (plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45
     \/
     plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45)
    /\
    (plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46
     \/
     plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46),
    plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    (plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47
     \/
     plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47)
    /\
    (plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48
     \/
     plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46 = plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48),
    plan_setLiftMultiple_sequenceCrossOverSub_activation -> true,
    !plan_setLiftMultiple_sequenceCrossOverSub_activation ->
    and([plan_setLiftMultiple_sequenceCrossOverSub_size = 1, plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux8 = 1,
         plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux9 = 1,
         plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux45 = 1,
         plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux46 = 1,
         plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux47 = 1,
         plan_setLiftMultiple_sequenceCrossOverSub_conjure_aux48 = 1;
             int(1..7)]),
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49,
             plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51; int(1)]),
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    and([q118 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q118 = plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49 \/
           q118 = plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50)
         ->
         and([q124 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q118] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q118, q124] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q118, q124]
              /\ q124 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q118]
                  | q124 : int(1..numberLocations)])
         /\
         and([q125 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q118] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q118, q125] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q118, q125]
              /\ q125 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q118]
                  | q125 : int(1..numberLocations)])
         /\
         (and([q127 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q118] ->
               or([q129 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q118] /\
                   q129 = q127
                       | q129 : int(1..numberLocations)])
                   | q127 : int(1..numberLocations)])
          /\
          and([q131 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q118] ->
               or([q133 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q118] /\ q133 = q131
                       | q133 : int(1..numberLocations)])
                   | q131 : int(1..numberLocations)]))
             | q118 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49]
         +
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50],
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49]
         = plan_setLiftMultiple_sequenceMergeLeftOrRight_size,
         and([q16 <= plan_setLiftMultiple_sequenceMergeLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51, q16]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49, q16],
                   q16 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51],
                   q16 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49];
                       int(1..3)])
                  | q16 : int(1..numberLocations)])
         /\
         and([q16 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51,
                        q16 + plan_setLiftMultiple_sequenceMergeLeftOrRight_size]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50, q16],
                   q16 + plan_setLiftMultiple_sequenceMergeLeftOrRight_size <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51],
                   q16 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50];
                       int(1..3)])
                  | q16 : int(1..numberLocations)])
         \/
         and([q16 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51, q16]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50, q16],
                   q16 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51],
                   q16 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50];
                       int(1..3)])
                  | q16 : int(1..numberLocations)])
         /\
         and([q16 <= plan_setLiftMultiple_sequenceMergeLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51,
                        q16 +
                        incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                            [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50]]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49, q16],
                   q16 +
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50]
                   <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51],
                   q16 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49];
                       int(1..3)])
                  | q16 : int(1..numberLocations)]);
             int(1..3)]),
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker + -1,
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49 =
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51
    \/
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50 =
    plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51,
    plan_setLiftMultiple_sequenceMergeLeftOrRight_activation -> true,
    !plan_setLiftMultiple_sequenceMergeLeftOrRight_activation ->
    and([plan_setLiftMultiple_sequenceMergeLeftOrRight_size = 1,
         plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux49 = 1,
         plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux50 = 1,
         plan_setLiftMultiple_sequenceMergeLeftOrRight_conjure_aux51 = 1;
             int(1..4)]),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52,
             plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52 <=
    incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker
    /\
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53 <=
    incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54,
             plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54 <= plan_ExplicitVarSizeWithMarkerR14_Marker /\
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    and([q134 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q134 = plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52 \/
           q134 = plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53)
         ->
         and([q148 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q134] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q134, q148] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q134, q148]
              /\ q148 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q134]
                  | q148 : int(1..numberLocations)])
         /\
         and([q149 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q134] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q134, q149] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q134, q149]
              /\ q149 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q134]
                  | q149 : int(1..numberLocations)])
         /\
         (and([q151 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q134] ->
               or([q153 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q134] /\
                   q153 = q151
                       | q153 : int(1..numberLocations)])
                   | q151 : int(1..numberLocations)])
          /\
          and([q155 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q134] ->
               or([q157 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q134] /\ q157 = q155
                       | q157 : int(1..numberLocations)])
                   | q155 : int(1..numberLocations)]))
             | q134 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52]
         - plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size,
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53]
         + plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size,
         and([q14 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54, q14]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52,
                        q14 + plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size],
                   q14 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54],
                   q14 + plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52];
                       int(1..3)])
                  | q14 : int(1..numberLocations)]),
         and([q14 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55, q14]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53, q14],
                   q14 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55],
                   q14 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53];
                       int(1..3)])
                  | q14 : int(1..numberLocations)])
         /\
         and([q14 <= plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55,
                        incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                            [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53]
                        + q14]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52, q14],
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53]
                   + q14
                   <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55],
                   q14 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52];
                       int(1..3)])
                  | q14 : int(1..numberLocations)])
         \/
         and([q14 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55,
                        q14 + plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53, q14],
                   q14 + plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55],
                   q14 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53];
                       int(1..3)])
                  | q14 : int(1..numberLocations)])
         /\
         and([q14 <= plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55, q14]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52, q14],
                   q14 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55],
                   q14 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52];
                       int(1..3)])
                  | q14 : int(1..numberLocations)]);
             int(1..4)]),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    (plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52
     \/
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52)
    /\
    (plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53
     \/
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    (plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54
     \/
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54)
    /\
    (plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55
     \/
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53 =
     plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55),
    plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation -> true,
    !plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_activation ->
    and([plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_size = 1,
         plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux52 = 1,
         plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux53 = 1,
         plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux54 = 1,
         plan_setLiftMultiple_sequenceRemoveLeftAddLeftOrRight_conjure_aux55 = 1;
             int(1..5)]),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56,
             plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56 <=
    incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker
    /\
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57 <=
    incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58,
             plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58 <= plan_ExplicitVarSizeWithMarkerR14_Marker /\
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    and([q158 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q158 = plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56 \/
           q158 = plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57)
         ->
         and([q172 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q158] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q158, q172] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q158, q172]
              /\ q172 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q158]
                  | q172 : int(1..numberLocations)])
         /\
         and([q173 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q158] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q158, q173] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q158, q173]
              /\ q173 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q158]
                  | q173 : int(1..numberLocations)])
         /\
         (and([q175 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q158] ->
               or([q177 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q158] /\
                   q177 = q175
                       | q177 : int(1..numberLocations)])
                   | q175 : int(1..numberLocations)])
          /\
          and([q179 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q158] ->
               or([q181 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q158] /\ q181 = q179
                       | q181 : int(1..numberLocations)])
                   | q179 : int(1..numberLocations)]))
             | q158 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56]
         - plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size,
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57]
         + plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size,
         and([q15 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58, q15]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56, q15],
                   q15 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58],
                   q15 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56];
                       int(1..3)])
                  | q15 : int(1..numberLocations)]),
         and([q15 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59, q15]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57, q15],
                   q15 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59],
                   q15 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57];
                       int(1..3)])
                  | q15 : int(1..numberLocations)])
         /\
         and([q15 >
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58]
              /\
              q15 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59, q15]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56, q15],
                   q15 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59],
                   q15 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56];
                       int(1..3)])
                  | q15 : int(1..numberLocations)])
         \/
         and([q15 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59,
                        q15 + plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57, q15],
                   q15 + plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59],
                   q15 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57];
                       int(1..3)])
                  | q15 : int(1..numberLocations)])
         /\
         and([q15 <= plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59, q15]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56,
                        plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                            [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58]
                        + q15],
                   q15 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59],
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58]
                   + q15
                   <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56];
                       int(1..3)])
                  | q15 : int(1..numberLocations)]);
             int(1..4)]),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    (plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56
     \/
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56)
    /\
    (plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57
     \/
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    (plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58
     \/
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58)
    /\
    (plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59
     \/
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57 =
     plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59),
    plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation -> true,
    !plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_activation ->
    and([plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_size = 1,
         plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux56 = 1,
         plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux57 = 1,
         plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux58 = 1,
         plan_setLiftMultiple_sequenceRemoveRightAddLeftOrRight_conjure_aux59 = 1;
             int(1..5)]),
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60; int(1)]),
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    allDiff([plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61,
             plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62;
                 int(1..2)]),
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61 <= plan_ExplicitVarSizeWithMarkerR14_Marker /\
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    and([q182 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q182 = plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60)
         ->
         and([q188 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q182] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q182, q188] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q182, q188]
              /\ q188 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q182]
                  | q188 : int(1..numberLocations)])
         /\
         and([q189 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q182] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q182, q189] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q182, q189]
              /\ q189 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q182]
                  | q189 : int(1..numberLocations)])
         /\
         (and([q191 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q182] ->
               or([q193 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q182] /\
                   q193 = q191
                       | q193 : int(1..numberLocations)])
                   | q191 : int(1..numberLocations)])
          /\
          and([q195 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q182] ->
               or([q197 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q182] /\ q197 = q195
                       | q197 : int(1..numberLocations)])
                   | q195 : int(1..numberLocations)]))
             | q182 : int(1..numberLocations)]),
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61]
         =
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60]
         - plan_setLiftMultiple_sequenceSplitLeftOrRight_size,
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62]
         = plan_setLiftMultiple_sequenceSplitLeftOrRight_size,
         and([q17 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61, q17]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60,
                        q17 + plan_setLiftMultiple_sequenceSplitLeftOrRight_size],
                   q17 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61],
                   q17 + plan_setLiftMultiple_sequenceSplitLeftOrRight_size <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60];
                       int(1..3)])
                  | q17 : int(1..numberLocations)])
         /\
         and([q17 <= plan_setLiftMultiple_sequenceSplitLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62, q17]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60, q17],
                   q17 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62],
                   q17 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60];
                       int(1..3)])
                  | q17 : int(1..numberLocations)])
         \/
         and([q17 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61, q17]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60, q17],
                   q17 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61],
                   q17 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60];
                       int(1..3)])
                  | q17 : int(1..numberLocations)])
         /\
         and([q17 <= plan_setLiftMultiple_sequenceSplitLeftOrRight_size ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62, q17]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60,
                        q17 +
                        plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                            [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61]],
                   q17 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62],
                   q17 +
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61]
                   <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60];
                       int(1..3)])
                  | q17 : int(1..numberLocations)]);
             int(1..3)]),
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker + 1,
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61 =
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60
    \/
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62 =
    plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60,
    plan_setLiftMultiple_sequenceSplitLeftOrRight_activation -> true,
    !plan_setLiftMultiple_sequenceSplitLeftOrRight_activation ->
    and([plan_setLiftMultiple_sequenceSplitLeftOrRight_size = 1,
         plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux60 = 1,
         plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux61 = 1,
         plan_setLiftMultiple_sequenceSplitLeftOrRight_conjure_aux62 = 1;
             int(1..4)]),
    plan_setLiftSingle_sequenceAddLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceAddLeft_conjure_aux63; int(1)]),
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_setLiftSingle_sequenceAddLeft_conjure_aux63 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceAddLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceAddLeft_conjure_aux64; int(1)]),
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_setLiftSingle_sequenceAddLeft_conjure_aux64 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceAddLeft_activation ->
    and([q198 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q198 = plan_setLiftSingle_sequenceAddLeft_conjure_aux63)
         ->
         and([q208 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q198] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q198, q208] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q198, q208]
              /\ q208 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q198]
                  | q208 : int(1..numberLocations)])
         /\
         and([q209 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q198] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q198, q209] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q198, q209]
              /\ q209 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q198]
                  | q209 : int(1..numberLocations)])
         /\
         (and([q211 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q198] ->
               or([q213 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q198] /\
                   q213 = q211
                       | q213 : int(1..numberLocations)])
                   | q211 : int(1..numberLocations)])
          /\
          and([q215 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q198] ->
               or([q217 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q198] /\ q217 = q215
                       | q217 : int(1..numberLocations)])
                   | q215 : int(1..numberLocations)]))
             | q198 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setLiftSingle_sequenceAddLeft_conjure_aux64] =
    incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
        [plan_setLiftSingle_sequenceAddLeft_conjure_aux63]
    + plan_setLiftSingle_sequenceAddLeft_size
    /\
    and([q11 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceAddLeft_conjure_aux63]
         ->
         and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceAddLeft_conjure_aux64, q11 + plan_setLiftSingle_sequenceAddLeft_size]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceAddLeft_conjure_aux63, q11],
              q11 + plan_setLiftSingle_sequenceAddLeft_size <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceAddLeft_conjure_aux64],
              q11 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceAddLeft_conjure_aux63];
                  int(1..3)])
             | q11 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_setLiftSingle_sequenceAddLeft_conjure_aux64 = plan_setLiftSingle_sequenceAddLeft_conjure_aux63,
    plan_setLiftSingle_sequenceAddLeft_activation ->
    plan_setLiftSingle_sequenceAddLeft_conjure_aux63 = plan_setLiftSingle_sequenceAddLeft_conjure_aux64,
    plan_setLiftSingle_sequenceAddLeft_activation -> true,
    !plan_setLiftSingle_sequenceAddLeft_activation ->
    and([plan_setLiftSingle_sequenceAddLeft_size = 1, plan_setLiftSingle_sequenceAddLeft_conjure_aux63 = 1,
         plan_setLiftSingle_sequenceAddLeft_conjure_aux64 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceAddRight_activation ->
    allDiff([plan_setLiftSingle_sequenceAddRight_conjure_aux65; int(1)]),
    plan_setLiftSingle_sequenceAddRight_activation ->
    plan_setLiftSingle_sequenceAddRight_conjure_aux65 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceAddRight_activation ->
    allDiff([plan_setLiftSingle_sequenceAddRight_conjure_aux66; int(1)]),
    plan_setLiftSingle_sequenceAddRight_activation ->
    plan_setLiftSingle_sequenceAddRight_conjure_aux66 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceAddRight_activation ->
    and([q218 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q218 = plan_setLiftSingle_sequenceAddRight_conjure_aux65)
         ->
         and([q228 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q218] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q218, q228] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q218, q228]
              /\ q228 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q218]
                  | q228 : int(1..numberLocations)])
         /\
         and([q229 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q218] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q218, q229] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q218, q229]
              /\ q229 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q218]
                  | q229 : int(1..numberLocations)])
         /\
         (and([q231 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q218] ->
               or([q233 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q218] /\
                   q233 = q231
                       | q233 : int(1..numberLocations)])
                   | q231 : int(1..numberLocations)])
          /\
          and([q235 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q218] ->
               or([q237 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q218] /\ q237 = q235
                       | q237 : int(1..numberLocations)])
                   | q235 : int(1..numberLocations)]))
             | q218 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceAddRight_activation ->
    and([q10 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceAddRight_conjure_aux65]
         ->
         and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceAddRight_conjure_aux66, q10]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceAddRight_conjure_aux65, q10],
              q10 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceAddRight_conjure_aux66],
              q10 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceAddRight_conjure_aux65];
                  int(1..3)])
             | q10 : int(1..numberLocations)])
    /\
    plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setLiftSingle_sequenceAddRight_conjure_aux66] =
    incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
        [plan_setLiftSingle_sequenceAddRight_conjure_aux65]
    + plan_setLiftSingle_sequenceAddRight_size,
    plan_setLiftSingle_sequenceAddRight_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceAddRight_activation ->
    plan_setLiftSingle_sequenceAddRight_conjure_aux66 = plan_setLiftSingle_sequenceAddRight_conjure_aux65,
    plan_setLiftSingle_sequenceAddRight_activation ->
    plan_setLiftSingle_sequenceAddRight_conjure_aux65 = plan_setLiftSingle_sequenceAddRight_conjure_aux66,
    plan_setLiftSingle_sequenceAddRight_activation -> true,
    !plan_setLiftSingle_sequenceAddRight_activation ->
    and([plan_setLiftSingle_sequenceAddRight_size = 1, plan_setLiftSingle_sequenceAddRight_conjure_aux65 = 1,
         plan_setLiftSingle_sequenceAddRight_conjure_aux66 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceAnySwap_activation ->
    allDiff([plan_setLiftSingle_sequenceAnySwap_conjure_aux67; int(1)]),
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_setLiftSingle_sequenceAnySwap_conjure_aux67 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceAnySwap_activation ->
    allDiff([plan_setLiftSingle_sequenceAnySwap_conjure_aux68; int(1)]),
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_setLiftSingle_sequenceAnySwap_conjure_aux68 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceAnySwap_activation ->
    and([q238 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q238 = plan_setLiftSingle_sequenceAnySwap_conjure_aux67)
         ->
         and([q248 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q238] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q238, q248] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q238, q248]
              /\ q248 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q238]
                  | q248 : int(1..numberLocations)])
         /\
         and([q249 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q238] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q238, q249] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q238, q249]
              /\ q249 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q238]
                  | q249 : int(1..numberLocations)])
         /\
         (and([q251 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q238] ->
               or([q253 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q238] /\
                   q253 = q251
                       | q253 : int(1..numberLocations)])
                   | q251 : int(1..numberLocations)])
          /\
          and([q255 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q238] ->
               or([q257 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q238] /\ q257 = q255
                       | q257 : int(1..numberLocations)])
                   | q255 : int(1..numberLocations)]))
             | q238 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_setLiftSingle_sequenceAnySwap_size * 2 =
    sum([toInt(q6 <=
               plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                   [plan_setLiftSingle_sequenceAnySwap_conjure_aux68])
         *
         catchUndef(toInt(and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                                   [plan_setLiftSingle_sequenceAnySwap_conjure_aux68, q6]
                               !=
                               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                                   [plan_setLiftSingle_sequenceAnySwap_conjure_aux67, q6],
                               q6 <=
                               plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                                   [plan_setLiftSingle_sequenceAnySwap_conjure_aux68],
                               q6 <=
                               incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                                   [plan_setLiftSingle_sequenceAnySwap_conjure_aux67];
                                   int(1..3)])),
                    0)
             | q6 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_setLiftSingle_sequenceAnySwap_conjure_aux68 = plan_setLiftSingle_sequenceAnySwap_conjure_aux67,
    plan_setLiftSingle_sequenceAnySwap_activation ->
    plan_setLiftSingle_sequenceAnySwap_conjure_aux67 = plan_setLiftSingle_sequenceAnySwap_conjure_aux68,
    plan_setLiftSingle_sequenceAnySwap_activation -> true,
    !plan_setLiftSingle_sequenceAnySwap_activation ->
    and([plan_setLiftSingle_sequenceAnySwap_size = 1, plan_setLiftSingle_sequenceAnySwap_conjure_aux67 = 1,
         plan_setLiftSingle_sequenceAnySwap_conjure_aux68 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    allDiff([plan_setLiftSingle_sequenceRelaxSub_conjure_aux69; int(1)]),
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    plan_setLiftSingle_sequenceRelaxSub_conjure_aux69 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    allDiff([plan_setLiftSingle_sequenceRelaxSub_conjure_aux70; int(1)]),
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    plan_setLiftSingle_sequenceRelaxSub_conjure_aux70 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    and([q258 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q258 = plan_setLiftSingle_sequenceRelaxSub_conjure_aux69)
         ->
         and([q268 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q258] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q258, q268] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q258, q268]
              /\ q268 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q258]
                  | q268 : int(1..numberLocations)])
         /\
         and([q269 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q258] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q258, q269] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q258, q269]
              /\ q269 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q258]
                  | q269 : int(1..numberLocations)])
         /\
         (and([q271 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q258] ->
               or([q273 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q258] /\
                   q273 = q271
                       | q273 : int(1..numberLocations)])
                   | q271 : int(1..numberLocations)])
          /\
          and([q275 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q258] ->
               or([q277 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q258] /\ q277 = q275
                       | q277 : int(1..numberLocations)])
                   | q275 : int(1..numberLocations)]))
             | q258 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    and([plan_setLiftSingle_sequenceRelaxSub_conjure_aux6 - plan_setLiftSingle_sequenceRelaxSub_conjure_aux5 =
         plan_setLiftSingle_sequenceRelaxSub_size,
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux5 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69],
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux6 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69],
         and([q7 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRelaxSub_conjure_aux70]
              /\
              (q7 < plan_setLiftSingle_sequenceRelaxSub_conjure_aux5 \/
               q7 > plan_setLiftSingle_sequenceRelaxSub_conjure_aux6)
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceRelaxSub_conjure_aux70, q7]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69, q7],
                   q7 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceRelaxSub_conjure_aux70],
                   q7 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69];
                       int(1..3)])
                  | q7 : int(1..numberLocations)]),
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux7 >= plan_setLiftSingle_sequenceRelaxSub_conjure_aux5,
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux7 <= plan_setLiftSingle_sequenceRelaxSub_conjure_aux6,
         and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRelaxSub_conjure_aux70, plan_setLiftSingle_sequenceRelaxSub_conjure_aux7]
              !=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69, plan_setLiftSingle_sequenceRelaxSub_conjure_aux7],
              plan_setLiftSingle_sequenceRelaxSub_conjure_aux7 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRelaxSub_conjure_aux70],
              plan_setLiftSingle_sequenceRelaxSub_conjure_aux7 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRelaxSub_conjure_aux69];
                  int(1..3)]);
             int(1..7)]),
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    plan_setLiftSingle_sequenceRelaxSub_conjure_aux70 = plan_setLiftSingle_sequenceRelaxSub_conjure_aux69,
    plan_setLiftSingle_sequenceRelaxSub_activation ->
    plan_setLiftSingle_sequenceRelaxSub_conjure_aux69 = plan_setLiftSingle_sequenceRelaxSub_conjure_aux70,
    plan_setLiftSingle_sequenceRelaxSub_activation -> true,
    !plan_setLiftSingle_sequenceRelaxSub_activation ->
    and([plan_setLiftSingle_sequenceRelaxSub_size = 1, plan_setLiftSingle_sequenceRelaxSub_conjure_aux5 = 1,
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux6 = 1, plan_setLiftSingle_sequenceRelaxSub_conjure_aux7 = 1,
         plan_setLiftSingle_sequenceRelaxSub_conjure_aux69 = 1, plan_setLiftSingle_sequenceRelaxSub_conjure_aux70 = 1;
             int(1..6)]),
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71; int(1)]),
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72; int(1)]),
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    and([q278 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q278 = plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71)
         ->
         and([q288 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q278] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q278, q288] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q278, q288]
              /\ q288 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q278]
                  | q288 : int(1..numberLocations)])
         /\
         and([q289 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q278] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q278, q289] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q278, q289]
              /\ q289 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q278]
                  | q289 : int(1..numberLocations)])
         /\
         (and([q291 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q278] ->
               or([q293 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q278] /\
                   q293 = q291
                       | q293 : int(1..numberLocations)])
                   | q291 : int(1..numberLocations)])
          /\
          and([q295 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q278] ->
               or([q297 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q278] /\ q297 = q295
                       | q297 : int(1..numberLocations)])
                   | q295 : int(1..numberLocations)]))
             | q278 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    and([q13 <=
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72]
         ->
         and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72, q13]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71,
                   q13 + plan_setLiftSingle_sequenceRemoveLeft_size],
              q13 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72],
              q13 + plan_setLiftSingle_sequenceRemoveLeft_size <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71];
                  int(1..3)])
             | q13 : int(1..numberLocations)])
    /\
    plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72]
    =
    incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
        [plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71]
    - plan_setLiftSingle_sequenceRemoveLeft_size,
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72 = plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71,
    plan_setLiftSingle_sequenceRemoveLeft_activation ->
    plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71 = plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72,
    plan_setLiftSingle_sequenceRemoveLeft_activation -> true,
    !plan_setLiftSingle_sequenceRemoveLeft_activation ->
    and([plan_setLiftSingle_sequenceRemoveLeft_size = 1, plan_setLiftSingle_sequenceRemoveLeft_conjure_aux71 = 1,
         plan_setLiftSingle_sequenceRemoveLeft_conjure_aux72 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    allDiff([plan_setLiftSingle_sequenceRemoveRight_conjure_aux73; int(1)]),
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    plan_setLiftSingle_sequenceRemoveRight_conjure_aux73 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    allDiff([plan_setLiftSingle_sequenceRemoveRight_conjure_aux74; int(1)]),
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    plan_setLiftSingle_sequenceRemoveRight_conjure_aux74 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    and([q298 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q298 = plan_setLiftSingle_sequenceRemoveRight_conjure_aux73)
         ->
         and([q308 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q298] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q298, q308] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q298, q308]
              /\ q308 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q298]
                  | q308 : int(1..numberLocations)])
         /\
         and([q309 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q298] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q298, q309] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q298, q309]
              /\ q309 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q298]
                  | q309 : int(1..numberLocations)])
         /\
         (and([q311 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q298] ->
               or([q313 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q298] /\
                   q313 = q311
                       | q313 : int(1..numberLocations)])
                   | q311 : int(1..numberLocations)])
          /\
          and([q315 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q298] ->
               or([q317 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q298] /\ q317 = q315
                       | q317 : int(1..numberLocations)])
                   | q315 : int(1..numberLocations)]))
             | q298 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    and([q12 <=
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRemoveRight_conjure_aux74]
         ->
         and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRemoveRight_conjure_aux74, q12]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRemoveRight_conjure_aux73, q12],
              q12 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRemoveRight_conjure_aux74],
              q12 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRemoveRight_conjure_aux73];
                  int(1..3)])
             | q12 : int(1..numberLocations)])
    /\
    plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
        [plan_setLiftSingle_sequenceRemoveRight_conjure_aux74]
    =
    incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
        [plan_setLiftSingle_sequenceRemoveRight_conjure_aux73]
    - plan_setLiftSingle_sequenceRemoveRight_size,
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    plan_setLiftSingle_sequenceRemoveRight_conjure_aux74 = plan_setLiftSingle_sequenceRemoveRight_conjure_aux73,
    plan_setLiftSingle_sequenceRemoveRight_activation ->
    plan_setLiftSingle_sequenceRemoveRight_conjure_aux73 = plan_setLiftSingle_sequenceRemoveRight_conjure_aux74,
    plan_setLiftSingle_sequenceRemoveRight_activation -> true,
    !plan_setLiftSingle_sequenceRemoveRight_activation ->
    and([plan_setLiftSingle_sequenceRemoveRight_size = 1, plan_setLiftSingle_sequenceRemoveRight_conjure_aux73 = 1,
         plan_setLiftSingle_sequenceRemoveRight_conjure_aux74 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceReverseSub_activation ->
    allDiff([plan_setLiftSingle_sequenceReverseSub_conjure_aux75; int(1)]),
    plan_setLiftSingle_sequenceReverseSub_activation ->
    plan_setLiftSingle_sequenceReverseSub_conjure_aux75 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceReverseSub_activation ->
    allDiff([plan_setLiftSingle_sequenceReverseSub_conjure_aux76; int(1)]),
    plan_setLiftSingle_sequenceReverseSub_activation ->
    plan_setLiftSingle_sequenceReverseSub_conjure_aux76 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceReverseSub_activation ->
    and([q318 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q318 = plan_setLiftSingle_sequenceReverseSub_conjure_aux75)
         ->
         and([q328 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q318] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q318, q328] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q318, q328]
              /\ q328 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q318]
                  | q328 : int(1..numberLocations)])
         /\
         and([q329 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q318] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q318, q329] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q318, q329]
              /\ q329 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q318]
                  | q329 : int(1..numberLocations)])
         /\
         (and([q331 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q318] ->
               or([q333 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q318] /\
                   q333 = q331
                       | q333 : int(1..numberLocations)])
                   | q331 : int(1..numberLocations)])
          /\
          and([q335 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q318] ->
               or([q337 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q318] /\ q337 = q335
                       | q337 : int(1..numberLocations)])
                   | q335 : int(1..numberLocations)]))
             | q318 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceReverseSub_activation ->
    and([plan_setLiftSingle_sequenceReverseSub_conjure_aux4 - plan_setLiftSingle_sequenceReverseSub_conjure_aux3 =
         plan_setLiftSingle_sequenceReverseSub_size,
         plan_setLiftSingle_sequenceReverseSub_conjure_aux3 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceReverseSub_conjure_aux75],
         plan_setLiftSingle_sequenceReverseSub_conjure_aux4 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceReverseSub_conjure_aux75],
         and([(q5 < plan_setLiftSingle_sequenceReverseSub_conjure_aux3 \/
               q5 > plan_setLiftSingle_sequenceReverseSub_conjure_aux4)
              /\
              q5 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceReverseSub_conjure_aux76]
              ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux76, q5]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux75, q5],
                   q5 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux76],
                   q5 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux75];
                       int(1..3)])
                  | q5 : int(1..numberLocations)]),
         and([q5 <= plan_setLiftSingle_sequenceReverseSub_size ->
              and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux76,
                        plan_setLiftSingle_sequenceReverseSub_conjure_aux3 + q5]
                   =
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux75,
                        plan_setLiftSingle_sequenceReverseSub_conjure_aux4 - q5],
                   plan_setLiftSingle_sequenceReverseSub_conjure_aux3 + q5 <=
                   plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux76],
                   plan_setLiftSingle_sequenceReverseSub_conjure_aux4 - q5 <=
                   incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                       [plan_setLiftSingle_sequenceReverseSub_conjure_aux75];
                       int(1..3)])
                  | q5 : int(0..numberLocations)]);
             int(1..5)]),
    plan_setLiftSingle_sequenceReverseSub_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceReverseSub_activation ->
    plan_setLiftSingle_sequenceReverseSub_conjure_aux76 = plan_setLiftSingle_sequenceReverseSub_conjure_aux75,
    plan_setLiftSingle_sequenceReverseSub_activation ->
    plan_setLiftSingle_sequenceReverseSub_conjure_aux75 = plan_setLiftSingle_sequenceReverseSub_conjure_aux76,
    plan_setLiftSingle_sequenceReverseSub_activation -> true,
    !plan_setLiftSingle_sequenceReverseSub_activation ->
    and([plan_setLiftSingle_sequenceReverseSub_size = 1, plan_setLiftSingle_sequenceReverseSub_conjure_aux3 = 1,
         plan_setLiftSingle_sequenceReverseSub_conjure_aux4 = 1,
         plan_setLiftSingle_sequenceReverseSub_conjure_aux75 = 1,
         plan_setLiftSingle_sequenceReverseSub_conjure_aux76 = 1;
             int(1..5)]),
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceRotateLeft_conjure_aux77; int(1)]),
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    plan_setLiftSingle_sequenceRotateLeft_conjure_aux77 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    allDiff([plan_setLiftSingle_sequenceRotateLeft_conjure_aux78; int(1)]),
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    plan_setLiftSingle_sequenceRotateLeft_conjure_aux78 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    and([q338 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q338 = plan_setLiftSingle_sequenceRotateLeft_conjure_aux77)
         ->
         and([q348 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q338] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q338, q348] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q338, q348]
              /\ q348 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q338]
                  | q348 : int(1..numberLocations)])
         /\
         and([q349 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q338] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q338, q349] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q338, q349]
              /\ q349 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q338]
                  | q349 : int(1..numberLocations)])
         /\
         (and([q351 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q338] ->
               or([q353 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q338] /\
                   q353 = q351
                       | q353 : int(1..numberLocations)])
                   | q351 : int(1..numberLocations)])
          /\
          and([q355 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q338] ->
               or([q357 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q338] /\ q357 = q355
                       | q357 : int(1..numberLocations)])
                   | q355 : int(1..numberLocations)]))
             | q338 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    and([q9 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77]
         ->
         and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRotateLeft_conjure_aux78, q9]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77,
                   (q9 - 1 - plan_setLiftSingle_sequenceRotateLeft_size) %
                   (incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                        [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77]
                    - 1)
                   + 1],
              q9 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRotateLeft_conjure_aux78],
              (q9 - 1 - plan_setLiftSingle_sequenceRotateLeft_size) %
              (incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                   [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77]
               - 1)
              + 1
              <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRotateLeft_conjure_aux77];
                  int(1..3)])
             | q9 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    plan_setLiftSingle_sequenceRotateLeft_conjure_aux78 = plan_setLiftSingle_sequenceRotateLeft_conjure_aux77,
    plan_setLiftSingle_sequenceRotateLeft_activation ->
    plan_setLiftSingle_sequenceRotateLeft_conjure_aux77 = plan_setLiftSingle_sequenceRotateLeft_conjure_aux78,
    plan_setLiftSingle_sequenceRotateLeft_activation -> true,
    !plan_setLiftSingle_sequenceRotateLeft_activation ->
    and([plan_setLiftSingle_sequenceRotateLeft_size = 1, plan_setLiftSingle_sequenceRotateLeft_conjure_aux77 = 1,
         plan_setLiftSingle_sequenceRotateLeft_conjure_aux78 = 1;
             int(1..3)]),
    plan_setLiftSingle_sequenceRotateRight_activation ->
    allDiff([plan_setLiftSingle_sequenceRotateRight_conjure_aux79; int(1)]),
    plan_setLiftSingle_sequenceRotateRight_activation ->
    plan_setLiftSingle_sequenceRotateRight_conjure_aux79 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRotateRight_activation ->
    allDiff([plan_setLiftSingle_sequenceRotateRight_conjure_aux80; int(1)]),
    plan_setLiftSingle_sequenceRotateRight_activation ->
    plan_setLiftSingle_sequenceRotateRight_conjure_aux80 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRotateRight_activation ->
    and([q358 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q358 = plan_setLiftSingle_sequenceRotateRight_conjure_aux79)
         ->
         and([q368 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q358] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q358, q368] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q358, q368]
              /\ q368 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q358]
                  | q368 : int(1..numberLocations)])
         /\
         and([q369 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q358] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q358, q369] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q358, q369]
              /\ q369 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q358]
                  | q369 : int(1..numberLocations)])
         /\
         (and([q371 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q358] ->
               or([q373 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q358] /\
                   q373 = q371
                       | q373 : int(1..numberLocations)])
                   | q371 : int(1..numberLocations)])
          /\
          and([q375 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q358] ->
               or([q377 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q358] /\ q377 = q375
                       | q377 : int(1..numberLocations)])
                   | q375 : int(1..numberLocations)]))
             | q358 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRotateRight_activation ->
    and([q8 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
             [plan_setLiftSingle_sequenceRotateRight_conjure_aux79]
         ->
         and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRotateRight_conjure_aux80, q8]
              =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
                  [plan_setLiftSingle_sequenceRotateRight_conjure_aux79,
                   (q8 - 1 + plan_setLiftSingle_sequenceRotateRight_size) %
                   (incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                        [plan_setLiftSingle_sequenceRotateRight_conjure_aux79]
                    - 1)
                   + 1],
              q8 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRotateRight_conjure_aux80],
              (q8 - 1 + plan_setLiftSingle_sequenceRotateRight_size) %
              (incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                   [plan_setLiftSingle_sequenceRotateRight_conjure_aux79]
               - 1)
              + 1
              <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setLiftSingle_sequenceRotateRight_conjure_aux79];
                  int(1..3)])
             | q8 : int(1..numberLocations)]),
    plan_setLiftSingle_sequenceRotateRight_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setLiftSingle_sequenceRotateRight_activation ->
    plan_setLiftSingle_sequenceRotateRight_conjure_aux80 = plan_setLiftSingle_sequenceRotateRight_conjure_aux79,
    plan_setLiftSingle_sequenceRotateRight_activation ->
    plan_setLiftSingle_sequenceRotateRight_conjure_aux79 = plan_setLiftSingle_sequenceRotateRight_conjure_aux80,
    plan_setLiftSingle_sequenceRotateRight_activation -> true,
    !plan_setLiftSingle_sequenceRotateRight_activation ->
    and([plan_setLiftSingle_sequenceRotateRight_size = 1, plan_setLiftSingle_sequenceRotateRight_conjure_aux79 = 1,
         plan_setLiftSingle_sequenceRotateRight_conjure_aux80 = 1;
             int(1..3)]),
    plan_setRemoveSingle_activation ->
    allDiff([plan_setRemoveSingle_conjure_aux81, plan_setRemoveSingle_conjure_aux82; int(1..2)]),
    plan_setRemoveSingle_activation ->
    plan_setRemoveSingle_conjure_aux81 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
    plan_setRemoveSingle_conjure_aux82 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setRemoveSingle_activation -> allDiff([plan_setRemoveSingle_conjure_aux83; int(1)]),
    plan_setRemoveSingle_activation -> plan_setRemoveSingle_conjure_aux83 <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_setRemoveSingle_activation ->
    and([q378 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker /\
         !(q378 = plan_setRemoveSingle_conjure_aux81 \/ q378 = plan_setRemoveSingle_conjure_aux82)
         ->
         and([q384 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q378] ->
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q378, q384] =
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q378, q384]
              /\ q384 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q378]
                  | q384 : int(1..numberLocations)])
         /\
         and([q385 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q378] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q378, q385] =
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q378, q385]
              /\ q385 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q378]
                  | q385 : int(1..numberLocations)])
         /\
         (and([q387 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q378] ->
               or([q389 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q378] /\
                   q389 = q387
                       | q389 : int(1..numberLocations)])
                   | q387 : int(1..numberLocations)])
          /\
          and([q391 <= incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q378] ->
               or([q393 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q378] /\ q393 = q391
                       | q393 : int(1..numberLocations)])
                   | q391 : int(1..numberLocations)]))
             | q378 : int(1..numberLocations)]),
    plan_setRemoveSingle_activation ->
    and([q395 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux83] ->
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
             [plan_setRemoveSingle_conjure_aux81, q395]
         = plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[plan_setRemoveSingle_conjure_aux83, q395]
         /\
         q395 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux81]
             | q395 : int(1..numberLocations)])
    /\
    and([q396 <=
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux81]
         ->
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[plan_setRemoveSingle_conjure_aux83, q396] =
         incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values
             [plan_setRemoveSingle_conjure_aux81, q396]
         /\ q396 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux83]
             | q396 : int(1..numberLocations)])
    /\
    (and([q398 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux83] ->
          or([q400 <=
              incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length
                  [plan_setRemoveSingle_conjure_aux81]
              /\ q400 = q398
                  | q400 : int(1..numberLocations)])
              | q398 : int(1..numberLocations)])
     /\
     and([q402 <=
          incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux81]
          ->
          or([q404 <=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux83]
              /\ q404 = q402
                  | q404 : int(1..numberLocations)])
              | q402 : int(1..numberLocations)]))
    /\
    incumbent_plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[plan_setRemoveSingle_conjure_aux82] =
    plan_setRemoveSingle_size,
    plan_setRemoveSingle_activation ->
    plan_ExplicitVarSizeWithMarkerR14_Marker = incumbent_plan_ExplicitVarSizeWithMarkerR14_Marker + -1,
    plan_setRemoveSingle_activation ->
    plan_setRemoveSingle_conjure_aux81 = plan_setRemoveSingle_conjure_aux83 \/
    plan_setRemoveSingle_conjure_aux82 = plan_setRemoveSingle_conjure_aux83,
    plan_setRemoveSingle_activation -> true,
    !plan_setRemoveSingle_activation ->
    and([plan_setRemoveSingle_size = 1, plan_setRemoveSingle_conjure_aux81 = 1, plan_setRemoveSingle_conjure_aux82 = 1,
         plan_setRemoveSingle_conjure_aux83 = 1;
             int(1..4)]),
    and([and([q20 <= plan_ExplicitVarSizeWithMarkerR14_Marker /\ q21 <= plan_ExplicitVarSizeWithMarkerR14_Marker ->
              or([q29 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q20] /\
                  !(plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q21, q29] =
                    plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q20, q29]
                    /\ q29 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q21])
                      | q29 : int(1..numberLocations)])
              \/
              or([q30 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q21] /\
                  !(plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q20, q30] =
                    plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q21, q30]
                    /\ q30 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q20])
                      | q30 : int(1..numberLocations)])
                  | q21 : int(q20 + 1..numberLocations)])
             | q20 : int(1..numberLocations)]),
    and([q22 > plan_ExplicitVarSizeWithMarkerR14_Marker ->
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q22] = 0 /\
         and([plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q22, q31] = 1
                  | q31 : int(1..numberLocations)])
             | q22 : int(1..numberLocations)]),
    minVehicles <= plan_ExplicitVarSizeWithMarkerR14_Marker,
    plan_ExplicitVarSizeWithMarkerR14_Marker <= numberLocations,
    and([q23 <= plan_ExplicitVarSizeWithMarkerR14_Marker ->
         and([q24 > plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q23] ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q23, q24] = 1
                  | q24 : int(1..numberLocations)])
             | q23 : int(1..numberLocations)]),
    and([q23 <= plan_ExplicitVarSizeWithMarkerR14_Marker ->
         1 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q23]
             | q23 : int(1..numberLocations)]),
    and([q23 <= plan_ExplicitVarSizeWithMarkerR14_Marker ->
         plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q23] <= numberLocations
             | q23 : int(1..numberLocations)]),
    and([q23 <= plan_ExplicitVarSizeWithMarkerR14_Marker ->
         and([q25 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q23] /\
              q26 <= plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Length[q23]
              ->
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q23, q25] !=
              plan_ExplicitVarSizeWithMarkerR14_Values_ExplicitBounded_Values[q23, q26]
                  | q25 : int(1..numberLocations), q26 : int(1..numberLocations), q25 < q26])
             | q23 : int(1..numberLocations)])

$ Conjure's
$ {"finds": [{"Name": "plan"}, {"Name": "optVar"}],
$  "givens": [{"Name": "numberLocations"}, {"Name": "orderWeights"}, {"Name": "costs"}, {"Name": "vehicleCapacity"}],
$  "enumGivens": [],
$  "enumLettings": [],
$  "lettings": [[{"Name": "locDomain"},
$                {"Domain": {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                            {"Reference": [{"Name": "numberLocations"},
$                                                                           {"DeclNoRepr": ["Given",
$                                                                                           {"Name": "numberLocations"},
$                                                                                           {"DomainInt": []},
$                                                                                           {"NoRegion": []}]}]}]}]}}],
$               [{"Name": "plannedLocDomain"},
$                {"Domain": {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                            {"Reference": [{"Name": "numberLocations"},
$                                                                           {"DeclNoRepr": ["Given",
$                                                                                           {"Name": "numberLocations"},
$                                                                                           {"DomainInt": []},
$                                                                                           {"NoRegion": []}]}]}]}]}}],
$               [{"Name": "maxTotalCost"},
$                {"Op": {"MkOpProduct": {"AbstractLiteral": {"AbsLitMatrix": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                              {"Constant": {"ConstantInt": 2}}]}]},
$                                                                             [{"Op": {"MkOpSum": {"Comprehension": [{"Op": {"MkOpImage": [{"Reference": [{"Name": "costs"},
$                                                                                                                                                         {"DeclNoRepr": ["Given",
$                                                                                                                                                                         {"Name": "costs"},
$                                                                                                                                                                         {"DomainFunction": [[],
$                                                                                                                                                                                             [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                3,
$                                                                                                                                                                                                                                                []]},
$                                                                                                                                                                                                                               {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                               {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                3,
$                                                                                                                                                                                                                                                                []]},
$                                                                                                                                                                                                                                               {"DomainInt": []},
$                                                                                                                                                                                                                                               {"NoRegion": []}]}]}},
$                                                                                                                                                                                              "PartialityAttr_Total",
$                                                                                                                                                                                              "JectivityAttr_None"],
$                                                                                                                                                                                             {"DomainTuple": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                                                                                                                                                                                               {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                              {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                              {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                              {"DomainInt": []},
$                                                                                                                                                                                                                                                                              {"NoRegion": []}]}]}]}]},
$                                                                                                                                                                                                              {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                                                                                                                                                                                               {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                              {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                              {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                              {"DomainInt": []},
$                                                                                                                                                                                                                                                                              {"NoRegion": []}]}]}]}]}]},
$                                                                                                                                                                                             {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                                                                                                                                                                              {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                              4,
$                                                                                                                                                                                                                                                              []]},
$                                                                                                                                                                                                                                             {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                             {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                              4,
$                                                                                                                                                                                                                                                                              []]},
$                                                                                                                                                                                                                                                             {"DomainInt": []},
$                                                                                                                                                                                                                                                             {"NoRegion": []}]}]}]}]}]},
$                                                                                                                                                                         {"NoRegion": []}]}]},
$                                                                                                                                          {"AbstractLiteral": {"AbsLitTuple": [{"Constant": {"ConstantInt": 0}},
$                                                                                                                                                                               {"Reference": [{"Name": "i"},
$                                                                                                                                                                                              {"DeclNoRepr": ["Quantified",
$                                                                                                                                                                                                              {"Name": "i"},
$                                                                                                                                                                                                              {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                               {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                              {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                              {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                              {"DomainInt": []},
$                                                                                                                                                                                                                                                                              {"NoRegion": []}]}]}]}]},
$                                                                                                                                                                                                              {"NoRegion": []}]}]}]}}]}},
$                                                                                                                    [{"Generator": {"GenDomainNoRepr": [{"Single": {"Name": "i"}},
$                                                                                                                                                        {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                         {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                        {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                        {"Name": "numberLocations"},
$                                                                                                                                                                                                                        {"DomainInt": []},
$                                                                                                                                                                                                                        {"NoRegion": []}]}]}]}]}]}}]]}}},
$                                                                              {"Constant": {"ConstantInt": 2}}]]}}}}],
$               [{"Name": "totalOrderWeight"},
$                {"Op": {"MkOpSum": {"Comprehension": [{"Reference": [{"Name": "weight"},
$                                                                     {"InComprehension": {"GenInExpr": [{"AbsPatTuple": [{"Single": {"Name": "_"}},
$                                                                                                                         {"Single": {"Name": "weight"}}]},
$                                                                                                        {"Reference": [{"Name": "orderWeights"},
$                                                                                                                       {"DeclNoRepr": ["Given",
$                                                                                                                                       {"Name": "orderWeights"},
$                                                                                                                                       {"DomainFunction": [[],
$                                                                                                                                                           [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                              1,
$                                                                                                                                                                                                              []]},
$                                                                                                                                                                                             {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                             {"MachineName": ["fin",
$                                                                                                                                                                                                                              1,
$                                                                                                                                                                                                                              []]},
$                                                                                                                                                                                                             {"DomainInt": []},
$                                                                                                                                                                                                             {"NoRegion": []}]}]}},
$                                                                                                                                                            "PartialityAttr_Total",
$                                                                                                                                                            "JectivityAttr_None"],
$                                                                                                                                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                            {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                           {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                           {"Name": "numberLocations"},
$                                                                                                                                                                                                                           {"DomainInt": []},
$                                                                                                                                                                                                                           {"NoRegion": []}]}]}]}]},
$                                                                                                                                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                            {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                            2,
$                                                                                                                                                                                                                            []]},
$                                                                                                                                                                                                           {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                           {"MachineName": ["fin",
$                                                                                                                                                                                                                                            2,
$                                                                                                                                                                                                                                            []]},
$                                                                                                                                                                                                                           {"DomainInt": []},
$                                                                                                                                                                                                                           {"NoRegion": []}]}]}]}]}]},
$                                                                                                                                       {"NoRegion": []}]}]}]}}]},
$                                                      [{"Generator": {"GenInExpr": [{"AbsPatTuple": [{"Single": {"Name": "_"}},
$                                                                                                     {"Single": {"Name": "weight"}}]},
$                                                                                    {"Reference": [{"Name": "orderWeights"},
$                                                                                                   {"DeclNoRepr": ["Given",
$                                                                                                                   {"Name": "orderWeights"},
$                                                                                                                   {"DomainFunction": [[],
$                                                                                                                                       [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                          1,
$                                                                                                                                                                                          []]},
$                                                                                                                                                                         {"DeclNoRepr": ["Given",
$                                                                                                                                                                                         {"MachineName": ["fin",
$                                                                                                                                                                                                          1,
$                                                                                                                                                                                                          []]},
$                                                                                                                                                                                         {"DomainInt": []},
$                                                                                                                                                                                         {"NoRegion": []}]}]}},
$                                                                                                                                        "PartialityAttr_Total",
$                                                                                                                                        "JectivityAttr_None"],
$                                                                                                                                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                       {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                       {"Name": "numberLocations"},
$                                                                                                                                                                                                       {"DomainInt": []},
$                                                                                                                                                                                                       {"NoRegion": []}]}]}]}]},
$                                                                                                                                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                        {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                        2,
$                                                                                                                                                                                                        []]},
$                                                                                                                                                                                       {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                       {"MachineName": ["fin",
$                                                                                                                                                                                                                        2,
$                                                                                                                                                                                                                        []]},
$                                                                                                                                                                                                       {"DomainInt": []},
$                                                                                                                                                                                                       {"NoRegion": []}]}]}]}]}]},
$                                                                                                                   {"NoRegion": []}]}]}]}}]]}}}],
$               [{"Name": "minVehicles"},
$                {"Op": {"MkOpSum": {"AbstractLiteral": {"AbsLitMatrix": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                          {"Constant": {"ConstantInt": 2}}]}]},
$                                                                         [{"Op": {"MkOpDiv": [{"Reference": [{"Name": "totalOrderWeight"},
$                                                                                                             {"Alias": {"Op": {"MkOpSum": {"Comprehension": [{"Reference": [{"Name": "weight"},
$                                                                                                                                                                            {"InComprehension": {"GenInExpr": [{"AbsPatTuple": [{"Single": {"Name": "_"}},
$                                                                                                                                                                                                                                {"Single": {"Name": "weight"}}]},
$                                                                                                                                                                                                               {"Reference": [{"Name": "orderWeights"},
$                                                                                                                                                                                                                              {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                              {"Name": "orderWeights"},
$                                                                                                                                                                                                                                              {"DomainFunction": [[],
$                                                                                                                                                                                                                                                                  [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                     1,
$                                                                                                                                                                                                                                                                                                                     []]},
$                                                                                                                                                                                                                                                                                                    {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                    {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                     1,
$                                                                                                                                                                                                                                                                                                                                     []]},
$                                                                                                                                                                                                                                                                                                                    {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                                    {"NoRegion": []}]}]}},
$                                                                                                                                                                                                                                                                   "PartialityAttr_Total",
$                                                                                                                                                                                                                                                                   "JectivityAttr_None"],
$                                                                                                                                                                                                                                                                  {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                   {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                  {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                  {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                  {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                                                  {"NoRegion": []}]}]}]}]},
$                                                                                                                                                                                                                                                                  {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                   {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                   2,
$                                                                                                                                                                                                                                                                                                                                   []]},
$                                                                                                                                                                                                                                                                                                                  {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                  {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                   2,
$                                                                                                                                                                                                                                                                                                                                                   []]},
$                                                                                                                                                                                                                                                                                                                                  {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                                                  {"NoRegion": []}]}]}]}]}]},
$                                                                                                                                                                                                                                              {"NoRegion": []}]}]}]}}]},
$                                                                                                                                                             [{"Generator": {"GenInExpr": [{"AbsPatTuple": [{"Single": {"Name": "_"}},
$                                                                                                                                                                                                            {"Single": {"Name": "weight"}}]},
$                                                                                                                                                                                           {"Reference": [{"Name": "orderWeights"},
$                                                                                                                                                                                                          {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                          {"Name": "orderWeights"},
$                                                                                                                                                                                                                          {"DomainFunction": [[],
$                                                                                                                                                                                                                                              [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                 1,
$                                                                                                                                                                                                                                                                                                 []]},
$                                                                                                                                                                                                                                                                                {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                 1,
$                                                                                                                                                                                                                                                                                                                 []]},
$                                                                                                                                                                                                                                                                                                {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                {"NoRegion": []}]}]}},
$                                                                                                                                                                                                                                               "PartialityAttr_Total",
$                                                                                                                                                                                                                                               "JectivityAttr_None"],
$                                                                                                                                                                                                                                              {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                               {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                              {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                              {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                              {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                              {"NoRegion": []}]}]}]}]},
$                                                                                                                                                                                                                                              {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                               {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                               2,
$                                                                                                                                                                                                                                                                                                               []]},
$                                                                                                                                                                                                                                                                                              {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                              {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                               2,
$                                                                                                                                                                                                                                                                                                                               []]},
$                                                                                                                                                                                                                                                                                                              {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                              {"NoRegion": []}]}]}]}]}]},
$                                                                                                                                                                                                                          {"NoRegion": []}]}]}]}}]]}}}}]},
$                                                                                              {"Reference": [{"Name": "vehicleCapacity"},
$                                                                                                             {"DeclNoRepr": ["Given",
$                                                                                                                             {"Name": "vehicleCapacity"},
$                                                                                                                             {"DomainInt": []},
$                                                                                                                             {"NoRegion": []}]}]}]}},
$                                                                          {"Op": {"MkOpToInt": {"Op": {"MkOpNeq": [{"Op": {"MkOpMod": [{"Reference": [{"Name": "totalOrderWeight"},
$                                                                                                                                                      {"Alias": {"Op": {"MkOpSum": {"Comprehension": [{"Reference": [{"Name": "weight"},
$                                                                                                                                                                                                                     {"InComprehension": {"GenInExpr": [{"AbsPatTuple": [{"Single": {"Name": "_"}},
$                                                                                                                                                                                                                                                                         {"Single": {"Name": "weight"}}]},
$                                                                                                                                                                                                                                                        {"Reference": [{"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                       {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                       {"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                                       {"DomainFunction": [[],
$                                                                                                                                                                                                                                                                                                           [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                              1,
$                                                                                                                                                                                                                                                                                                                                                              []]},
$                                                                                                                                                                                                                                                                                                                                             {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                             {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                              1,
$                                                                                                                                                                                                                                                                                                                                                                              []]},
$                                                                                                                                                                                                                                                                                                                                                             {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                                                                             {"NoRegion": []}]}]}},
$                                                                                                                                                                                                                                                                                                            "PartialityAttr_Total",
$                                                                                                                                                                                                                                                                                                            "JectivityAttr_None"],
$                                                                                                                                                                                                                                                                                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                                            {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                           {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                           {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                                           {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                                                                                           {"NoRegion": []}]}]}]}]},
$                                                                                                                                                                                                                                                                                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                                            {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                            2,
$                                                                                                                                                                                                                                                                                                                                                                            []]},
$                                                                                                                                                                                                                                                                                                                                                           {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                           {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                            2,
$                                                                                                                                                                                                                                                                                                                                                                                            []]},
$                                                                                                                                                                                                                                                                                                                                                                           {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                                                                                           {"NoRegion": []}]}]}]}]}]},
$                                                                                                                                                                                                                                                                                       {"NoRegion": []}]}]}]}}]},
$                                                                                                                                                                                                      [{"Generator": {"GenInExpr": [{"AbsPatTuple": [{"Single": {"Name": "_"}},
$                                                                                                                                                                                                                                                     {"Single": {"Name": "weight"}}]},
$                                                                                                                                                                                                                                    {"Reference": [{"Name": "orderWeights"},
$                                                                                                                                                                                                                                                   {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                   {"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                   {"DomainFunction": [[],
$                                                                                                                                                                                                                                                                                       [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                          1,
$                                                                                                                                                                                                                                                                                                                                          []]},
$                                                                                                                                                                                                                                                                                                                         {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                         {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                          1,
$                                                                                                                                                                                                                                                                                                                                                          []]},
$                                                                                                                                                                                                                                                                                                                                         {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                                                         {"NoRegion": []}]}]}},
$                                                                                                                                                                                                                                                                                        "PartialityAttr_Total",
$                                                                                                                                                                                                                                                                                        "JectivityAttr_None"],
$                                                                                                                                                                                                                                                                                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                       {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                       {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                       {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                                                                       {"NoRegion": []}]}]}]}]},
$                                                                                                                                                                                                                                                                                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                        {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                        2,
$                                                                                                                                                                                                                                                                                                                                                        []]},
$                                                                                                                                                                                                                                                                                                                                       {"DeclNoRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                       {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                        2,
$                                                                                                                                                                                                                                                                                                                                                                        []]},
$                                                                                                                                                                                                                                                                                                                                                       {"DomainInt": []},
$                                                                                                                                                                                                                                                                                                                                                       {"NoRegion": []}]}]}]}]}]},
$                                                                                                                                                                                                                                                                   {"NoRegion": []}]}]}]}}]]}}}}]},
$                                                                                                                                       {"Reference": [{"Name": "vehicleCapacity"},
$                                                                                                                                                      {"DeclNoRepr": ["Given",
$                                                                                                                                                                      {"Name": "vehicleCapacity"},
$                                                                                                                                                                      {"DomainInt": []},
$                                                                                                                                                                      {"NoRegion": []}]}]}]}},
$                                                                                                                   {"Constant": {"ConstantInt": 0}}]}}}}]]}}}}]],
$  "unnameds": [],
$  "strategyQ": {"PickFirst": []},
$  "strategyA": {"Compact": []},
$  "trailCompact": [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2],
$                   [1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 2],
$                   [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2],
$                   [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2],
$                   [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2],
$                   [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 2], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 2],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [],
$  "trailRewrites": [],
$  "nameGenState": [["conjure_aux", 84], ["fin", 5], ["q", 407]],
$  "nbExtraGivens": 4,
$  "representations": [[{"MachineName": ["fin", 1, []]}, {"DomainInt": []}],
$                      [{"Name": "numberLocations"}, {"DomainInt": []}],
$                      [{"MachineName": ["fin", 2, []]}, {"DomainInt": []}],
$                      [{"MachineName": ["fin", 3, []]}, {"DomainInt": []}],
$                      [{"MachineName": ["fin", 4, []]}, {"DomainInt": []}],
$                      [{"Name": "costs"},
$                       {"DomainFunction": [{"Function_ND": []},
$                                           [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin", 3, []]},
$                                                                             {"DeclHasRepr": ["Given",
$                                                                                              {"MachineName": ["fin", 3,
$                                                                                                               []]},
$                                                                                              {"DomainInt": []}]}]}},
$                                            "PartialityAttr_Total", "JectivityAttr_None"],
$                                           {"DomainTuple": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                                             {"Reference": [{"Name": "numberLocations"},
$                                                                                                            {"DeclHasRepr": ["Given",
$                                                                                                                             {"Name": "numberLocations"},
$                                                                                                                             {"DomainInt": []}]}]}]}]},
$                                                            {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                                             {"Reference": [{"Name": "numberLocations"},
$                                                                                                            {"DeclHasRepr": ["Given",
$                                                                                                                             {"Name": "numberLocations"},
$                                                                                                                             {"DomainInt": []}]}]}]}]}]},
$                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                            {"Reference": [{"MachineName": ["fin", 4,
$                                                                                                            []]},
$                                                                                           {"DeclHasRepr": ["Given",
$                                                                                                            {"MachineName": ["fin",
$                                                                                                                             4,
$                                                                                                                             []]},
$                                                                                                            {"DomainInt": []}]}]}]}]}]}],
$                      [{"Name": "orderWeights"},
$                       {"DomainFunction": [{"Function_1D": []},
$                                           [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin", 1, []]},
$                                                                             {"DeclHasRepr": ["Given",
$                                                                                              {"MachineName": ["fin", 1,
$                                                                                                               []]},
$                                                                                              {"DomainInt": []}]}]}},
$                                            "PartialityAttr_Total", "JectivityAttr_None"],
$                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                            {"Reference": [{"Name": "numberLocations"},
$                                                                                           {"DeclHasRepr": ["Given",
$                                                                                                            {"Name": "numberLocations"},
$                                                                                                            {"DomainInt": []}]}]}]}]},
$                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                            {"Reference": [{"MachineName": ["fin", 2,
$                                                                                                            []]},
$                                                                                           {"DeclHasRepr": ["Given",
$                                                                                                            {"MachineName": ["fin",
$                                                                                                                             2,
$                                                                                                                             []]},
$                                                                                                            {"DomainInt": []}]}]}]}]}]}],
$                      [{"Name": "vehicleCapacity"}, {"DomainInt": []}],
$                      [{"Name": "optVar"},
$                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                        {"Reference": [{"Name": "maxTotalCost"},
$                                                                       {"Alias": {"Op": {"MkOpProduct": {"AbstractLiteral": {"AbsLitMatrix": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                               {"Constant": {"ConstantInt": 2}}]}]},
$                                                                                                                                              [{"Op": {"MkOpSum": {"Comprehension": [{"Op": {"MkOpImage": [{"Reference": [{"Name": "costs"},
$                                                                                                                                                                                                                          {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                           {"Name": "costs"},
$                                                                                                                                                                                                                                           {"DomainFunction": [{"Function_ND": []},
$                                                                                                                                                                                                                                                               [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                  3,
$                                                                                                                                                                                                                                                                                                                  []]},
$                                                                                                                                                                                                                                                                                                 {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                  {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                   3,
$                                                                                                                                                                                                                                                                                                                                   []]},
$                                                                                                                                                                                                                                                                                                                  {"DomainInt": []}]}]}},
$                                                                                                                                                                                                                                                                "PartialityAttr_Total",
$                                                                                                                                                                                                                                                                "JectivityAttr_None"],
$                                                                                                                                                                                                                                                               {"DomainTuple": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                                                                                                                                                                                                                                                                 {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                 {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                 {"DomainInt": []}]}]}]}]},
$                                                                                                                                                                                                                                                                                {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                                                                                                                                                                                                                                                                 {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                 {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                 {"DomainInt": []}]}]}]}]}]},
$                                                                                                                                                                                                                                                               {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                                                                                                                                                                                                                                                {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                4,
$                                                                                                                                                                                                                                                                                                                                []]},
$                                                                                                                                                                                                                                                                                                               {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                 4,
$                                                                                                                                                                                                                                                                                                                                                 []]},
$                                                                                                                                                                                                                                                                                                                                {"DomainInt": []}]}]}]}]}]}]}]},
$                                                                                                                                                                                                           {"AbstractLiteral": {"AbsLitTuple": [{"Constant": {"ConstantInt": 0}},
$                                                                                                                                                                                                                                                {"Reference": [{"Name": "i"},
$                                                                                                                                                                                                                                                               {"DeclHasRepr": ["Quantified",
$                                                                                                                                                                                                                                                                                {"Name": "i"},
$                                                                                                                                                                                                                                                                                {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                 {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                 {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                 {"DomainInt": []}]}]}]}]}]}]}]}}]}},
$                                                                                                                                                                                     [{"Generator": {"GenDomainHasRepr": [{"Name": "i"},
$                                                                                                                                                                                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                           {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                          {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                           {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                           {"DomainInt": []}]}]}]}]}]}}]]}}},
$                                                                                                                                               {"Constant": {"ConstantInt": 2}}]]}}}}}]}]}]}],
$                      [{"Name": "plan"},
$                       {"DomainSet": [{"Set_ExplicitVarSizeWithMarker": []},
$                                      {"SizeAttr_MinMaxSize": [{"Reference": [{"Name": "minVehicles"},
$                                                                              {"Alias": {"Op": {"MkOpSum": {"AbstractLiteral": {"AbsLitMatrix": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                  {"Constant": {"ConstantInt": 2}}]}]},
$                                                                                                                                                 [{"Op": {"MkOpDiv": [{"Reference": [{"Name": "totalOrderWeight"},
$                                                                                                                                                                                     {"Alias": {"Op": {"MkOpSum": {"Comprehension": [{"Reference": [{"Name": "weight"},
$                                                                                                                                                                                                                                                    {"InComprehension": {"GenInExpr": [{"AbsPatTuple": [{"Single": {"Name": "_"}},
$                                                                                                                                                                                                                                                                                                        {"Single": {"Name": "weight"}}]},
$                                                                                                                                                                                                                                                                                       {"Reference": [{"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                                                      {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                       {"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                                                                       {"DomainFunction": [{"Function_1D": []},
$                                                                                                                                                                                                                                                                                                                                           [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                              1,
$                                                                                                                                                                                                                                                                                                                                                                                              []]},
$                                                                                                                                                                                                                                                                                                                                                                             {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                              {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                               1,
$                                                                                                                                                                                                                                                                                                                                                                                                               []]},
$                                                                                                                                                                                                                                                                                                                                                                                              {"DomainInt": []}]}]}},
$                                                                                                                                                                                                                                                                                                                                            "PartialityAttr_Total",
$                                                                                                                                                                                                                                                                                                                                            "JectivityAttr_None"],
$                                                                                                                                                                                                                                                                                                                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                                                                            {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                                                           {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                                            {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                                                                            {"DomainInt": []}]}]}]}]},
$                                                                                                                                                                                                                                                                                                                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                                                                            {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                            2,
$                                                                                                                                                                                                                                                                                                                                                                                                            []]},
$                                                                                                                                                                                                                                                                                                                                                                                           {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                                            {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                                             2,
$                                                                                                                                                                                                                                                                                                                                                                                                                             []]},
$                                                                                                                                                                                                                                                                                                                                                                                                            {"DomainInt": []}]}]}]}]}]}]}]}]}}]},
$                                                                                                                                                                                                                                     [{"Generator": {"GenInExpr": [{"AbsPatTuple": [{"Single": {"Name": "_"}},
$                                                                                                                                                                                                                                                                                    {"Single": {"Name": "weight"}}]},
$                                                                                                                                                                                                                                                                   {"Reference": [{"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                                  {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                   {"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                                                   {"DomainFunction": [{"Function_1D": []},
$                                                                                                                                                                                                                                                                                                                       [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                          1,
$                                                                                                                                                                                                                                                                                                                                                                          []]},
$                                                                                                                                                                                                                                                                                                                                                         {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                          {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                           1,
$                                                                                                                                                                                                                                                                                                                                                                                           []]},
$                                                                                                                                                                                                                                                                                                                                                                          {"DomainInt": []}]}]}},
$                                                                                                                                                                                                                                                                                                                        "PartialityAttr_Total",
$                                                                                                                                                                                                                                                                                                                        "JectivityAttr_None"],
$                                                                                                                                                                                                                                                                                                                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                                       {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                        {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                                                        {"DomainInt": []}]}]}]}]},
$                                                                                                                                                                                                                                                                                                                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                                                        {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                        2,
$                                                                                                                                                                                                                                                                                                                                                                                        []]},
$                                                                                                                                                                                                                                                                                                                                                                       {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                        {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                         2,
$                                                                                                                                                                                                                                                                                                                                                                                                         []]},
$                                                                                                                                                                                                                                                                                                                                                                                        {"DomainInt": []}]}]}]}]}]}]}]}]}}]]}}}}]},
$                                                                                                                                                                      {"Reference": [{"Name": "vehicleCapacity"},
$                                                                                                                                                                                     {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                      {"Name": "vehicleCapacity"},
$                                                                                                                                                                                                      {"DomainInt": []}]}]}]}},
$                                                                                                                                                  {"Op": {"MkOpToInt": {"Op": {"MkOpNeq": [{"Op": {"MkOpMod": [{"Reference": [{"Name": "totalOrderWeight"},
$                                                                                                                                                                                                                              {"Alias": {"Op": {"MkOpSum": {"Comprehension": [{"Reference": [{"Name": "weight"},
$                                                                                                                                                                                                                                                                                             {"InComprehension": {"GenInExpr": [{"AbsPatTuple": [{"Single": {"Name": "_"}},
$                                                                                                                                                                                                                                                                                                                                                 {"Single": {"Name": "weight"}}]},
$                                                                                                                                                                                                                                                                                                                                {"Reference": [{"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                                                                                               {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                {"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                                                                                                                {"DomainFunction": [{"Function_1D": []},
$                                                                                                                                                                                                                                                                                                                                                                                    [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                                                       1,
$                                                                                                                                                                                                                                                                                                                                                                                                                                       []]},
$                                                                                                                                                                                                                                                                                                                                                                                                                      {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                                                                       {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                                                                        1,
$                                                                                                                                                                                                                                                                                                                                                                                                                                                        []]},
$                                                                                                                                                                                                                                                                                                                                                                                                                                       {"DomainInt": []}]}]}},
$                                                                                                                                                                                                                                                                                                                                                                                     "PartialityAttr_Total",
$                                                                                                                                                                                                                                                                                                                                                                                     "JectivityAttr_None"],
$                                                                                                                                                                                                                                                                                                                                                                                    {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                                                                                                                     {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                                                                                                    {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                                                                                     {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                                                                                                                     {"DomainInt": []}]}]}]}]},
$                                                                                                                                                                                                                                                                                                                                                                                    {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                                                                                                                     {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                                                                     2,
$                                                                                                                                                                                                                                                                                                                                                                                                                                                     []]},
$                                                                                                                                                                                                                                                                                                                                                                                                                                    {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                                                                                     {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2,
$                                                                                                                                                                                                                                                                                                                                                                                                                                                                      []]},
$                                                                                                                                                                                                                                                                                                                                                                                                                                                     {"DomainInt": []}]}]}]}]}]}]}]}]}}]},
$                                                                                                                                                                                                                                                                              [{"Generator": {"GenInExpr": [{"AbsPatTuple": [{"Single": {"Name": "_"}},
$                                                                                                                                                                                                                                                                                                                             {"Single": {"Name": "weight"}}]},
$                                                                                                                                                                                                                                                                                                            {"Reference": [{"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                                                                           {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                            {"Name": "orderWeights"},
$                                                                                                                                                                                                                                                                                                                                            {"DomainFunction": [{"Function_1D": []},
$                                                                                                                                                                                                                                                                                                                                                                [{"SizeAttr_Size": {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                                   1,
$                                                                                                                                                                                                                                                                                                                                                                                                                   []]},
$                                                                                                                                                                                                                                                                                                                                                                                                  {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                                                   {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                                                    1,
$                                                                                                                                                                                                                                                                                                                                                                                                                                    []]},
$                                                                                                                                                                                                                                                                                                                                                                                                                   {"DomainInt": []}]}]}},
$                                                                                                                                                                                                                                                                                                                                                                 "PartialityAttr_Total",
$                                                                                                                                                                                                                                                                                                                                                                 "JectivityAttr_None"],
$                                                                                                                                                                                                                                                                                                                                                                {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                                                                                                 {"Reference": [{"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                                                                                {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                                                                 {"Name": "numberLocations"},
$                                                                                                                                                                                                                                                                                                                                                                                                                                 {"DomainInt": []}]}]}]}]},
$                                                                                                                                                                                                                                                                                                                                                                {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                                                                                                                                                                                                                 {"Reference": [{"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                                                 2,
$                                                                                                                                                                                                                                                                                                                                                                                                                                 []]},
$                                                                                                                                                                                                                                                                                                                                                                                                                {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                                                                                                                                                                                                                 {"MachineName": ["fin",
$                                                                                                                                                                                                                                                                                                                                                                                                                                                  2,
$                                                                                                                                                                                                                                                                                                                                                                                                                                                  []]},
$                                                                                                                                                                                                                                                                                                                                                                                                                                 {"DomainInt": []}]}]}]}]}]}]}]}]}}]]}}}}]},
$                                                                                                                                                                                                               {"Reference": [{"Name": "vehicleCapacity"},
$                                                                                                                                                                                                                              {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                                                               {"Name": "vehicleCapacity"},
$                                                                                                                                                                                                                                               {"DomainInt": []}]}]}]}},
$                                                                                                                                                                                           {"Constant": {"ConstantInt": 0}}]}}}}]]}}}}}]},
$                                                               {"Reference": [{"Name": "numberLocations"},
$                                                                              {"DeclHasRepr": ["Given",
$                                                                                               {"Name": "numberLocations"},
$                                                                                               {"DomainInt": []}]}]}]},
$                                      {"DomainSequence": [{"Sequence_ExplicitBounded": []},
$                                                          [{"SizeAttr_MinMaxSize": [{"Constant": {"ConstantInt": 1}},
$                                                                                    {"Reference": [{"Name": "numberLocations"},
$                                                                                                   {"DeclHasRepr": ["Given",
$                                                                                                                    {"Name": "numberLocations"},
$                                                                                                                    {"DomainInt": []}]}]}]},
$                                                           "JectivityAttr_Injective"],
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Reference": [{"Name": "numberLocations"},
$                                                                                                          {"DeclHasRepr": ["Given",
$                                                                                                                           {"Name": "numberLocations"},
$                                                                                                                           {"DomainInt": []}]}]}]}]}]}]}],
$                      [{"Name": "size"},
$                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                       {"DeclHasRepr": ["Given",
$                                                                                        {"Name": "numberLocations"},
$                                                                                        {"DomainInt": []}]}]}]}]}],
$                      [{"MachineName": ["conjure_aux", 9, []]},
$                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                       {"DeclHasRepr": ["Given",
$                                                                                        {"Name": "numberLocations"},
$                                                                                        {"DomainInt": []}]}]}]}]}],
$                      [{"MachineName": ["conjure_aux", 8, []]},
$                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                       {"DeclHasRepr": ["Given",
$                                                                                        {"Name": "numberLocations"},
$                                                                                        {"DomainInt": []}]}]}]}]}],
$                      [{"MachineName": ["conjure_aux", 6, []]},
$                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                       {"DeclHasRepr": ["Given",
$                                                                                        {"Name": "numberLocations"},
$                                                                                        {"DomainInt": []}]}]}]}]}],
$                      [{"MachineName": ["conjure_aux", 5, []]},
$                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                       {"DeclHasRepr": ["Given",
$                                                                                        {"Name": "numberLocations"},
$                                                                                        {"DomainInt": []}]}]}]}]}],
$                      [{"MachineName": ["conjure_aux", 7, []]},
$                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                       {"DeclHasRepr": ["Given",
$                                                                                        {"Name": "numberLocations"},
$                                                                                        {"DomainInt": []}]}]}]}]}],
$                      [{"MachineName": ["conjure_aux", 4, []]},
$                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                       {"DeclHasRepr": ["Given",
$                                                                                        {"Name": "numberLocations"},
$                                                                                        {"DomainInt": []}]}]}]}]}],
$                      [{"MachineName": ["conjure_aux", 3, []]},
$                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                        {"Reference": [{"Name": "numberLocations"},
$                                                                       {"DeclHasRepr": ["Given",
$                                                                                        {"Name": "numberLocations"},
$                                                                                        {"DomainInt": []}]}]}]}]}]],
$  "representationsTree": [[{"MachineName": ["conjure_aux", 3, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"MachineName": ["conjure_aux", 4, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"MachineName": ["conjure_aux", 5, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"MachineName": ["conjure_aux", 6, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"MachineName": ["conjure_aux", 7, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"MachineName": ["conjure_aux", 8, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"MachineName": ["conjure_aux", 9, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"Name": "costs"},
$                           [{"rootLabel": {"Function_ND": []},
$                             "subForest": [{"rootLabel": null,
$                                            "subForest": [{"rootLabel": null,
$                                                           "subForest": []},
$                                                          {"rootLabel": null,
$                                                           "subForest": []}]},
$                                           {"rootLabel": null,
$                                            "subForest": []}]}]],
$                          [{"MachineName": ["fin", 1, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"MachineName": ["fin", 2, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"MachineName": ["fin", 3, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"MachineName": ["fin", 4, []]},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"Name": "numberLocations"},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"Name": "optVar"},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"Name": "orderWeights"},
$                           [{"rootLabel": {"Function_1D": []},
$                             "subForest": [{"rootLabel": null,
$                                            "subForest": []},
$                                           {"rootLabel": null,
$                                            "subForest": []}]}]],
$                          [{"Name": "plan"},
$                           [{"rootLabel": {"Set_ExplicitVarSizeWithMarker": []},
$                             "subForest": [{"rootLabel": {"Sequence_ExplicitBounded": []},
$                                            "subForest": [{"rootLabel": null,
$                                                           "subForest": []}]}]}]],
$                          [{"Name": "size"},
$                           [{"rootLabel": null,
$                             "subForest": []}]],
$                          [{"Name": "vehicleCapacity"},
$                           [{"rootLabel": null,
$                             "subForest": []}]]],
$  "originalDomains": [[{"Name": "numberLocations"}, {"DomainInt": []}],
$                      [{"Name": "orderWeights"},
$                       {"DomainFunction": [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                            {"Reference": [{"Name": "numberLocations"},
$                                                                                           null]}]}]},
$                                           {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}]}],
$                      [{"Name": "costs"},
$                       {"DomainFunction": [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$                                           {"DomainTuple": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                                             {"Reference": [{"Name": "numberLocations"},
$                                                                                                            null]}]}]},
$                                                            {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                                                             {"Reference": [{"Name": "numberLocations"},
$                                                                                                            null]}]}]}]},
$                                           {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 0}}}]}]}],
$                      [{"Name": "vehicleCapacity"}, {"DomainInt": []}],
$                      [{"Name": "plan"},
$                       {"DomainSet": [[],
$                                      {"SizeAttr_MinMaxSize": [{"Reference": [{"Name": "minVehicles"}, null]},
$                                                               {"Reference": [{"Name": "numberLocations"}, null]}]},
$                                      {"DomainSequence": [[],
$                                                          [{"SizeAttr_MinMaxSize": [{"Constant": {"ConstantInt": 1}},
$                                                                                    {"Reference": [{"Name": "numberLocations"},
$                                                                                                   null]}]},
$                                                           "JectivityAttr_Injective"],
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Reference": [{"Name": "numberLocations"},
$                                                                                                          null]}]}]}]}]}],
$                      [{"Name": "optVar"},
$                       {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 0}},
$                                                        {"Reference": [{"Name": "maxTotalCost"}, null]}]}]}]],
$  "questionAnswered": []}
